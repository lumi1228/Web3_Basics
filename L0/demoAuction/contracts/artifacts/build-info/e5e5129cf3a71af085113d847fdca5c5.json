{
	"id": "e5e5129cf3a71af085113d847fdca5c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NftAuction.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n\ncontract NftAuction is Initializable, UUPSUpgradeable {\n\n    // 结构体\n    struct Auction {\n        // 卖家\n        address seller;\n        // 拍卖持续时间\n        uint256 duration;\n        // 起始价格\n        uint256 startPrice;\n        // 开始时间\n        uint256 startTime;\n\n        // 是否结束\n        bool ended;\n        // 最高出价者\n        address highestBidder;\n        // 最高价格\n        uint256 highestBid;\n\n        // NFT合约地址\n        address nftContract;\n\n        // NFT ID\n        uint256 tokenId;\n    }\n\n\n\n    // 状态变量\n    mapping(uint256 => Auction) public auctions;\n    // 下一个拍卖ID\n    uint256 public nextAuctionId;\n    // 管理员地址\n    address public admin;\n\n    function initialize() initializer public {\n        admin = msg.sender;\n    }\n\n    // 创建拍卖\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public {\n        // 只有管理员可以创建拍卖\n        require(msg.sender == admin, \"Only admin can create auctions\");\n        // 检查参数\n        require(_duration > 1000 * 60, \"Duration must be greater than 0\");\n        require(_startPrice > 0, \"Start price must be greater than 0\");\n\n        // 转移NFT到合约\n        IERC721(_nftAddress).approve(address(this), _tokenId);\n        // IERC721(_nftAddress).safeTransferFrom(msg.sender, address(this), _tokenId);\n\n        auctions[nextAuctionId] = Auction({\n            seller: msg.sender,\n            duration: _duration,\n            startPrice: _startPrice,\n            ended: false,\n            highestBidder: address(0),\n            highestBid: 0,\n            startTime: block.timestamp,\n            nftContract: _nftAddress,\n            tokenId: _tokenId\n        });\n\n        nextAuctionId++;\n        \n    }\n\n    // 买家参与买单\n    function placeBid(uint256 _auctionID) external payable {\n        Auction storage auction = auctions[_auctionID];\n        // 判断当前拍卖是否结束\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\");\n        // 判断出价是否大于当前最高出价\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than the current highest bid\");\n        // 退回之前的最高出价者\n        if (auction.highestBidder != address(0)) {\n            payable(auction.highestBidder).transfer(auction.highestBid);\n        }\n        auction.highestBidder = msg.sender;\n        auction.highestBid = msg.value;\n    }\n\n\n    // 结束拍卖\n    function endAuction(uint256 _auctionID) external {\n        Auction storage auction = auctions[_auctionID];\n        // 判断当前拍卖是否结束\n        require(!auction.ended && auction.startTime + auction.duration < block.timestamp, \"Auction has not ended\");\n        // 转移NFT到最高出价者\n        IERC721(auction.nftContract).safeTransferFrom(address(this), auction.highestBidder, auction.tokenId);\n        // 转移剩余的资金到卖家\n        payable(address(this)).transfer(address(this).balance);\n        auction.ended = true;\n    }\n\n\n    function _authorizeUpgrade(address newImplementation) internal override view {\n        // 只有管理员可以升级合约\n        require(msg.sender == admin, \"Only admin can upgrade\");\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205eef4d4dbb26ebdfacb5aa620c28962de9c2ba7d7234814e2e4bdd3958d23ea564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205eef4d4dbb26ebdfacb5aa620c28962de9c2ba7d7234814e2e4bdd3958d23ea564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xEF 0x4D 0x4D 0xBB 0x26 0xEB 0xDF 0xAC 0xB5 0xAA PUSH3 0xC2896 0x2D 0xE9 0xC2 0xBA PUSH30 0x7234814E2E4BDD3958D23EA564736F6C634300081C003300000000000000 ",
							"sourceMap": "496:5741:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205eef4d4dbb26ebdfacb5aa620c28962de9c2ba7d7234814e2e4bdd3958d23ea564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xEF 0x4D 0x4D 0xBB 0x26 0xEB 0xDF 0xAC 0xB5 0xAA PUSH3 0xC2896 0x2D 0xE9 0xC2 0xBA PUSH30 0x7234814E2E4BDD3958D23EA564736F6C634300081C003300000000000000 ",
							"sourceMap": "496:5741:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eef4d4dbb26ebdfacb5aa620c28962de9c2ba7d7234814e2e4bdd3958d23ea564736f6c634300081c0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122073c2e390bbd5ec1b301cf97f6b6a5b68682475293ce059bc7fc488269c35127664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122073c2e390bbd5ec1b301cf97f6b6a5b68682475293ce059bc7fc488269c35127664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC2E390BBD5EC1B301CF97F6B6A5B68682475293C 0xE0 MSIZE 0xBC PUSH32 0xC488269C35127664736F6C634300081C00330000000000000000000000000000 ",
							"sourceMap": "1407:2774:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122073c2e390bbd5ec1b301cf97f6b6a5b68682475293ce059bc7fc488269c35127664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC2E390BBD5EC1B301CF97F6B6A5B68682475293C 0xE0 MSIZE 0xBC PUSH32 0xC488269C35127664736F6C634300081C00330000000000000000000000000000 ",
							"sourceMap": "1407:2774:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073c2e390bbd5ec1b301cf97f6b6a5b68682475293ce059bc7fc488269c35127664736f6c634300081c0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NftAuction.sol": {
				"NftAuction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "auctions",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "ended",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "highestBidder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "highestBid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "createAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_auctionID",
									"type": "uint256"
								}
							],
							"name": "endAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextAuctionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_auctionID",
									"type": "uint256"
								}
							],
							"name": "placeBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NftAuction.sol\":289:3650  contract NftAuction is Initializable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/NftAuction.sol\":289:3650  contract NftAuction is Initializable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/NftAuction.sol\":289:3650  contract NftAuction is Initializable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad3cb1cc\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb1cb48ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb9a2de3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc528482\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x4f1ef286\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x571a26a0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9979ef45\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_2:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":874:917  mapping(uint256 => Auction) public auctions */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":1032:1108  function initialize() initializer public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/NftAuction.sol\":2145:2866  function placeBid(uint256 _auctionID) external payable {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":1134:2113  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/NftAuction.sol\":2893:3448  function endAuction(uint256 _auctionID) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/NftAuction.sol\":1005:1025  address public admin */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":948:976  uint256 public nextAuctionId */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_68\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":874:917  mapping(uint256 => Auction) public auctions */\n    tag_26:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup10\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1032:1108  function initialize() initializer public {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_78:\n        /* \"contracts/NftAuction.sol\":1091:1101  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":1083:1088  admin */\n      0x02\n      0x00\n        /* \"contracts/NftAuction.sol\":1083:1101  admin = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":1032:1108  function initialize() initializer public {... */\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":2145:2866  function placeBid(uint256 _auctionID) external payable {... */\n    tag_34:\n        /* \"contracts/NftAuction.sol\":2210:2233  Auction storage auction */\n      0x00\n        /* \"contracts/NftAuction.sol\":2236:2244  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":2236:2256  auctions[_auctionID] */\n      0x00\n        /* \"contracts/NftAuction.sol\":2245:2255  _auctionID */\n      dup4\n        /* \"contracts/NftAuction.sol\":2236:2256  auctions[_auctionID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":2210:2256  Auction storage auction = auctions[_auctionID] */\n      swap1\n      pop\n        /* \"contracts/NftAuction.sol\":2317:2324  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":2317:2330  auction.ended */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NftAuction.sol\":2316:2330  !auction.ended */\n      iszero\n        /* \"contracts/NftAuction.sol\":2316:2388  !auction.ended && auction.startTime + auction.duration > block.timestamp */\n      dup1\n      iszero\n      tag_84\n      jumpi\n      pop\n        /* \"contracts/NftAuction.sol\":2373:2388  block.timestamp */\n      timestamp\n        /* \"contracts/NftAuction.sol\":2354:2361  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":2354:2370  auction.duration */\n      0x01\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":2334:2341  auction */\n      dup3\n        /* \"contracts/NftAuction.sol\":2334:2351  auction.startTime */\n      0x03\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":2334:2370  auction.startTime + auction.duration */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/NftAuction.sol\":2334:2388  auction.startTime + auction.duration > block.timestamp */\n      gt\n        /* \"contracts/NftAuction.sol\":2316:2388  !auction.ended && auction.startTime + auction.duration > block.timestamp */\n    tag_84:\n        /* \"contracts/NftAuction.sol\":2308:2410  require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/NftAuction.sol\":2494:2501  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":2494:2512  auction.highestBid */\n      0x05\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":2482:2491  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":2482:2512  msg.value > auction.highestBid */\n      gt\n        /* \"contracts/NftAuction.sol\":2482:2547  msg.value > auction.highestBid && msg.value >= auction.startPrice */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/NftAuction.sol\":2529:2536  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":2529:2547  auction.startPrice */\n      0x02\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":2516:2525  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":2516:2547  msg.value >= auction.startPrice */\n      lt\n      iszero\n        /* \"contracts/NftAuction.sol\":2482:2547  msg.value > auction.highestBid && msg.value >= auction.startPrice */\n    tag_90:\n        /* \"contracts/NftAuction.sol\":2474:2599  require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than the current highest bid\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/NftAuction.sol\":2688:2689  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":2655:2690  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":2655:2662  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":2655:2676  auction.highestBidder */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":2655:2690  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":2651:2776  if (auction.highestBidder != address(0)) {... */\n      tag_94\n      jumpi\n        /* \"contracts/NftAuction.sol\":2714:2721  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":2714:2735  auction.highestBidder */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":2706:2745  payable(auction.highestBidder).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":2706:2765  payable(auction.highestBidder).transfer(auction.highestBid) */\n      0x08fc\n        /* \"contracts/NftAuction.sol\":2746:2753  auction */\n      dup3\n        /* \"contracts/NftAuction.sol\":2746:2764  auction.highestBid */\n      0x05\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":2706:2765  payable(auction.highestBidder).transfer(auction.highestBid) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n        /* \"contracts/NftAuction.sol\":2651:2776  if (auction.highestBidder != address(0)) {... */\n    tag_94:\n        /* \"contracts/NftAuction.sol\":2809:2819  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":2785:2792  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":2785:2806  auction.highestBidder */\n      0x04\n      add\n      0x01\n        /* \"contracts/NftAuction.sol\":2785:2819  auction.highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":2850:2859  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":2829:2836  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":2829:2847  auction.highestBid */\n      0x05\n      add\n        /* \"contracts/NftAuction.sol\":2829:2859  auction.highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":2200:2866  {... */\n      pop\n        /* \"contracts/NftAuction.sol\":2145:2866  function placeBid(uint256 _auctionID) external payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_37:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1134:2113  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public {... */\n    tag_44:\n        /* \"contracts/NftAuction.sol\":1320:1325  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":1306:1325  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":1306:1316  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":1306:1325  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":1298:1360  require(msg.sender == admin, \"Only admin can create auctions\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/NftAuction.sol\":1414:1423  1000 * 60 */\n      0xea60\n        /* \"contracts/NftAuction.sol\":1402:1411  _duration */\n      dup5\n        /* \"contracts/NftAuction.sol\":1402:1423  _duration > 1000 * 60 */\n      gt\n        /* \"contracts/NftAuction.sol\":1394:1459  require(_duration > 1000 * 60, \"Duration must be greater than 0\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/NftAuction.sol\":1491:1492  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":1477:1488  _startPrice */\n      dup4\n        /* \"contracts/NftAuction.sol\":1477:1492  _startPrice > 0 */\n      gt\n        /* \"contracts/NftAuction.sol\":1469:1531  require(_startPrice > 0, \"Start price must be greater than 0\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/NftAuction.sol\":1580:1591  _nftAddress */\n      dup2\n        /* \"contracts/NftAuction.sol\":1572:1600  IERC721(_nftAddress).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NftAuction.sol\":1609:1613  this */\n      address\n        /* \"contracts/NftAuction.sol\":1616:1624  _tokenId */\n      dup4\n        /* \"contracts/NftAuction.sol\":1572:1625  IERC721(_nftAddress).approve(address(this), _tokenId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NftAuction.sol\":1779:1789  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1813:1822  _duration */\n      dup6\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1848:1859  _startPrice */\n      dup5\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1976:1991  block.timestamp */\n      timestamp\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1880:1885  false */\n      0x00\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1922:1923  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":1950:1951  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2018:2029  _nftAddress */\n      dup4\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2052:2060  _tokenId */\n      dup3\n        /* \"contracts/NftAuction.sol\":1749:2071  Auction({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftAuction.sol\":1723:1731  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":1723:1746  auctions[nextAuctionId] */\n      0x00\n        /* \"contracts/NftAuction.sol\":1732:1745  nextAuctionId */\n      sload(0x01)\n        /* \"contracts/NftAuction.sol\":1723:1746  auctions[nextAuctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":1723:2071  auctions[nextAuctionId] = Auction({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":2082:2095  nextAuctionId */\n      0x01\n      0x00\n        /* \"contracts/NftAuction.sol\":2082:2097  nextAuctionId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":1134:2113  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":2893:3448  function endAuction(uint256 _auctionID) external {... */\n    tag_48:\n        /* \"contracts/NftAuction.sol\":2952:2975  Auction storage auction */\n      0x00\n        /* \"contracts/NftAuction.sol\":2978:2986  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":2978:2998  auctions[_auctionID] */\n      0x00\n        /* \"contracts/NftAuction.sol\":2987:2997  _auctionID */\n      dup4\n        /* \"contracts/NftAuction.sol\":2978:2998  auctions[_auctionID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":2952:2998  Auction storage auction = auctions[_auctionID] */\n      swap1\n      pop\n        /* \"contracts/NftAuction.sol\":3059:3066  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3059:3072  auction.ended */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NftAuction.sol\":3058:3072  !auction.ended */\n      iszero\n        /* \"contracts/NftAuction.sol\":3058:3130  !auction.ended && auction.startTime + auction.duration < block.timestamp */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"contracts/NftAuction.sol\":3115:3130  block.timestamp */\n      timestamp\n        /* \"contracts/NftAuction.sol\":3096:3103  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3096:3112  auction.duration */\n      0x01\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3076:3083  auction */\n      dup3\n        /* \"contracts/NftAuction.sol\":3076:3093  auction.startTime */\n      0x03\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3076:3112  auction.startTime + auction.duration */\n      tag_116\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_116:\n        /* \"contracts/NftAuction.sol\":3076:3130  auction.startTime + auction.duration < block.timestamp */\n      lt\n        /* \"contracts/NftAuction.sol\":3058:3130  !auction.ended && auction.startTime + auction.duration < block.timestamp */\n    tag_115:\n        /* \"contracts/NftAuction.sol\":3050:3156  require(!auction.ended && auction.startTime + auction.duration < block.timestamp, \"Auction has not ended\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/NftAuction.sol\":3213:3220  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3213:3232  auction.nftContract */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3205:3250  IERC721(auction.nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NftAuction.sol\":3259:3263  this */\n      address\n        /* \"contracts/NftAuction.sol\":3266:3273  auction */\n      dup4\n        /* \"contracts/NftAuction.sol\":3266:3287  auction.highestBidder */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3289:3296  auction */\n      dup5\n        /* \"contracts/NftAuction.sol\":3289:3304  auction.tokenId */\n      0x07\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3205:3305  IERC721(auction.nftContract).safeTransferFrom(address(this), auction.highestBidder, auction.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":3373:3377  this */\n      address\n        /* \"contracts/NftAuction.sol\":3357:3388  payable(address(this)).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3357:3411  payable(address(this)).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/NftAuction.sol\":3389:3410  address(this).balance */\n      selfbalance\n        /* \"contracts/NftAuction.sol\":3357:3411  payable(address(this)).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n        /* \"contracts/NftAuction.sol\":3437:3441  true */\n      0x01\n        /* \"contracts/NftAuction.sol\":3421:3428  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3421:3434  auction.ended */\n      0x04\n      add\n      0x00\n        /* \"contracts/NftAuction.sol\":3421:3441  auction.ended = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":2942:3448  {... */\n      pop\n        /* \"contracts/NftAuction.sol\":2893:3448  function endAuction(uint256 _auctionID) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1005:1025  address public admin */\n    tag_51:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":948:976  uint256 public nextAuctionId */\n    tag_56:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":3455:3648  function _authorizeUpgrade(address newImplementation) internal override view {... */\n    tag_64:\n        /* \"contracts/NftAuction.sol\":3609:3614  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3595:3614  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3595:3605  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":3595:3614  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":3587:3641  require(msg.sender == admin, \"Only admin can upgrade\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/NftAuction.sol\":3455:3648  function _authorizeUpgrade(address newImplementation) internal override view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      0x01\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_154\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_155\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_157\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_158\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_160\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_161\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_162)\n    tag_159:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_163\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_164\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_169\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_155\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_175\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_174)\n    tag_175:\n      0x60\n      swap2\n      pop\n    tag_174:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_184)\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_180)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_180:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_191:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_192:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_193:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_194:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_195:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_252\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_194\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_196:\n        /* \"#utility.yul\":641:665   */\n      tag_254\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_195\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_255:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_197:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_257\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_196\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_198:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1081   */\n    tag_199:\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      0x00\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1087:1189   */\n    tag_200:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1179:1181   */\n      0x1f\n        /* \"#utility.yul\":1175:1182   */\n      not\n        /* \"#utility.yul\":1170:1172   */\n      0x1f\n        /* \"#utility.yul\":1163:1168   */\n      dup4\n        /* \"#utility.yul\":1159:1173   */\n      add\n        /* \"#utility.yul\":1155:1183   */\n      and\n        /* \"#utility.yul\":1145:1183   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1195:1375   */\n    tag_201:\n        /* \"#utility.yul\":1243:1320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1321   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x41\n        /* \"#utility.yul\":1337:1338   */\n      0x04\n        /* \"#utility.yul\":1330:1345   */\n      mstore\n        /* \"#utility.yul\":1364:1368   */\n      0x24\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1354:1369   */\n      revert\n        /* \"#utility.yul\":1381:1662   */\n    tag_202:\n        /* \"#utility.yul\":1464:1491   */\n      tag_263\n        /* \"#utility.yul\":1486:1490   */\n      dup3\n        /* \"#utility.yul\":1464:1491   */\n      tag_200\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1456:1462   */\n      dup2\n        /* \"#utility.yul\":1452:1492   */\n      add\n        /* \"#utility.yul\":1594:1600   */\n      dup2\n        /* \"#utility.yul\":1582:1592   */\n      dup2\n        /* \"#utility.yul\":1579:1601   */\n      lt\n        /* \"#utility.yul\":1558:1576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1546:1556   */\n      dup3\n        /* \"#utility.yul\":1543:1577   */\n      gt\n        /* \"#utility.yul\":1540:1602   */\n      or\n        /* \"#utility.yul\":1537:1625   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":1605:1623   */\n      tag_265\n      tag_201\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1537:1625   */\n    tag_264:\n        /* \"#utility.yul\":1645:1655   */\n      dup1\n        /* \"#utility.yul\":1641:1643   */\n      0x40\n        /* \"#utility.yul\":1634:1656   */\n      mstore\n        /* \"#utility.yul\":1424:1662   */\n      pop\n        /* \"#utility.yul\":1381:1662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1668:1797   */\n    tag_203:\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1729:1749   */\n      tag_267\n      tag_191\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1719:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1758:1791   */\n      tag_268\n        /* \"#utility.yul\":1786:1790   */\n      dup3\n        /* \"#utility.yul\":1778:1784   */\n      dup3\n        /* \"#utility.yul\":1758:1791   */\n      tag_202\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1668:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2110   */\n    tag_204:\n        /* \"#utility.yul\":1864:1868   */\n      0x00\n        /* \"#utility.yul\":1954:1972   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1946:1952   */\n      dup3\n        /* \"#utility.yul\":1943:1973   */\n      gt\n        /* \"#utility.yul\":1940:1996   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1976:1994   */\n      tag_271\n      tag_201\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1940:1996   */\n    tag_270:\n        /* \"#utility.yul\":2014:2043   */\n      tag_272\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2014:2043   */\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2006:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2102   */\n      0x20\n        /* \"#utility.yul\":2092:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2103   */\n      add\n        /* \"#utility.yul\":2080:2103   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2264   */\n    tag_205:\n        /* \"#utility.yul\":2214:2220   */\n      dup3\n        /* \"#utility.yul\":2209:2212   */\n      dup2\n        /* \"#utility.yul\":2204:2207   */\n      dup4\n        /* \"#utility.yul\":2191:2221   */\n      calldatacopy\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2246:2252   */\n      dup4\n        /* \"#utility.yul\":2241:2244   */\n      dup4\n        /* \"#utility.yul\":2237:2253   */\n      add\n        /* \"#utility.yul\":2230:2257   */\n      mstore\n        /* \"#utility.yul\":2116:2264   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2693   */\n    tag_206:\n        /* \"#utility.yul\":2347:2352   */\n      0x00\n        /* \"#utility.yul\":2372:2437   */\n      tag_275\n        /* \"#utility.yul\":2388:2436   */\n      tag_276\n        /* \"#utility.yul\":2429:2435   */\n      dup5\n        /* \"#utility.yul\":2388:2436   */\n      tag_204\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2372:2437   */\n      tag_203\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2363:2437   */\n      swap1\n      pop\n        /* \"#utility.yul\":2460:2466   */\n      dup3\n        /* \"#utility.yul\":2453:2458   */\n      dup2\n        /* \"#utility.yul\":2446:2467   */\n      mstore\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2491:2496   */\n      dup2\n        /* \"#utility.yul\":2487:2503   */\n      add\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2522:2525   */\n      dup5\n        /* \"#utility.yul\":2518:2534   */\n      add\n        /* \"#utility.yul\":2515:2540   */\n      gt\n        /* \"#utility.yul\":2512:2624   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2543:2622   */\n      tag_278\n      tag_199\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2512:2624   */\n    tag_277:\n        /* \"#utility.yul\":2633:2687   */\n      tag_279\n        /* \"#utility.yul\":2680:2686   */\n      dup5\n        /* \"#utility.yul\":2675:2678   */\n      dup3\n        /* \"#utility.yul\":2670:2673   */\n      dup6\n        /* \"#utility.yul\":2633:2687   */\n      tag_205\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2353:2693   */\n      pop\n        /* \"#utility.yul\":2270:2693   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:3050   */\n    tag_207:\n        /* \"#utility.yul\":2767:2772   */\n      0x00\n        /* \"#utility.yul\":2816:2819   */\n      dup3\n        /* \"#utility.yul\":2809:2813   */\n      0x1f\n        /* \"#utility.yul\":2801:2807   */\n      dup4\n        /* \"#utility.yul\":2797:2814   */\n      add\n        /* \"#utility.yul\":2793:2820   */\n      slt\n        /* \"#utility.yul\":2783:2905   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2824:2903   */\n      tag_282\n      tag_198\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2783:2905   */\n    tag_281:\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      calldataload\n        /* \"#utility.yul\":2966:3044   */\n      tag_283\n        /* \"#utility.yul\":3040:3043   */\n      dup5\n        /* \"#utility.yul\":3032:3038   */\n      dup3\n        /* \"#utility.yul\":3025:3029   */\n      0x20\n        /* \"#utility.yul\":3017:3023   */\n      dup7\n        /* \"#utility.yul\":3013:3030   */\n      add\n        /* \"#utility.yul\":2966:3044   */\n      tag_206\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2957:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2773:3050   */\n      pop\n        /* \"#utility.yul\":2712:3050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3056:3708   */\n    tag_15:\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3190:3192   */\n      0x40\n        /* \"#utility.yul\":3178:3187   */\n      dup4\n        /* \"#utility.yul\":3169:3176   */\n      dup6\n        /* \"#utility.yul\":3165:3188   */\n      sub\n        /* \"#utility.yul\":3161:3193   */\n      slt\n        /* \"#utility.yul\":3158:3277   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3196:3275   */\n      tag_286\n      tag_192\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3158:3277   */\n    tag_285:\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3341:3394   */\n      tag_287\n        /* \"#utility.yul\":3386:3393   */\n      dup6\n        /* \"#utility.yul\":3377:3383   */\n      dup3\n        /* \"#utility.yul\":3366:3375   */\n      dup7\n        /* \"#utility.yul\":3362:3384   */\n      add\n        /* \"#utility.yul\":3341:3394   */\n      tag_197\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3331:3394   */\n      swap3\n      pop\n        /* \"#utility.yul\":3287:3404   */\n      pop\n        /* \"#utility.yul\":3471:3473   */\n      0x20\n        /* \"#utility.yul\":3460:3469   */\n      dup4\n        /* \"#utility.yul\":3456:3474   */\n      add\n        /* \"#utility.yul\":3443:3475   */\n      calldataload\n        /* \"#utility.yul\":3502:3520   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3494:3500   */\n      dup2\n        /* \"#utility.yul\":3491:3521   */\n      gt\n        /* \"#utility.yul\":3488:3605   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3524:3603   */\n      tag_289\n      tag_193\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3488:3605   */\n    tag_288:\n        /* \"#utility.yul\":3629:3691   */\n      tag_290\n        /* \"#utility.yul\":3683:3690   */\n      dup6\n        /* \"#utility.yul\":3674:3680   */\n      dup3\n        /* \"#utility.yul\":3663:3672   */\n      dup7\n        /* \"#utility.yul\":3659:3681   */\n      add\n        /* \"#utility.yul\":3629:3691   */\n      tag_207\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3619:3691   */\n      swap2\n      pop\n        /* \"#utility.yul\":3414:3701   */\n      pop\n        /* \"#utility.yul\":3056:3708   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:3791   */\n    tag_208:\n        /* \"#utility.yul\":3751:3758   */\n      0x00\n        /* \"#utility.yul\":3780:3785   */\n      dup2\n        /* \"#utility.yul\":3769:3785   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3797:3915   */\n    tag_209:\n        /* \"#utility.yul\":3884:3908   */\n      tag_293\n        /* \"#utility.yul\":3902:3907   */\n      dup2\n        /* \"#utility.yul\":3884:3908   */\n      tag_208\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3879:3882   */\n      dup3\n        /* \"#utility.yul\":3872:3909   */\n      mstore\n        /* \"#utility.yul\":3797:3915   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4143   */\n    tag_21:\n        /* \"#utility.yul\":4014:4018   */\n      0x00\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4041:4050   */\n      dup3\n        /* \"#utility.yul\":4037:4055   */\n      add\n        /* \"#utility.yul\":4029:4055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4065:4136   */\n      tag_295\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4122:4131   */\n      dup4\n        /* \"#utility.yul\":4118:4135   */\n      add\n        /* \"#utility.yul\":4109:4115   */\n      dup5\n        /* \"#utility.yul\":4065:4136   */\n      tag_209\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3921:4143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4226   */\n    tag_210:\n        /* \"#utility.yul\":4186:4193   */\n      0x00\n        /* \"#utility.yul\":4215:4220   */\n      dup2\n        /* \"#utility.yul\":4204:4220   */\n      swap1\n      pop\n        /* \"#utility.yul\":4149:4226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4354   */\n    tag_211:\n        /* \"#utility.yul\":4305:4329   */\n      tag_298\n        /* \"#utility.yul\":4323:4328   */\n      dup2\n        /* \"#utility.yul\":4305:4329   */\n      tag_210\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4298:4303   */\n      dup2\n        /* \"#utility.yul\":4295:4330   */\n      eq\n        /* \"#utility.yul\":4285:4348   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4341:4342   */\n      0x00\n        /* \"#utility.yul\":4334:4346   */\n      revert\n        /* \"#utility.yul\":4285:4348   */\n    tag_299:\n        /* \"#utility.yul\":4232:4354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4360:4499   */\n    tag_212:\n        /* \"#utility.yul\":4406:4411   */\n      0x00\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4431:4451   */\n      calldataload\n        /* \"#utility.yul\":4422:4451   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4493   */\n      tag_301\n        /* \"#utility.yul\":4487:4492   */\n      dup2\n        /* \"#utility.yul\":4460:4493   */\n      tag_211\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4360:4499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4505:4834   */\n    tag_25:\n        /* \"#utility.yul\":4564:4570   */\n      0x00\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4601:4610   */\n      dup3\n        /* \"#utility.yul\":4592:4599   */\n      dup5\n        /* \"#utility.yul\":4588:4611   */\n      sub\n        /* \"#utility.yul\":4584:4616   */\n      slt\n        /* \"#utility.yul\":4581:4700   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4619:4698   */\n      tag_304\n      tag_192\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4581:4700   */\n    tag_303:\n        /* \"#utility.yul\":4739:4740   */\n      0x00\n        /* \"#utility.yul\":4764:4817   */\n      tag_305\n        /* \"#utility.yul\":4809:4816   */\n      dup5\n        /* \"#utility.yul\":4800:4806   */\n      dup3\n        /* \"#utility.yul\":4789:4798   */\n      dup6\n        /* \"#utility.yul\":4785:4807   */\n      add\n        /* \"#utility.yul\":4764:4817   */\n      tag_212\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4754:4817   */\n      swap2\n      pop\n        /* \"#utility.yul\":4710:4827   */\n      pop\n        /* \"#utility.yul\":4505:4834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4840:4958   */\n    tag_213:\n        /* \"#utility.yul\":4927:4951   */\n      tag_307\n        /* \"#utility.yul\":4945:4950   */\n      dup2\n        /* \"#utility.yul\":4927:4951   */\n      tag_195\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4922:4925   */\n      dup3\n        /* \"#utility.yul\":4915:4952   */\n      mstore\n        /* \"#utility.yul\":4840:4958   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5082   */\n    tag_214:\n        /* \"#utility.yul\":5051:5075   */\n      tag_309\n        /* \"#utility.yul\":5069:5074   */\n      dup2\n        /* \"#utility.yul\":5051:5075   */\n      tag_210\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5046:5049   */\n      dup3\n        /* \"#utility.yul\":5039:5076   */\n      mstore\n        /* \"#utility.yul\":4964:5082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5178   */\n    tag_215:\n        /* \"#utility.yul\":5122:5129   */\n      0x00\n        /* \"#utility.yul\":5165:5170   */\n      dup2\n        /* \"#utility.yul\":5158:5171   */\n      iszero\n        /* \"#utility.yul\":5151:5172   */\n      iszero\n        /* \"#utility.yul\":5140:5172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5184:5293   */\n    tag_216:\n        /* \"#utility.yul\":5265:5286   */\n      tag_312\n        /* \"#utility.yul\":5280:5285   */\n      dup2\n        /* \"#utility.yul\":5265:5286   */\n      tag_215\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5260:5263   */\n      dup3\n        /* \"#utility.yul\":5253:5287   */\n      mstore\n        /* \"#utility.yul\":5184:5293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5299:6395   */\n    tag_28:\n        /* \"#utility.yul\":5610:5614   */\n      0x00\n        /* \"#utility.yul\":5648:5651   */\n      0x0120\n        /* \"#utility.yul\":5637:5646   */\n      dup3\n        /* \"#utility.yul\":5633:5652   */\n      add\n        /* \"#utility.yul\":5625:5652   */\n      swap1\n      pop\n        /* \"#utility.yul\":5662:5733   */\n      tag_314\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup13\n        /* \"#utility.yul\":5662:5733   */\n      tag_213\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5743:5815   */\n      tag_315\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5800:5809   */\n      dup4\n        /* \"#utility.yul\":5796:5814   */\n      add\n        /* \"#utility.yul\":5787:5793   */\n      dup12\n        /* \"#utility.yul\":5743:5815   */\n      tag_214\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5825:5897   */\n      tag_316\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5882:5891   */\n      dup4\n        /* \"#utility.yul\":5878:5896   */\n      add\n        /* \"#utility.yul\":5869:5875   */\n      dup11\n        /* \"#utility.yul\":5825:5897   */\n      tag_214\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5907:5979   */\n      tag_317\n        /* \"#utility.yul\":5975:5977   */\n      0x60\n        /* \"#utility.yul\":5964:5973   */\n      dup4\n        /* \"#utility.yul\":5960:5978   */\n      add\n        /* \"#utility.yul\":5951:5957   */\n      dup10\n        /* \"#utility.yul\":5907:5979   */\n      tag_214\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5989:6056   */\n      tag_318\n        /* \"#utility.yul\":6051:6054   */\n      0x80\n        /* \"#utility.yul\":6040:6049   */\n      dup4\n        /* \"#utility.yul\":6036:6055   */\n      add\n        /* \"#utility.yul\":6027:6033   */\n      dup9\n        /* \"#utility.yul\":5989:6056   */\n      tag_216\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6066:6139   */\n      tag_319\n        /* \"#utility.yul\":6134:6137   */\n      0xa0\n        /* \"#utility.yul\":6123:6132   */\n      dup4\n        /* \"#utility.yul\":6119:6138   */\n      add\n        /* \"#utility.yul\":6110:6116   */\n      dup8\n        /* \"#utility.yul\":6066:6139   */\n      tag_213\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6149:6222   */\n      tag_320\n        /* \"#utility.yul\":6217:6220   */\n      0xc0\n        /* \"#utility.yul\":6206:6215   */\n      dup4\n        /* \"#utility.yul\":6202:6221   */\n      add\n        /* \"#utility.yul\":6193:6199   */\n      dup7\n        /* \"#utility.yul\":6149:6222   */\n      tag_214\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6232:6305   */\n      tag_321\n        /* \"#utility.yul\":6300:6303   */\n      0xe0\n        /* \"#utility.yul\":6289:6298   */\n      dup4\n        /* \"#utility.yul\":6285:6304   */\n      add\n        /* \"#utility.yul\":6276:6282   */\n      dup6\n        /* \"#utility.yul\":6232:6305   */\n      tag_213\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6315:6388   */\n      tag_322\n        /* \"#utility.yul\":6383:6386   */\n      0x0100\n        /* \"#utility.yul\":6372:6381   */\n      dup4\n        /* \"#utility.yul\":6368:6387   */\n      add\n        /* \"#utility.yul\":6359:6365   */\n      dup5\n        /* \"#utility.yul\":6315:6388   */\n      tag_214\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5299:6395   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6401:6500   */\n    tag_217:\n        /* \"#utility.yul\":6453:6459   */\n      0x00\n        /* \"#utility.yul\":6487:6492   */\n      dup2\n        /* \"#utility.yul\":6481:6493   */\n      mload\n        /* \"#utility.yul\":6471:6493   */\n      swap1\n      pop\n        /* \"#utility.yul\":6401:6500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6506:6675   */\n    tag_218:\n        /* \"#utility.yul\":6590:6601   */\n      0x00\n        /* \"#utility.yul\":6624:6630   */\n      dup3\n        /* \"#utility.yul\":6619:6622   */\n      dup3\n        /* \"#utility.yul\":6612:6631   */\n      mstore\n        /* \"#utility.yul\":6664:6668   */\n      0x20\n        /* \"#utility.yul\":6659:6662   */\n      dup3\n        /* \"#utility.yul\":6655:6669   */\n      add\n        /* \"#utility.yul\":6640:6669   */\n      swap1\n      pop\n        /* \"#utility.yul\":6506:6675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6681:6820   */\n    tag_219:\n        /* \"#utility.yul\":6770:6776   */\n      dup3\n        /* \"#utility.yul\":6765:6768   */\n      dup2\n        /* \"#utility.yul\":6760:6763   */\n      dup4\n        /* \"#utility.yul\":6754:6777   */\n      mcopy\n        /* \"#utility.yul\":6811:6812   */\n      0x00\n        /* \"#utility.yul\":6802:6808   */\n      dup4\n        /* \"#utility.yul\":6797:6800   */\n      dup4\n        /* \"#utility.yul\":6793:6809   */\n      add\n        /* \"#utility.yul\":6786:6813   */\n      mstore\n        /* \"#utility.yul\":6681:6820   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6826:7203   */\n    tag_220:\n        /* \"#utility.yul\":6914:6917   */\n      0x00\n        /* \"#utility.yul\":6942:6981   */\n      tag_327\n        /* \"#utility.yul\":6975:6980   */\n      dup3\n        /* \"#utility.yul\":6942:6981   */\n      tag_217\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6997:7068   */\n      tag_328\n        /* \"#utility.yul\":7061:7067   */\n      dup2\n        /* \"#utility.yul\":7056:7059   */\n      dup6\n        /* \"#utility.yul\":6997:7068   */\n      tag_218\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6990:7068   */\n      swap4\n      pop\n        /* \"#utility.yul\":7077:7142   */\n      tag_329\n        /* \"#utility.yul\":7135:7141   */\n      dup2\n        /* \"#utility.yul\":7130:7133   */\n      dup6\n        /* \"#utility.yul\":7123:7127   */\n      0x20\n        /* \"#utility.yul\":7116:7121   */\n      dup7\n        /* \"#utility.yul\":7112:7128   */\n      add\n        /* \"#utility.yul\":7077:7142   */\n      tag_219\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7167:7196   */\n      tag_330\n        /* \"#utility.yul\":7189:7195   */\n      dup2\n        /* \"#utility.yul\":7167:7196   */\n      tag_200\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7162:7165   */\n      dup5\n        /* \"#utility.yul\":7158:7197   */\n      add\n        /* \"#utility.yul\":7151:7197   */\n      swap2\n      pop\n        /* \"#utility.yul\":6918:7203   */\n      pop\n        /* \"#utility.yul\":6826:7203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7209:7522   */\n    tag_39:\n        /* \"#utility.yul\":7322:7326   */\n      0x00\n        /* \"#utility.yul\":7360:7362   */\n      0x20\n        /* \"#utility.yul\":7349:7358   */\n      dup3\n        /* \"#utility.yul\":7345:7363   */\n      add\n        /* \"#utility.yul\":7337:7363   */\n      swap1\n      pop\n        /* \"#utility.yul\":7409:7418   */\n      dup2\n        /* \"#utility.yul\":7403:7407   */\n      dup2\n        /* \"#utility.yul\":7399:7419   */\n      sub\n        /* \"#utility.yul\":7395:7396   */\n      0x00\n        /* \"#utility.yul\":7384:7393   */\n      dup4\n        /* \"#utility.yul\":7380:7397   */\n      add\n        /* \"#utility.yul\":7373:7420   */\n      mstore\n        /* \"#utility.yul\":7437:7515   */\n      tag_332\n        /* \"#utility.yul\":7510:7514   */\n      dup2\n        /* \"#utility.yul\":7501:7507   */\n      dup5\n        /* \"#utility.yul\":7437:7515   */\n      tag_220\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7429:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7209:7522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7528:8293   */\n    tag_43:\n        /* \"#utility.yul\":7614:7620   */\n      0x00\n        /* \"#utility.yul\":7622:7628   */\n      0x00\n        /* \"#utility.yul\":7630:7636   */\n      0x00\n        /* \"#utility.yul\":7638:7644   */\n      0x00\n        /* \"#utility.yul\":7687:7690   */\n      0x80\n        /* \"#utility.yul\":7675:7684   */\n      dup6\n        /* \"#utility.yul\":7666:7673   */\n      dup8\n        /* \"#utility.yul\":7662:7685   */\n      sub\n        /* \"#utility.yul\":7658:7691   */\n      slt\n        /* \"#utility.yul\":7655:7775   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7694:7773   */\n      tag_335\n      tag_192\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7655:7775   */\n    tag_334:\n        /* \"#utility.yul\":7814:7815   */\n      0x00\n        /* \"#utility.yul\":7839:7892   */\n      tag_336\n        /* \"#utility.yul\":7884:7891   */\n      dup8\n        /* \"#utility.yul\":7875:7881   */\n      dup3\n        /* \"#utility.yul\":7864:7873   */\n      dup9\n        /* \"#utility.yul\":7860:7882   */\n      add\n        /* \"#utility.yul\":7839:7892   */\n      tag_212\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7829:7892   */\n      swap5\n      pop\n        /* \"#utility.yul\":7785:7902   */\n      pop\n        /* \"#utility.yul\":7941:7943   */\n      0x20\n        /* \"#utility.yul\":7967:8020   */\n      tag_337\n        /* \"#utility.yul\":8012:8019   */\n      dup8\n        /* \"#utility.yul\":8003:8009   */\n      dup3\n        /* \"#utility.yul\":7992:8001   */\n      dup9\n        /* \"#utility.yul\":7988:8010   */\n      add\n        /* \"#utility.yul\":7967:8020   */\n      tag_212\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7957:8020   */\n      swap4\n      pop\n        /* \"#utility.yul\":7912:8030   */\n      pop\n        /* \"#utility.yul\":8069:8071   */\n      0x40\n        /* \"#utility.yul\":8095:8148   */\n      tag_338\n        /* \"#utility.yul\":8140:8147   */\n      dup8\n        /* \"#utility.yul\":8131:8137   */\n      dup3\n        /* \"#utility.yul\":8120:8129   */\n      dup9\n        /* \"#utility.yul\":8116:8138   */\n      add\n        /* \"#utility.yul\":8095:8148   */\n      tag_197\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8085:8148   */\n      swap3\n      pop\n        /* \"#utility.yul\":8040:8158   */\n      pop\n        /* \"#utility.yul\":8197:8199   */\n      0x60\n        /* \"#utility.yul\":8223:8276   */\n      tag_339\n        /* \"#utility.yul\":8268:8275   */\n      dup8\n        /* \"#utility.yul\":8259:8265   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      dup9\n        /* \"#utility.yul\":8244:8266   */\n      add\n        /* \"#utility.yul\":8223:8276   */\n      tag_212\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8213:8276   */\n      swap2\n      pop\n        /* \"#utility.yul\":8168:8286   */\n      pop\n        /* \"#utility.yul\":7528:8293   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8521   */\n    tag_53:\n        /* \"#utility.yul\":8392:8396   */\n      0x00\n        /* \"#utility.yul\":8430:8432   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8415:8433   */\n      add\n        /* \"#utility.yul\":8407:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8514   */\n      tag_341\n        /* \"#utility.yul\":8511:8512   */\n      0x00\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8513   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup5\n        /* \"#utility.yul\":8443:8514   */\n      tag_213\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8299:8521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8527:8749   */\n    tag_58:\n        /* \"#utility.yul\":8620:8624   */\n      0x00\n        /* \"#utility.yul\":8658:8660   */\n      0x20\n        /* \"#utility.yul\":8647:8656   */\n      dup3\n        /* \"#utility.yul\":8643:8661   */\n      add\n        /* \"#utility.yul\":8635:8661   */\n      swap1\n      pop\n        /* \"#utility.yul\":8671:8742   */\n      tag_343\n        /* \"#utility.yul\":8739:8740   */\n      0x00\n        /* \"#utility.yul\":8728:8737   */\n      dup4\n        /* \"#utility.yul\":8724:8741   */\n      add\n        /* \"#utility.yul\":8715:8721   */\n      dup5\n        /* \"#utility.yul\":8671:8742   */\n      tag_214\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8527:8749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8755:8840   */\n    tag_221:\n        /* \"#utility.yul\":8800:8807   */\n      0x00\n        /* \"#utility.yul\":8829:8834   */\n      dup2\n        /* \"#utility.yul\":8818:8834   */\n      swap1\n      pop\n        /* \"#utility.yul\":8755:8840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8846:8947   */\n    tag_222:\n        /* \"#utility.yul\":8882:8889   */\n      0x00\n        /* \"#utility.yul\":8922:8940   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8915:8920   */\n      dup3\n        /* \"#utility.yul\":8911:8941   */\n      and\n        /* \"#utility.yul\":8900:8941   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:8947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8953:9013   */\n    tag_223:\n        /* \"#utility.yul\":8981:8984   */\n      0x00\n        /* \"#utility.yul\":9002:9007   */\n      dup2\n        /* \"#utility.yul\":8995:9007   */\n      swap1\n      pop\n        /* \"#utility.yul\":8953:9013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9019:9175   */\n    tag_224:\n        /* \"#utility.yul\":9076:9085   */\n      0x00\n        /* \"#utility.yul\":9109:9169   */\n      tag_348\n        /* \"#utility.yul\":9126:9168   */\n      tag_349\n        /* \"#utility.yul\":9135:9167   */\n      tag_350\n        /* \"#utility.yul\":9161:9166   */\n      dup5\n        /* \"#utility.yul\":9135:9167   */\n      tag_221\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9126:9168   */\n      tag_223\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9109:9169   */\n      tag_222\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9096:9169   */\n      swap1\n      pop\n        /* \"#utility.yul\":9019:9175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9181:9326   */\n    tag_225:\n        /* \"#utility.yul\":9275:9319   */\n      tag_352\n        /* \"#utility.yul\":9313:9318   */\n      dup2\n        /* \"#utility.yul\":9275:9319   */\n      tag_224\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9270:9273   */\n      dup3\n        /* \"#utility.yul\":9263:9320   */\n      mstore\n        /* \"#utility.yul\":9181:9326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9332:9568   */\n    tag_82:\n        /* \"#utility.yul\":9432:9436   */\n      0x00\n        /* \"#utility.yul\":9470:9472   */\n      0x20\n        /* \"#utility.yul\":9459:9468   */\n      dup3\n        /* \"#utility.yul\":9455:9473   */\n      add\n        /* \"#utility.yul\":9447:9473   */\n      swap1\n      pop\n        /* \"#utility.yul\":9483:9561   */\n      tag_354\n        /* \"#utility.yul\":9558:9559   */\n      0x00\n        /* \"#utility.yul\":9547:9556   */\n      dup4\n        /* \"#utility.yul\":9543:9560   */\n      add\n        /* \"#utility.yul\":9534:9540   */\n      dup5\n        /* \"#utility.yul\":9483:9561   */\n      tag_225\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9332:9568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9574:9754   */\n    tag_226:\n        /* \"#utility.yul\":9622:9699   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9619:9620   */\n      0x00\n        /* \"#utility.yul\":9612:9700   */\n      mstore\n        /* \"#utility.yul\":9719:9723   */\n      0x11\n        /* \"#utility.yul\":9716:9717   */\n      0x04\n        /* \"#utility.yul\":9709:9724   */\n      mstore\n        /* \"#utility.yul\":9743:9747   */\n      0x24\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9733:9748   */\n      revert\n        /* \"#utility.yul\":9760:9951   */\n    tag_86:\n        /* \"#utility.yul\":9800:9803   */\n      0x00\n        /* \"#utility.yul\":9819:9839   */\n      tag_357\n        /* \"#utility.yul\":9837:9838   */\n      dup3\n        /* \"#utility.yul\":9819:9839   */\n      tag_210\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9814:9839   */\n      swap2\n      pop\n        /* \"#utility.yul\":9853:9873   */\n      tag_358\n        /* \"#utility.yul\":9871:9872   */\n      dup4\n        /* \"#utility.yul\":9853:9873   */\n      tag_210\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9848:9873   */\n      swap3\n      pop\n        /* \"#utility.yul\":9896:9897   */\n      dup3\n        /* \"#utility.yul\":9893:9894   */\n      dup3\n        /* \"#utility.yul\":9889:9898   */\n      add\n        /* \"#utility.yul\":9882:9898   */\n      swap1\n      pop\n        /* \"#utility.yul\":9917:9920   */\n      dup1\n        /* \"#utility.yul\":9914:9915   */\n      dup3\n        /* \"#utility.yul\":9911:9921   */\n      gt\n        /* \"#utility.yul\":9908:9944   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":9924:9942   */\n      tag_360\n      tag_226\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9908:9944   */\n    tag_359:\n        /* \"#utility.yul\":9760:9951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9957:10124   */\n    tag_227:\n        /* \"#utility.yul\":10097:10116   */\n      0x41756374696f6e2068617320656e646564000000000000000000000000000000\n        /* \"#utility.yul\":10093:10094   */\n      0x00\n        /* \"#utility.yul\":10085:10091   */\n      dup3\n        /* \"#utility.yul\":10081:10095   */\n      add\n        /* \"#utility.yul\":10074:10117   */\n      mstore\n        /* \"#utility.yul\":9957:10124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10130:10496   */\n    tag_228:\n        /* \"#utility.yul\":10272:10275   */\n      0x00\n        /* \"#utility.yul\":10293:10360   */\n      tag_363\n        /* \"#utility.yul\":10357:10359   */\n      0x11\n        /* \"#utility.yul\":10352:10355   */\n      dup4\n        /* \"#utility.yul\":10293:10360   */\n      tag_218\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10286:10360   */\n      swap2\n      pop\n        /* \"#utility.yul\":10369:10462   */\n      tag_364\n        /* \"#utility.yul\":10458:10461   */\n      dup3\n        /* \"#utility.yul\":10369:10462   */\n      tag_227\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10487:10489   */\n      0x20\n        /* \"#utility.yul\":10482:10485   */\n      dup3\n        /* \"#utility.yul\":10478:10490   */\n      add\n        /* \"#utility.yul\":10471:10490   */\n      swap1\n      pop\n        /* \"#utility.yul\":10130:10496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10502:10921   */\n    tag_89:\n        /* \"#utility.yul\":10668:10672   */\n      0x00\n        /* \"#utility.yul\":10706:10708   */\n      0x20\n        /* \"#utility.yul\":10695:10704   */\n      dup3\n        /* \"#utility.yul\":10691:10709   */\n      add\n        /* \"#utility.yul\":10683:10709   */\n      swap1\n      pop\n        /* \"#utility.yul\":10755:10764   */\n      dup2\n        /* \"#utility.yul\":10749:10753   */\n      dup2\n        /* \"#utility.yul\":10745:10765   */\n      sub\n        /* \"#utility.yul\":10741:10742   */\n      0x00\n        /* \"#utility.yul\":10730:10739   */\n      dup4\n        /* \"#utility.yul\":10726:10743   */\n      add\n        /* \"#utility.yul\":10719:10766   */\n      mstore\n        /* \"#utility.yul\":10783:10914   */\n      tag_366\n        /* \"#utility.yul\":10909:10913   */\n      dup2\n        /* \"#utility.yul\":10783:10914   */\n      tag_228\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10775:10914   */\n      swap1\n      pop\n        /* \"#utility.yul\":10502:10921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10927:11161   */\n    tag_229:\n        /* \"#utility.yul\":11067:11101   */\n      0x426964206d75737420626520686967686572207468616e207468652063757272\n        /* \"#utility.yul\":11063:11064   */\n      0x00\n        /* \"#utility.yul\":11055:11061   */\n      dup3\n        /* \"#utility.yul\":11051:11065   */\n      add\n        /* \"#utility.yul\":11044:11102   */\n      mstore\n        /* \"#utility.yul\":11136:11153   */\n      0x656e742068696768657374206269640000000000000000000000000000000000\n        /* \"#utility.yul\":11131:11133   */\n      0x20\n        /* \"#utility.yul\":11123:11129   */\n      dup3\n        /* \"#utility.yul\":11119:11134   */\n      add\n        /* \"#utility.yul\":11112:11154   */\n      mstore\n        /* \"#utility.yul\":10927:11161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11167:11533   */\n    tag_230:\n        /* \"#utility.yul\":11309:11312   */\n      0x00\n        /* \"#utility.yul\":11330:11397   */\n      tag_369\n        /* \"#utility.yul\":11394:11396   */\n      0x2f\n        /* \"#utility.yul\":11389:11392   */\n      dup4\n        /* \"#utility.yul\":11330:11397   */\n      tag_218\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11323:11397   */\n      swap2\n      pop\n        /* \"#utility.yul\":11406:11499   */\n      tag_370\n        /* \"#utility.yul\":11495:11498   */\n      dup3\n        /* \"#utility.yul\":11406:11499   */\n      tag_229\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11524:11526   */\n      0x40\n        /* \"#utility.yul\":11519:11522   */\n      dup3\n        /* \"#utility.yul\":11515:11527   */\n      add\n        /* \"#utility.yul\":11508:11527   */\n      swap1\n      pop\n        /* \"#utility.yul\":11167:11533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11958   */\n    tag_93:\n        /* \"#utility.yul\":11705:11709   */\n      0x00\n        /* \"#utility.yul\":11743:11745   */\n      0x20\n        /* \"#utility.yul\":11732:11741   */\n      dup3\n        /* \"#utility.yul\":11728:11746   */\n      add\n        /* \"#utility.yul\":11720:11746   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:11801   */\n      dup2\n        /* \"#utility.yul\":11786:11790   */\n      dup2\n        /* \"#utility.yul\":11782:11802   */\n      sub\n        /* \"#utility.yul\":11778:11779   */\n      0x00\n        /* \"#utility.yul\":11767:11776   */\n      dup4\n        /* \"#utility.yul\":11763:11780   */\n      add\n        /* \"#utility.yul\":11756:11803   */\n      mstore\n        /* \"#utility.yul\":11820:11951   */\n      tag_372\n        /* \"#utility.yul\":11946:11950   */\n      dup2\n        /* \"#utility.yul\":11820:11951   */\n      tag_230\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11812:11951   */\n      swap1\n      pop\n        /* \"#utility.yul\":11539:11958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11964:12144   */\n    tag_231:\n        /* \"#utility.yul\":12104:12136   */\n      0x4f6e6c792061646d696e2063616e206372656174652061756374696f6e730000\n        /* \"#utility.yul\":12100:12101   */\n      0x00\n        /* \"#utility.yul\":12092:12098   */\n      dup3\n        /* \"#utility.yul\":12088:12102   */\n      add\n        /* \"#utility.yul\":12081:12137   */\n      mstore\n        /* \"#utility.yul\":11964:12144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12150:12516   */\n    tag_232:\n        /* \"#utility.yul\":12292:12295   */\n      0x00\n        /* \"#utility.yul\":12313:12380   */\n      tag_375\n        /* \"#utility.yul\":12377:12379   */\n      0x1e\n        /* \"#utility.yul\":12372:12375   */\n      dup4\n        /* \"#utility.yul\":12313:12380   */\n      tag_218\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12306:12380   */\n      swap2\n      pop\n        /* \"#utility.yul\":12389:12482   */\n      tag_376\n        /* \"#utility.yul\":12478:12481   */\n      dup3\n        /* \"#utility.yul\":12389:12482   */\n      tag_231\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12507:12509   */\n      0x20\n        /* \"#utility.yul\":12502:12505   */\n      dup3\n        /* \"#utility.yul\":12498:12510   */\n      add\n        /* \"#utility.yul\":12491:12510   */\n      swap1\n      pop\n        /* \"#utility.yul\":12150:12516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12522:12941   */\n    tag_100:\n        /* \"#utility.yul\":12688:12692   */\n      0x00\n        /* \"#utility.yul\":12726:12728   */\n      0x20\n        /* \"#utility.yul\":12715:12724   */\n      dup3\n        /* \"#utility.yul\":12711:12729   */\n      add\n        /* \"#utility.yul\":12703:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12775:12784   */\n      dup2\n        /* \"#utility.yul\":12769:12773   */\n      dup2\n        /* \"#utility.yul\":12765:12785   */\n      sub\n        /* \"#utility.yul\":12761:12762   */\n      0x00\n        /* \"#utility.yul\":12750:12759   */\n      dup4\n        /* \"#utility.yul\":12746:12763   */\n      add\n        /* \"#utility.yul\":12739:12786   */\n      mstore\n        /* \"#utility.yul\":12803:12934   */\n      tag_378\n        /* \"#utility.yul\":12929:12933   */\n      dup2\n        /* \"#utility.yul\":12803:12934   */\n      tag_232\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12795:12934   */\n      swap1\n      pop\n        /* \"#utility.yul\":12522:12941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13128   */\n    tag_233:\n        /* \"#utility.yul\":13087:13120   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e203000\n        /* \"#utility.yul\":13083:13084   */\n      0x00\n        /* \"#utility.yul\":13075:13081   */\n      dup3\n        /* \"#utility.yul\":13071:13085   */\n      add\n        /* \"#utility.yul\":13064:13121   */\n      mstore\n        /* \"#utility.yul\":12947:13128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13134:13500   */\n    tag_234:\n        /* \"#utility.yul\":13276:13279   */\n      0x00\n        /* \"#utility.yul\":13297:13364   */\n      tag_381\n        /* \"#utility.yul\":13361:13363   */\n      0x1f\n        /* \"#utility.yul\":13356:13359   */\n      dup4\n        /* \"#utility.yul\":13297:13364   */\n      tag_218\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13290:13364   */\n      swap2\n      pop\n        /* \"#utility.yul\":13373:13466   */\n      tag_382\n        /* \"#utility.yul\":13462:13465   */\n      dup3\n        /* \"#utility.yul\":13373:13466   */\n      tag_233\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13491:13493   */\n      0x20\n        /* \"#utility.yul\":13486:13489   */\n      dup3\n        /* \"#utility.yul\":13482:13494   */\n      add\n        /* \"#utility.yul\":13475:13494   */\n      swap1\n      pop\n        /* \"#utility.yul\":13134:13500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13506:13925   */\n    tag_103:\n        /* \"#utility.yul\":13672:13676   */\n      0x00\n        /* \"#utility.yul\":13710:13712   */\n      0x20\n        /* \"#utility.yul\":13699:13708   */\n      dup3\n        /* \"#utility.yul\":13695:13713   */\n      add\n        /* \"#utility.yul\":13687:13713   */\n      swap1\n      pop\n        /* \"#utility.yul\":13759:13768   */\n      dup2\n        /* \"#utility.yul\":13753:13757   */\n      dup2\n        /* \"#utility.yul\":13749:13769   */\n      sub\n        /* \"#utility.yul\":13745:13746   */\n      0x00\n        /* \"#utility.yul\":13734:13743   */\n      dup4\n        /* \"#utility.yul\":13730:13747   */\n      add\n        /* \"#utility.yul\":13723:13770   */\n      mstore\n        /* \"#utility.yul\":13787:13918   */\n      tag_384\n        /* \"#utility.yul\":13913:13917   */\n      dup2\n        /* \"#utility.yul\":13787:13918   */\n      tag_234\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":13779:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13506:13925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13931:14152   */\n    tag_235:\n        /* \"#utility.yul\":14071:14105   */\n      0x5374617274207072696365206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":14067:14068   */\n      0x00\n        /* \"#utility.yul\":14059:14065   */\n      dup3\n        /* \"#utility.yul\":14055:14069   */\n      add\n        /* \"#utility.yul\":14048:14106   */\n      mstore\n        /* \"#utility.yul\":14140:14144   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14135:14137   */\n      0x20\n        /* \"#utility.yul\":14127:14133   */\n      dup3\n        /* \"#utility.yul\":14123:14138   */\n      add\n        /* \"#utility.yul\":14116:14145   */\n      mstore\n        /* \"#utility.yul\":13931:14152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14158:14524   */\n    tag_236:\n        /* \"#utility.yul\":14300:14303   */\n      0x00\n        /* \"#utility.yul\":14321:14388   */\n      tag_387\n        /* \"#utility.yul\":14385:14387   */\n      0x22\n        /* \"#utility.yul\":14380:14383   */\n      dup4\n        /* \"#utility.yul\":14321:14388   */\n      tag_218\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14314:14388   */\n      swap2\n      pop\n        /* \"#utility.yul\":14397:14490   */\n      tag_388\n        /* \"#utility.yul\":14486:14489   */\n      dup3\n        /* \"#utility.yul\":14397:14490   */\n      tag_235\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14515:14517   */\n      0x40\n        /* \"#utility.yul\":14510:14513   */\n      dup3\n        /* \"#utility.yul\":14506:14518   */\n      add\n        /* \"#utility.yul\":14499:14518   */\n      swap1\n      pop\n        /* \"#utility.yul\":14158:14524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14530:14949   */\n    tag_106:\n        /* \"#utility.yul\":14696:14700   */\n      0x00\n        /* \"#utility.yul\":14734:14736   */\n      0x20\n        /* \"#utility.yul\":14723:14732   */\n      dup3\n        /* \"#utility.yul\":14719:14737   */\n      add\n        /* \"#utility.yul\":14711:14737   */\n      swap1\n      pop\n        /* \"#utility.yul\":14783:14792   */\n      dup2\n        /* \"#utility.yul\":14777:14781   */\n      dup2\n        /* \"#utility.yul\":14773:14793   */\n      sub\n        /* \"#utility.yul\":14769:14770   */\n      0x00\n        /* \"#utility.yul\":14758:14767   */\n      dup4\n        /* \"#utility.yul\":14754:14771   */\n      add\n        /* \"#utility.yul\":14747:14794   */\n      mstore\n        /* \"#utility.yul\":14811:14942   */\n      tag_390\n        /* \"#utility.yul\":14937:14941   */\n      dup2\n        /* \"#utility.yul\":14811:14942   */\n      tag_236\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":14803:14942   */\n      swap1\n      pop\n        /* \"#utility.yul\":14530:14949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14955:15287   */\n    tag_108:\n        /* \"#utility.yul\":15076:15080   */\n      0x00\n        /* \"#utility.yul\":15114:15116   */\n      0x40\n        /* \"#utility.yul\":15103:15112   */\n      dup3\n        /* \"#utility.yul\":15099:15117   */\n      add\n        /* \"#utility.yul\":15091:15117   */\n      swap1\n      pop\n        /* \"#utility.yul\":15127:15198   */\n      tag_392\n        /* \"#utility.yul\":15195:15196   */\n      0x00\n        /* \"#utility.yul\":15184:15193   */\n      dup4\n        /* \"#utility.yul\":15180:15197   */\n      add\n        /* \"#utility.yul\":15171:15177   */\n      dup6\n        /* \"#utility.yul\":15127:15198   */\n      tag_213\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":15208:15280   */\n      tag_393\n        /* \"#utility.yul\":15276:15278   */\n      0x20\n        /* \"#utility.yul\":15265:15274   */\n      dup4\n        /* \"#utility.yul\":15261:15279   */\n      add\n        /* \"#utility.yul\":15252:15258   */\n      dup5\n        /* \"#utility.yul\":15208:15280   */\n      tag_214\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14955:15287   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15293:15526   */\n    tag_113:\n        /* \"#utility.yul\":15332:15335   */\n      0x00\n        /* \"#utility.yul\":15355:15379   */\n      tag_395\n        /* \"#utility.yul\":15373:15378   */\n      dup3\n        /* \"#utility.yul\":15355:15379   */\n      tag_210\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15346:15379   */\n      swap2\n      pop\n        /* \"#utility.yul\":15401:15467   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15394:15399   */\n      dup3\n        /* \"#utility.yul\":15391:15468   */\n      sub\n        /* \"#utility.yul\":15388:15491   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":15471:15489   */\n      tag_397\n      tag_226\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15388:15491   */\n    tag_396:\n        /* \"#utility.yul\":15518:15519   */\n      0x01\n        /* \"#utility.yul\":15511:15516   */\n      dup3\n        /* \"#utility.yul\":15507:15520   */\n      add\n        /* \"#utility.yul\":15500:15520   */\n      swap1\n      pop\n        /* \"#utility.yul\":15293:15526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15532:15703   */\n    tag_237:\n        /* \"#utility.yul\":15672:15695   */\n      0x41756374696f6e20686173206e6f7420656e6465640000000000000000000000\n        /* \"#utility.yul\":15668:15669   */\n      0x00\n        /* \"#utility.yul\":15660:15666   */\n      dup3\n        /* \"#utility.yul\":15656:15670   */\n      add\n        /* \"#utility.yul\":15649:15696   */\n      mstore\n        /* \"#utility.yul\":15532:15703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15709:16075   */\n    tag_238:\n        /* \"#utility.yul\":15851:15854   */\n      0x00\n        /* \"#utility.yul\":15872:15939   */\n      tag_400\n        /* \"#utility.yul\":15936:15938   */\n      0x15\n        /* \"#utility.yul\":15931:15934   */\n      dup4\n        /* \"#utility.yul\":15872:15939   */\n      tag_218\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":15865:15939   */\n      swap2\n      pop\n        /* \"#utility.yul\":15948:16041   */\n      tag_401\n        /* \"#utility.yul\":16037:16040   */\n      dup3\n        /* \"#utility.yul\":15948:16041   */\n      tag_237\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16066:16068   */\n      0x20\n        /* \"#utility.yul\":16061:16064   */\n      dup3\n        /* \"#utility.yul\":16057:16069   */\n      add\n        /* \"#utility.yul\":16050:16069   */\n      swap1\n      pop\n        /* \"#utility.yul\":15709:16075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16081:16500   */\n    tag_119:\n        /* \"#utility.yul\":16247:16251   */\n      0x00\n        /* \"#utility.yul\":16285:16287   */\n      0x20\n        /* \"#utility.yul\":16274:16283   */\n      dup3\n        /* \"#utility.yul\":16270:16288   */\n      add\n        /* \"#utility.yul\":16262:16288   */\n      swap1\n      pop\n        /* \"#utility.yul\":16334:16343   */\n      dup2\n        /* \"#utility.yul\":16328:16332   */\n      dup2\n        /* \"#utility.yul\":16324:16344   */\n      sub\n        /* \"#utility.yul\":16320:16321   */\n      0x00\n        /* \"#utility.yul\":16309:16318   */\n      dup4\n        /* \"#utility.yul\":16305:16322   */\n      add\n        /* \"#utility.yul\":16298:16345   */\n      mstore\n        /* \"#utility.yul\":16362:16493   */\n      tag_403\n        /* \"#utility.yul\":16488:16492   */\n      dup2\n        /* \"#utility.yul\":16362:16493   */\n      tag_238\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":16354:16493   */\n      swap1\n      pop\n        /* \"#utility.yul\":16081:16500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16506:16948   */\n    tag_121:\n        /* \"#utility.yul\":16655:16659   */\n      0x00\n        /* \"#utility.yul\":16693:16695   */\n      0x60\n        /* \"#utility.yul\":16682:16691   */\n      dup3\n        /* \"#utility.yul\":16678:16696   */\n      add\n        /* \"#utility.yul\":16670:16696   */\n      swap1\n      pop\n        /* \"#utility.yul\":16706:16777   */\n      tag_405\n        /* \"#utility.yul\":16774:16775   */\n      0x00\n        /* \"#utility.yul\":16763:16772   */\n      dup4\n        /* \"#utility.yul\":16759:16776   */\n      add\n        /* \"#utility.yul\":16750:16756   */\n      dup7\n        /* \"#utility.yul\":16706:16777   */\n      tag_213\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16787:16859   */\n      tag_406\n        /* \"#utility.yul\":16855:16857   */\n      0x20\n        /* \"#utility.yul\":16844:16853   */\n      dup4\n        /* \"#utility.yul\":16840:16858   */\n      add\n        /* \"#utility.yul\":16831:16837   */\n      dup6\n        /* \"#utility.yul\":16787:16859   */\n      tag_213\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":16869:16941   */\n      tag_407\n        /* \"#utility.yul\":16937:16939   */\n      0x40\n        /* \"#utility.yul\":16926:16935   */\n      dup4\n        /* \"#utility.yul\":16922:16940   */\n      add\n        /* \"#utility.yul\":16913:16919   */\n      dup5\n        /* \"#utility.yul\":16869:16941   */\n      tag_214\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16506:16948   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16954:17126   */\n    tag_239:\n        /* \"#utility.yul\":17094:17118   */\n      0x4f6e6c792061646d696e2063616e207570677261646500000000000000000000\n        /* \"#utility.yul\":17090:17091   */\n      0x00\n        /* \"#utility.yul\":17082:17088   */\n      dup3\n        /* \"#utility.yul\":17078:17092   */\n      add\n        /* \"#utility.yul\":17071:17119   */\n      mstore\n        /* \"#utility.yul\":16954:17126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17132:17498   */\n    tag_240:\n        /* \"#utility.yul\":17274:17277   */\n      0x00\n        /* \"#utility.yul\":17295:17362   */\n      tag_410\n        /* \"#utility.yul\":17359:17361   */\n      0x16\n        /* \"#utility.yul\":17354:17357   */\n      dup4\n        /* \"#utility.yul\":17295:17362   */\n      tag_218\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":17288:17362   */\n      swap2\n      pop\n        /* \"#utility.yul\":17371:17464   */\n      tag_411\n        /* \"#utility.yul\":17460:17463   */\n      dup3\n        /* \"#utility.yul\":17371:17464   */\n      tag_239\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":17489:17491   */\n      0x20\n        /* \"#utility.yul\":17484:17487   */\n      dup3\n        /* \"#utility.yul\":17480:17492   */\n      add\n        /* \"#utility.yul\":17473:17492   */\n      swap1\n      pop\n        /* \"#utility.yul\":17132:17498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17504:17923   */\n    tag_135:\n        /* \"#utility.yul\":17670:17674   */\n      0x00\n        /* \"#utility.yul\":17708:17710   */\n      0x20\n        /* \"#utility.yul\":17697:17706   */\n      dup3\n        /* \"#utility.yul\":17693:17711   */\n      add\n        /* \"#utility.yul\":17685:17711   */\n      swap1\n      pop\n        /* \"#utility.yul\":17757:17766   */\n      dup2\n        /* \"#utility.yul\":17751:17755   */\n      dup2\n        /* \"#utility.yul\":17747:17767   */\n      sub\n        /* \"#utility.yul\":17743:17744   */\n      0x00\n        /* \"#utility.yul\":17732:17741   */\n      dup4\n        /* \"#utility.yul\":17728:17745   */\n      add\n        /* \"#utility.yul\":17721:17768   */\n      mstore\n        /* \"#utility.yul\":17785:17916   */\n      tag_413\n        /* \"#utility.yul\":17911:17915   */\n      dup2\n        /* \"#utility.yul\":17785:17916   */\n      tag_240\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17777:17916   */\n      swap1\n      pop\n        /* \"#utility.yul\":17504:17923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17929:18051   */\n    tag_241:\n        /* \"#utility.yul\":18002:18026   */\n      tag_415\n        /* \"#utility.yul\":18020:18025   */\n      dup2\n        /* \"#utility.yul\":18002:18026   */\n      tag_208\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":17995:18000   */\n      dup2\n        /* \"#utility.yul\":17992:18027   */\n      eq\n        /* \"#utility.yul\":17982:18045   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":18041:18042   */\n      0x00\n        /* \"#utility.yul\":18038:18039   */\n      0x00\n        /* \"#utility.yul\":18031:18043   */\n      revert\n        /* \"#utility.yul\":17982:18045   */\n    tag_416:\n        /* \"#utility.yul\":17929:18051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18057:18200   */\n    tag_242:\n        /* \"#utility.yul\":18114:18119   */\n      0x00\n        /* \"#utility.yul\":18145:18151   */\n      dup2\n        /* \"#utility.yul\":18139:18152   */\n      mload\n        /* \"#utility.yul\":18130:18152   */\n      swap1\n      pop\n        /* \"#utility.yul\":18161:18194   */\n      tag_418\n        /* \"#utility.yul\":18188:18193   */\n      dup2\n        /* \"#utility.yul\":18161:18194   */\n      tag_241\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":18057:18200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18206:18557   */\n    tag_139:\n        /* \"#utility.yul\":18276:18282   */\n      0x00\n        /* \"#utility.yul\":18325:18327   */\n      0x20\n        /* \"#utility.yul\":18313:18322   */\n      dup3\n        /* \"#utility.yul\":18304:18311   */\n      dup5\n        /* \"#utility.yul\":18300:18323   */\n      sub\n        /* \"#utility.yul\":18296:18328   */\n      slt\n        /* \"#utility.yul\":18293:18412   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":18331:18410   */\n      tag_421\n      tag_192\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":18293:18412   */\n    tag_420:\n        /* \"#utility.yul\":18451:18452   */\n      0x00\n        /* \"#utility.yul\":18476:18540   */\n      tag_422\n        /* \"#utility.yul\":18532:18539   */\n      dup5\n        /* \"#utility.yul\":18523:18529   */\n      dup3\n        /* \"#utility.yul\":18512:18521   */\n      dup6\n        /* \"#utility.yul\":18508:18530   */\n      add\n        /* \"#utility.yul\":18476:18540   */\n      tag_242\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":18466:18540   */\n      swap2\n      pop\n        /* \"#utility.yul\":18422:18550   */\n      pop\n        /* \"#utility.yul\":18206:18557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18563:18661   */\n    tag_243:\n        /* \"#utility.yul\":18614:18620   */\n      0x00\n        /* \"#utility.yul\":18648:18653   */\n      dup2\n        /* \"#utility.yul\":18642:18654   */\n      mload\n        /* \"#utility.yul\":18632:18654   */\n      swap1\n      pop\n        /* \"#utility.yul\":18563:18661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18667:18814   */\n    tag_244:\n        /* \"#utility.yul\":18768:18779   */\n      0x00\n        /* \"#utility.yul\":18805:18808   */\n      dup2\n        /* \"#utility.yul\":18790:18808   */\n      swap1\n      pop\n        /* \"#utility.yul\":18667:18814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18820:19206   */\n    tag_245:\n        /* \"#utility.yul\":18924:18927   */\n      0x00\n        /* \"#utility.yul\":18952:18990   */\n      tag_426\n        /* \"#utility.yul\":18984:18989   */\n      dup3\n        /* \"#utility.yul\":18952:18990   */\n      tag_243\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":19006:19094   */\n      tag_427\n        /* \"#utility.yul\":19087:19093   */\n      dup2\n        /* \"#utility.yul\":19082:19085   */\n      dup6\n        /* \"#utility.yul\":19006:19094   */\n      tag_244\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":18999:19094   */\n      swap4\n      pop\n        /* \"#utility.yul\":19103:19168   */\n      tag_428\n        /* \"#utility.yul\":19161:19167   */\n      dup2\n        /* \"#utility.yul\":19156:19159   */\n      dup6\n        /* \"#utility.yul\":19149:19153   */\n      0x20\n        /* \"#utility.yul\":19142:19147   */\n      dup7\n        /* \"#utility.yul\":19138:19154   */\n      add\n        /* \"#utility.yul\":19103:19168   */\n      tag_219\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":19193:19199   */\n      dup1\n        /* \"#utility.yul\":19188:19191   */\n      dup5\n        /* \"#utility.yul\":19184:19200   */\n      add\n        /* \"#utility.yul\":19177:19200   */\n      swap2\n      pop\n        /* \"#utility.yul\":18928:19206   */\n      pop\n        /* \"#utility.yul\":18820:19206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19212:19483   */\n    tag_172:\n        /* \"#utility.yul\":19342:19345   */\n      0x00\n        /* \"#utility.yul\":19364:19457   */\n      tag_430\n        /* \"#utility.yul\":19453:19456   */\n      dup3\n        /* \"#utility.yul\":19444:19450   */\n      dup5\n        /* \"#utility.yul\":19364:19457   */\n      tag_245\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":19357:19457   */\n      swap2\n      pop\n        /* \"#utility.yul\":19474:19477   */\n      dup2\n        /* \"#utility.yul\":19467:19477   */\n      swap1\n      pop\n        /* \"#utility.yul\":19212:19483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f025e92b2725f2578b1f1e646ab9c0f4b322ca91560df6bed98274701a52414164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f5ffd5b50608051611c646100685f395f8181610c1b01528181610c700152610eb10152611c645ff3fe608060405260043610610090575f3560e01c8063ad3cb1cc11610058578063ad3cb1cc14610150578063b1cb48ef1461017a578063b9a2de3a146101a2578063f851a440146101ca578063fc528482146101f457610090565b80634f1ef2861461009457806352d1902d146100b0578063571a26a0146100da5780638129fc1c1461011e5780639979ef4514610134575b5f5ffd5b6100ae60048036038101906100a99190611428565b61021e565b005b3480156100bb575f5ffd5b506100c461023d565b6040516100d1919061149a565b60405180910390f35b3480156100e5575f5ffd5b5061010060048036038101906100fb91906114e6565b61026e565b60405161011599989796959493929190611549565b60405180910390f35b348015610129575f5ffd5b50610132610321565b005b61014e600480360381019061014991906114e6565b6104d8565b005b34801561015b575f5ffd5b506101646106c4565b6040516101719190611634565b60405180910390f35b348015610185575f5ffd5b506101a0600480360381019061019b9190611654565b6106fd565b005b3480156101ad575f5ffd5b506101c860048036038101906101c391906114e6565b610a53565b005b3480156101d5575f5ffd5b506101de610bee565b6040516101eb91906116b8565b60405180910390f35b3480156101ff575f5ffd5b50610208610c13565b60405161021591906116d1565b60405180910390f35b610226610c19565b61022f82610cff565b6102398282610d91565b5050565b5f610246610eaf565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b5f61032a610f36565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156103725750825b90505f60018367ffffffffffffffff161480156103a557505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103b3575080155b156103ea576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610437576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156104d1575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104c8919061173f565b60405180910390a15b5050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff1615801561051b575042816001015482600301546105199190611785565b115b61055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190611802565b60405180910390fd5b806005015434118015610571575080600201543410155b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a790611890565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610674578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826005015490811502906040515f60405180830381858888f19350505050158015610672573d5f5f3e3d5ffd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906118f8565b60405180910390fd5b61ea6084116107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790611960565b60405180910390fd5b5f8311610812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610809906119ee565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161084d929190611a0c565b5f604051808303815f87803b158015610864575f5ffd5b505af1158015610876573d5f5f3e3d5ffd5b505050506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e0820151816006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060015f815480929190610a4890611a33565b919050555050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff16158015610a9657504281600101548260030154610a949190611785565b105b610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc90611ac4565b60405180910390fd5b806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e308360040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600701546040518463ffffffff1660e01b8152600401610b5d93929190611ae2565b5f604051808303815f87803b158015610b74575f5ffd5b505af1158015610b86573d5f5f3e3d5ffd5b505050503073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610bcd573d5f5f3e3d5ffd5b506001816004015f6101000a81548160ff0219169083151502179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610cc657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cad610f5d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610cfd576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590611b61565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610df957506040513d601f19601f82011682018060405250810190610df69190611ba9565b60015b610e3a57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610e3191906116b8565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610ea057806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610e97919061149a565b60405180910390fd5b610eaa8383610fb0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610f34576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f610f897f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611022565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fb98261102b565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156110155761100f82826110f4565b5061101e565b61101d611174565b5b5050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361108657806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161107d91906116b8565b60405180910390fd5b806110b27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611022565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff168460405161111d9190611c18565b5f60405180830381855af49150503d805f8114611155576040519150601f19603f3d011682016040523d82523d5f602084013e61115a565b606091505b509150915061116a8583836111b0565b9250505092915050565b5f3411156111ae576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826111c5576111c08261123d565b611235565b5f82511480156111eb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561122d57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161122491906116b8565b60405180910390fd5b819050611236565b5b9392505050565b5f8151111561124f5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112bb82611292565b9050919050565b6112cb816112b1565b81146112d5575f5ffd5b50565b5f813590506112e6816112c2565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61133a826112f4565b810181811067ffffffffffffffff8211171561135957611358611304565b5b80604052505050565b5f61136b611281565b90506113778282611331565b919050565b5f67ffffffffffffffff82111561139657611395611304565b5b61139f826112f4565b9050602081019050919050565b828183375f83830152505050565b5f6113cc6113c78461137c565b611362565b9050828152602081018484840111156113e8576113e76112f0565b5b6113f38482856113ac565b509392505050565b5f82601f83011261140f5761140e6112ec565b5b813561141f8482602086016113ba565b91505092915050565b5f5f6040838503121561143e5761143d61128a565b5b5f61144b858286016112d8565b925050602083013567ffffffffffffffff81111561146c5761146b61128e565b5b611478858286016113fb565b9150509250929050565b5f819050919050565b61149481611482565b82525050565b5f6020820190506114ad5f83018461148b565b92915050565b5f819050919050565b6114c5816114b3565b81146114cf575f5ffd5b50565b5f813590506114e0816114bc565b92915050565b5f602082840312156114fb576114fa61128a565b5b5f611508848285016114d2565b91505092915050565b61151a816112b1565b82525050565b611529816114b3565b82525050565b5f8115159050919050565b6115438161152f565b82525050565b5f6101208201905061155d5f83018c611511565b61156a602083018b611520565b611577604083018a611520565b6115846060830189611520565b611591608083018861153a565b61159e60a0830187611511565b6115ab60c0830186611520565b6115b860e0830185611511565b6115c6610100830184611520565b9a9950505050505050505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611606826115d4565b61161081856115de565b93506116208185602086016115ee565b611629816112f4565b840191505092915050565b5f6020820190508181035f83015261164c81846115fc565b905092915050565b5f5f5f5f6080858703121561166c5761166b61128a565b5b5f611679878288016114d2565b945050602061168a878288016114d2565b935050604061169b878288016112d8565b92505060606116ac878288016114d2565b91505092959194509250565b5f6020820190506116cb5f830184611511565b92915050565b5f6020820190506116e45f830184611520565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61172961172461171f846116ea565b611706565b6116f3565b9050919050565b6117398161170f565b82525050565b5f6020820190506117525f830184611730565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61178f826114b3565b915061179a836114b3565b92508282019050808211156117b2576117b1611758565b5b92915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f6117ec6011836115de565b91506117f7826117b8565b602082019050919050565b5f6020820190508181035f830152611819816117e0565b9050919050565b7f426964206d75737420626520686967686572207468616e2074686520637572725f8201527f656e742068696768657374206269640000000000000000000000000000000000602082015250565b5f61187a602f836115de565b915061188582611820565b604082019050919050565b5f6020820190508181035f8301526118a78161186e565b9050919050565b7f4f6e6c792061646d696e2063616e206372656174652061756374696f6e7300005f82015250565b5f6118e2601e836115de565b91506118ed826118ae565b602082019050919050565b5f6020820190508181035f83015261190f816118d6565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2030005f82015250565b5f61194a601f836115de565b915061195582611916565b602082019050919050565b5f6020820190508181035f8301526119778161193e565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119d86022836115de565b91506119e38261197e565b604082019050919050565b5f6020820190508181035f830152611a05816119cc565b9050919050565b5f604082019050611a1f5f830185611511565b611a2c6020830184611520565b9392505050565b5f611a3d826114b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6f57611a6e611758565b5b600182019050919050565b7f41756374696f6e20686173206e6f7420656e64656400000000000000000000005f82015250565b5f611aae6015836115de565b9150611ab982611a7a565b602082019050919050565b5f6020820190508181035f830152611adb81611aa2565b9050919050565b5f606082019050611af55f830186611511565b611b026020830185611511565b611b0f6040830184611520565b949350505050565b7f4f6e6c792061646d696e2063616e2075706772616465000000000000000000005f82015250565b5f611b4b6016836115de565b9150611b5682611b17565b602082019050919050565b5f6020820190508181035f830152611b7881611b3f565b9050919050565b611b8881611482565b8114611b92575f5ffd5b50565b5f81519050611ba381611b7f565b92915050565b5f60208284031215611bbe57611bbd61128a565b5b5f611bcb84828501611b95565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bf282611bd4565b611bfc8185611bde565b9350611c0c8185602086016115ee565b80840191505092915050565b5f611c238284611be8565b91508190509291505056fea2646970667358221220f025e92b2725f2578b1f1e646ab9c0f4b322ca91560df6bed98274701a52414164736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1C64 PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xC1B ADD MSTORE DUP2 DUP2 PUSH2 0xC70 ADD MSTORE PUSH2 0xEB1 ADD MSTORE PUSH2 0x1C64 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xB9A2DE3A EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1F4 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x321 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x22F DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x239 DUP3 DUP3 PUSH2 0xD91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246 PUSH2 0xEAF JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH0 PUSH2 0x32A PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x372 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3A5 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x437 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST GT JUMPDEST PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x551 SWAP1 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x571 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x674 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP3 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA48 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST LT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP4 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBCD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCC6 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCAD PUSH2 0xF5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDF9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEA0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP4 DUP4 PUSH2 0xFB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF89 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1022 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFB9 DUP3 PUSH2 0x102B JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x100F DUP3 DUP3 PUSH2 0x10F4 JUMP JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x101D PUSH2 0x1174 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1086 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x10B2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1022 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x111D SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x115A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x116A DUP6 DUP4 DUP4 PUSH2 0x11B0 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x11C5 JUMPI PUSH2 0x11C0 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x11EB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x122D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1236 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x124F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CB DUP2 PUSH2 0x12B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E6 DUP2 PUSH2 0x12C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x133A DUP3 PUSH2 0x12F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1359 JUMPI PUSH2 0x1358 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x136B PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP PUSH2 0x1377 DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST PUSH2 0x139F DUP3 PUSH2 0x12F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CC PUSH2 0x13C7 DUP5 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x1362 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0x12F0 JUMP JUMPDEST JUMPDEST PUSH2 0x13F3 DUP5 DUP3 DUP6 PUSH2 0x13AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140F JUMPI PUSH2 0x140E PUSH2 0x12EC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x141F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143E JUMPI PUSH2 0x143D PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144B DUP6 DUP3 DUP7 ADD PUSH2 0x12D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x128E JUMP JUMPDEST JUMPDEST PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1494 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AD PUSH0 DUP4 ADD DUP5 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C5 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E0 DUP2 PUSH2 0x14BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1508 DUP5 DUP3 DUP6 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x12B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP13 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x156A PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1577 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1584 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1591 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x159E PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x15AB PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1606 DUP3 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x1610 DUP2 DUP6 PUSH2 0x15DE JUMP JUMPDEST SWAP4 POP PUSH2 0x1620 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x12F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x164C DUP2 DUP5 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH2 0x166B PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x169B DUP8 DUP3 DUP9 ADD PUSH2 0x12D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x16AC DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CB PUSH0 DUP4 ADD DUP5 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1729 PUSH2 0x1724 PUSH2 0x171F DUP5 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x16F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1739 DUP2 PUSH2 0x170F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH0 DUP4 ADD DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x178F DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x179A DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x1758 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17EC PUSH1 0x11 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x17F7 DUP3 PUSH2 0x17B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1819 DUP2 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E207468652063757272 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E742068696768657374206269640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187A PUSH1 0x2F DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A7 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206372656174652061756374696F6E730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E2 PUSH1 0x1E DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194A PUSH1 0x1F DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1955 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1977 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19D8 PUSH1 0x22 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x19E3 DUP3 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A05 DUP2 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A1F PUSH0 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1A2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3D DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A6F JUMPI PUSH2 0x1A6E PUSH2 0x1758 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAE PUSH1 0x15 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB9 DUP3 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADB DUP2 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207570677261646500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B PUSH1 0x16 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B56 DUP3 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B78 DUP2 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B88 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA3 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCB DUP5 DUP3 DUP6 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 DUP3 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x1BFC DUP2 DUP6 PUSH2 0x1BDE JUMP JUMPDEST SWAP4 POP PUSH2 0x1C0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C23 DUP3 DUP5 PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x25 0xE9 0x2B 0x27 0x25 CALLCODE JUMPI DUP12 0x1F 0x1E PUSH5 0x6AB9C0F4B3 0x22 0xCA SWAP2 JUMP 0xD 0xF6 0xBE 0xD9 DUP3 PUSH21 0x701A52414164736F6C634300081C00330000000000 ",
							"sourceMap": "289:3361:11:-:0;;;1171:4:1;1128:48;;;;;;;;;289:3361:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_277": {
									"entryPoint": 1732,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1581": {
									"entryPoint": 3327,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNonPayable_759": {
									"entryPoint": 4468,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_383": {
									"entryPoint": 3759,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_367": {
									"entryPoint": 3097,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_252": {
									"entryPoint": 3894,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1146": {
									"entryPoint": 4669,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_539": {
									"entryPoint": 4139,
									"id": 539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_434": {
									"entryPoint": 3473,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@admin_1342": {
									"entryPoint": 3054,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@auctions_1338": {
									"entryPoint": 622,
									"id": 1338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createAuction_1424": {
									"entryPoint": 1789,
									"id": 1424,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@endAuction_1566": {
									"entryPoint": 2643,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1064": {
									"entryPoint": 4340,
									"id": 1064,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1204": {
									"entryPoint": 4130,
									"id": 1204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_512": {
									"entryPoint": 3933,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1353": {
									"entryPoint": 801,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextAuctionId_1340": {
									"entryPoint": 3091,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@placeBid_1501": {
									"entryPoint": 1240,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proxiableUUID_325": {
									"entryPoint": 573,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_345": {
									"entryPoint": 542,
									"id": 345,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_575": {
									"entryPoint": 4016,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1104": {
									"entryPoint": 4528,
									"id": 1104,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5": {
									"entryPoint": 6072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b": {
									"entryPoint": 6778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19486:12",
										"nodeType": "YulBlock",
										"src": "0:19486:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "930:28:12",
													"nodeType": "YulBlock",
													"src": "930:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:12",
																		"nodeType": "YulLiteral",
																		"src": "947:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:12",
																		"nodeType": "YulLiteral",
																		"src": "950:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "940:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:12"
																},
																"nativeSrc": "940:12:12",
																"nodeType": "YulFunctionCall",
																"src": "940:12:12"
															},
															"nativeSrc": "940:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "940:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "841:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:12"
											},
											{
												"body": {
													"nativeSrc": "1053:28:12",
													"nodeType": "YulBlock",
													"src": "1053:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1070:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1063:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:12"
																},
																"nativeSrc": "1063:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1063:12:12"
															},
															"nativeSrc": "1063:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1063:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "964:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "964:117:12"
											},
											{
												"body": {
													"nativeSrc": "1135:54:12",
													"nodeType": "YulBlock",
													"src": "1135:54:12",
													"statements": [
														{
															"nativeSrc": "1145:38:12",
															"nodeType": "YulAssignment",
															"src": "1145:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1163:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1163:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1170:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:12"
																		},
																		"nativeSrc": "1159:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1179:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1179:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1175:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:12"
																		},
																		"nativeSrc": "1175:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1175:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:12"
																},
																"nativeSrc": "1155:28:12",
																"nodeType": "YulFunctionCall",
																"src": "1155:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1145:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1087:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1118:5:12",
														"nodeType": "YulTypedName",
														"src": "1118:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1128:6:12",
														"nodeType": "YulTypedName",
														"src": "1128:6:12",
														"type": ""
													}
												],
												"src": "1087:102:12"
											},
											{
												"body": {
													"nativeSrc": "1223:152:12",
													"nodeType": "YulBlock",
													"src": "1223:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1240:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1240:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1243:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1243:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:12"
																},
																"nativeSrc": "1233:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1233:88:12"
															},
															"nativeSrc": "1233:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1233:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1337:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1340:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:12"
																},
																"nativeSrc": "1330:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1330:15:12"
															},
															"nativeSrc": "1330:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1330:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1361:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:12"
																},
																"nativeSrc": "1354:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1354:15:12"
															},
															"nativeSrc": "1354:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1354:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1195:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1195:180:12"
											},
											{
												"body": {
													"nativeSrc": "1424:238:12",
													"nodeType": "YulBlock",
													"src": "1424:238:12",
													"statements": [
														{
															"nativeSrc": "1434:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1434:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1456:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1456:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1486:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1486:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1464:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "1464:21:12"
																		},
																		"nativeSrc": "1464:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1464:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1452:3:12"
																},
																"nativeSrc": "1452:40:12",
																"nodeType": "YulFunctionCall",
																"src": "1452:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1438:10:12",
																	"nodeType": "YulTypedName",
																	"src": "1438:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1603:22:12",
																"nodeType": "YulBlock",
																"src": "1603:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1605:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1605:16:12"
																			},
																			"nativeSrc": "1605:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1605:18:12"
																		},
																		"nativeSrc": "1605:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1605:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1546:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1546:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1558:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1558:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1543:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1543:2:12"
																		},
																		"nativeSrc": "1543:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1582:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1582:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1594:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1579:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1579:2:12"
																		},
																		"nativeSrc": "1579:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1540:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1540:2:12"
																},
																"nativeSrc": "1540:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1540:62:12"
															},
															"nativeSrc": "1537:88:12",
															"nodeType": "YulIf",
															"src": "1537:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1641:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1645:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1645:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:12"
																},
																"nativeSrc": "1634:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1634:22:12"
															},
															"nativeSrc": "1634:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1634:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1381:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1410:6:12",
														"nodeType": "YulTypedName",
														"src": "1410:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1418:4:12",
														"nodeType": "YulTypedName",
														"src": "1418:4:12",
														"type": ""
													}
												],
												"src": "1381:281:12"
											},
											{
												"body": {
													"nativeSrc": "1709:88:12",
													"nodeType": "YulBlock",
													"src": "1709:88:12",
													"statements": [
														{
															"nativeSrc": "1719:30:12",
															"nodeType": "YulAssignment",
															"src": "1719:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1729:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:12"
																},
																"nativeSrc": "1729:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1778:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1786:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1758:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:12"
																},
																"nativeSrc": "1758:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1758:33:12"
															},
															"nativeSrc": "1758:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1668:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1693:4:12",
														"nodeType": "YulTypedName",
														"src": "1693:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1702:6:12",
														"nodeType": "YulTypedName",
														"src": "1702:6:12",
														"type": ""
													}
												],
												"src": "1668:129:12"
											},
											{
												"body": {
													"nativeSrc": "1869:241:12",
													"nodeType": "YulBlock",
													"src": "1869:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1974:22:12",
																"nodeType": "YulBlock",
																"src": "1974:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1976:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1976:16:12"
																			},
																			"nativeSrc": "1976:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1976:18:12"
																		},
																		"nativeSrc": "1976:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1946:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1946:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1954:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1954:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1943:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1943:2:12"
																},
																"nativeSrc": "1943:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1943:30:12"
															},
															"nativeSrc": "1940:56:12",
															"nodeType": "YulIf",
															"src": "1940:56:12"
														},
														{
															"nativeSrc": "2006:37:12",
															"nodeType": "YulAssignment",
															"src": "2006:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2014:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "2014:21:12"
																},
																"nativeSrc": "2014:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2014:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2006:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2006:4:12"
																}
															]
														},
														{
															"nativeSrc": "2080:23:12",
															"nodeType": "YulAssignment",
															"src": "2080:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2092:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2092:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2088:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:12"
																},
																"nativeSrc": "2088:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2088:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2080:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2080:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1803:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1853:6:12",
														"nodeType": "YulTypedName",
														"src": "1853:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1864:4:12",
														"nodeType": "YulTypedName",
														"src": "1864:4:12",
														"type": ""
													}
												],
												"src": "1803:307:12"
											},
											{
												"body": {
													"nativeSrc": "2180:84:12",
													"nodeType": "YulBlock",
													"src": "2180:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2204:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2209:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2214:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2214:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2191:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:12"
																},
																"nativeSrc": "2191:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2191:30:12"
															},
															"nativeSrc": "2191:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "2191:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2241:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2237:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:12"
																		},
																		"nativeSrc": "2237:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2237:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2255:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:12"
																},
																"nativeSrc": "2230:27:12",
																"nodeType": "YulFunctionCall",
																"src": "2230:27:12"
															},
															"nativeSrc": "2230:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "2230:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2116:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2162:3:12",
														"nodeType": "YulTypedName",
														"src": "2162:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2167:3:12",
														"nodeType": "YulTypedName",
														"src": "2167:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2172:6:12",
														"nodeType": "YulTypedName",
														"src": "2172:6:12",
														"type": ""
													}
												],
												"src": "2116:148:12"
											},
											{
												"body": {
													"nativeSrc": "2353:340:12",
													"nodeType": "YulBlock",
													"src": "2353:340:12",
													"statements": [
														{
															"nativeSrc": "2363:74:12",
															"nodeType": "YulAssignment",
															"src": "2363:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2429:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2429:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2388:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "2388:40:12"
																		},
																		"nativeSrc": "2388:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2372:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "2372:15:12"
																},
																"nativeSrc": "2372:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2372:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2363:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2363:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2453:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2453:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2460:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2446:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:12"
																},
																"nativeSrc": "2446:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2446:21:12"
															},
															"nativeSrc": "2446:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "2446:21:12"
														},
														{
															"nativeSrc": "2476:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2476:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2491:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2491:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2498:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2487:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:12"
																},
																"nativeSrc": "2487:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2487:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2480:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2480:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2541:83:12",
																"nodeType": "YulBlock",
																"src": "2541:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2543:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2543:77:12"
																			},
																			"nativeSrc": "2543:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2543:79:12"
																		},
																		"nativeSrc": "2543:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2543:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2522:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2522:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2527:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2527:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:12"
																		},
																		"nativeSrc": "2518:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2536:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2515:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:12"
																},
																"nativeSrc": "2515:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2515:25:12"
															},
															"nativeSrc": "2512:112:12",
															"nodeType": "YulIf",
															"src": "2512:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2670:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2670:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2675:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2675:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2680:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2633:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "2633:36:12"
																},
																"nativeSrc": "2633:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2633:54:12"
															},
															"nativeSrc": "2633:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "2633:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2270:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2326:3:12",
														"nodeType": "YulTypedName",
														"src": "2326:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2331:6:12",
														"nodeType": "YulTypedName",
														"src": "2331:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2339:3:12",
														"nodeType": "YulTypedName",
														"src": "2339:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2347:5:12",
														"nodeType": "YulTypedName",
														"src": "2347:5:12",
														"type": ""
													}
												],
												"src": "2270:423:12"
											},
											{
												"body": {
													"nativeSrc": "2773:277:12",
													"nodeType": "YulBlock",
													"src": "2773:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2822:83:12",
																"nodeType": "YulBlock",
																"src": "2822:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2824:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2824:77:12"
																			},
																			"nativeSrc": "2824:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:79:12"
																		},
																		"nativeSrc": "2824:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2801:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2801:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2809:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2809:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2797:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:12"
																				},
																				"nativeSrc": "2797:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2816:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2816:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:12"
																		},
																		"nativeSrc": "2793:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2786:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:12"
																},
																"nativeSrc": "2786:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2786:35:12"
															},
															"nativeSrc": "2783:122:12",
															"nodeType": "YulIf",
															"src": "2783:122:12"
														},
														{
															"nativeSrc": "2914:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2928:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:12"
																},
																"nativeSrc": "2928:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2928:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2918:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2918:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:87:12",
															"nodeType": "YulAssignment",
															"src": "2957:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3017:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3025:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3025:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3013:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:12"
																		},
																		"nativeSrc": "3013:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3032:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3032:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3040:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3040:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "2966:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "2966:46:12"
																},
																"nativeSrc": "2966:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2966:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2957:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "2712:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2751:6:12",
														"nodeType": "YulTypedName",
														"src": "2751:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2759:3:12",
														"nodeType": "YulTypedName",
														"src": "2759:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2767:5:12",
														"nodeType": "YulTypedName",
														"src": "2767:5:12",
														"type": ""
													}
												],
												"src": "2712:338:12"
											},
											{
												"body": {
													"nativeSrc": "3148:560:12",
													"nodeType": "YulBlock",
													"src": "3148:560:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:83:12",
																"nodeType": "YulBlock",
																"src": "3194:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3196:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:77:12"
																			},
																			"nativeSrc": "3196:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:79:12"
																		},
																		"nativeSrc": "3196:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3169:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3169:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3178:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3165:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:12"
																		},
																		"nativeSrc": "3165:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3190:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3161:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3161:3:12"
																},
																"nativeSrc": "3161:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3161:32:12"
															},
															"nativeSrc": "3158:119:12",
															"nodeType": "YulIf",
															"src": "3158:119:12"
														},
														{
															"nativeSrc": "3287:117:12",
															"nodeType": "YulBlock",
															"src": "3287:117:12",
															"statements": [
																{
																	"nativeSrc": "3302:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3302:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3316:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3306:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3306:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3331:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3331:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3366:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3366:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3377:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3377:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3362:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:12"
																				},
																				"nativeSrc": "3362:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3362:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3386:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3386:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3341:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3341:20:12"
																		},
																		"nativeSrc": "3341:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3341:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3331:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3331:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3414:287:12",
															"nodeType": "YulBlock",
															"src": "3414:287:12",
															"statements": [
																{
																	"nativeSrc": "3429:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3429:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3460:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3460:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3471:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3471:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3456:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3456:3:12"
																				},
																				"nativeSrc": "3456:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3456:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3443:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "3443:12:12"
																		},
																		"nativeSrc": "3443:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3433:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3433:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3522:83:12",
																		"nodeType": "YulBlock",
																		"src": "3522:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3524:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3524:77:12"
																					},
																					"nativeSrc": "3524:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3524:79:12"
																				},
																				"nativeSrc": "3524:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3524:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3494:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3494:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3502:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3502:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3491:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3491:2:12"
																		},
																		"nativeSrc": "3491:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:30:12"
																	},
																	"nativeSrc": "3488:117:12",
																	"nodeType": "YulIf",
																	"src": "3488:117:12"
																},
																{
																	"nativeSrc": "3619:72:12",
																	"nodeType": "YulAssignment",
																	"src": "3619:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3663:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3674:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3674:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3659:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:12"
																				},
																				"nativeSrc": "3659:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3659:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3683:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "3629:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "3629:29:12"
																		},
																		"nativeSrc": "3629:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3629:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3619:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3619:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3056:652:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3110:9:12",
														"nodeType": "YulTypedName",
														"src": "3110:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3121:7:12",
														"nodeType": "YulTypedName",
														"src": "3121:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3133:6:12",
														"nodeType": "YulTypedName",
														"src": "3133:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3141:6:12",
														"nodeType": "YulTypedName",
														"src": "3141:6:12",
														"type": ""
													}
												],
												"src": "3056:652:12"
											},
											{
												"body": {
													"nativeSrc": "3759:32:12",
													"nodeType": "YulBlock",
													"src": "3759:32:12",
													"statements": [
														{
															"nativeSrc": "3769:16:12",
															"nodeType": "YulAssignment",
															"src": "3769:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3780:5:12",
																"nodeType": "YulIdentifier",
																"src": "3780:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3769:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3769:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3714:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3741:5:12",
														"nodeType": "YulTypedName",
														"src": "3741:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3751:7:12",
														"nodeType": "YulTypedName",
														"src": "3751:7:12",
														"type": ""
													}
												],
												"src": "3714:77:12"
											},
											{
												"body": {
													"nativeSrc": "3862:53:12",
													"nodeType": "YulBlock",
													"src": "3862:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3879:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3879:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3902:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3902:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3884:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3884:17:12"
																		},
																		"nativeSrc": "3884:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3872:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:12"
																},
																"nativeSrc": "3872:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3872:37:12"
															},
															"nativeSrc": "3872:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3872:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3797:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3850:5:12",
														"nodeType": "YulTypedName",
														"src": "3850:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3857:3:12",
														"nodeType": "YulTypedName",
														"src": "3857:3:12",
														"type": ""
													}
												],
												"src": "3797:118:12"
											},
											{
												"body": {
													"nativeSrc": "4019:124:12",
													"nodeType": "YulBlock",
													"src": "4019:124:12",
													"statements": [
														{
															"nativeSrc": "4029:26:12",
															"nodeType": "YulAssignment",
															"src": "4029:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4041:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4041:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4037:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:12"
																},
																"nativeSrc": "4037:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4037:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4029:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4029:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4109:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4109:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4133:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:12"
																		},
																		"nativeSrc": "4118:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4118:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4065:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4065:43:12"
																},
																"nativeSrc": "4065:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4065:71:12"
															},
															"nativeSrc": "4065:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4065:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3921:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3991:9:12",
														"nodeType": "YulTypedName",
														"src": "3991:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4003:6:12",
														"nodeType": "YulTypedName",
														"src": "4003:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4014:4:12",
														"nodeType": "YulTypedName",
														"src": "4014:4:12",
														"type": ""
													}
												],
												"src": "3921:222:12"
											},
											{
												"body": {
													"nativeSrc": "4194:32:12",
													"nodeType": "YulBlock",
													"src": "4194:32:12",
													"statements": [
														{
															"nativeSrc": "4204:16:12",
															"nodeType": "YulAssignment",
															"src": "4204:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4215:5:12",
																"nodeType": "YulIdentifier",
																"src": "4215:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4204:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4204:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4149:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4176:5:12",
														"nodeType": "YulTypedName",
														"src": "4176:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4186:7:12",
														"nodeType": "YulTypedName",
														"src": "4186:7:12",
														"type": ""
													}
												],
												"src": "4149:77:12"
											},
											{
												"body": {
													"nativeSrc": "4275:79:12",
													"nodeType": "YulBlock",
													"src": "4275:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4332:16:12",
																"nodeType": "YulBlock",
																"src": "4332:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4341:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4341:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4344:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4334:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:12"
																			},
																			"nativeSrc": "4334:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4334:12:12"
																		},
																		"nativeSrc": "4334:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4298:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4298:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4323:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4323:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4305:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4305:17:12"
																				},
																				"nativeSrc": "4305:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4295:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4295:2:12"
																		},
																		"nativeSrc": "4295:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4288:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:12"
																},
																"nativeSrc": "4288:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4288:43:12"
															},
															"nativeSrc": "4285:63:12",
															"nodeType": "YulIf",
															"src": "4285:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4232:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4268:5:12",
														"nodeType": "YulTypedName",
														"src": "4268:5:12",
														"type": ""
													}
												],
												"src": "4232:122:12"
											},
											{
												"body": {
													"nativeSrc": "4412:87:12",
													"nodeType": "YulBlock",
													"src": "4412:87:12",
													"statements": [
														{
															"nativeSrc": "4422:29:12",
															"nodeType": "YulAssignment",
															"src": "4422:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4444:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4431:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4431:12:12"
																},
																"nativeSrc": "4431:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4431:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4422:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4422:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4487:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4487:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4460:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4460:26:12"
																},
																"nativeSrc": "4460:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4460:33:12"
															},
															"nativeSrc": "4460:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4460:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4360:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4390:6:12",
														"nodeType": "YulTypedName",
														"src": "4390:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4398:3:12",
														"nodeType": "YulTypedName",
														"src": "4398:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4406:5:12",
														"nodeType": "YulTypedName",
														"src": "4406:5:12",
														"type": ""
													}
												],
												"src": "4360:139:12"
											},
											{
												"body": {
													"nativeSrc": "4571:263:12",
													"nodeType": "YulBlock",
													"src": "4571:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4617:83:12",
																"nodeType": "YulBlock",
																"src": "4617:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4619:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4619:77:12"
																			},
																			"nativeSrc": "4619:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4619:79:12"
																		},
																		"nativeSrc": "4619:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4592:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4592:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4588:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:12"
																		},
																		"nativeSrc": "4588:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4584:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:12"
																},
																"nativeSrc": "4584:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4584:32:12"
															},
															"nativeSrc": "4581:119:12",
															"nodeType": "YulIf",
															"src": "4581:119:12"
														},
														{
															"nativeSrc": "4710:117:12",
															"nodeType": "YulBlock",
															"src": "4710:117:12",
															"statements": [
																{
																	"nativeSrc": "4725:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4725:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4739:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4739:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4729:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4729:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4754:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4754:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4789:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4789:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4800:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4800:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4785:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4785:3:12"
																				},
																				"nativeSrc": "4785:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4785:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4809:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4809:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4764:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4764:20:12"
																		},
																		"nativeSrc": "4764:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4754:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4754:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4505:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4541:9:12",
														"nodeType": "YulTypedName",
														"src": "4541:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4552:7:12",
														"nodeType": "YulTypedName",
														"src": "4552:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4564:6:12",
														"nodeType": "YulTypedName",
														"src": "4564:6:12",
														"type": ""
													}
												],
												"src": "4505:329:12"
											},
											{
												"body": {
													"nativeSrc": "4905:53:12",
													"nodeType": "YulBlock",
													"src": "4905:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4922:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4945:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4945:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4927:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4927:17:12"
																		},
																		"nativeSrc": "4927:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:12"
																},
																"nativeSrc": "4915:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4915:37:12"
															},
															"nativeSrc": "4915:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4915:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4840:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:12",
														"nodeType": "YulTypedName",
														"src": "4893:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4900:3:12",
														"nodeType": "YulTypedName",
														"src": "4900:3:12",
														"type": ""
													}
												],
												"src": "4840:118:12"
											},
											{
												"body": {
													"nativeSrc": "5029:53:12",
													"nodeType": "YulBlock",
													"src": "5029:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5046:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5046:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5069:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5051:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5051:17:12"
																		},
																		"nativeSrc": "5051:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5051:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:12"
																},
																"nativeSrc": "5039:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5039:37:12"
															},
															"nativeSrc": "5039:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5039:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4964:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5017:5:12",
														"nodeType": "YulTypedName",
														"src": "5017:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5024:3:12",
														"nodeType": "YulTypedName",
														"src": "5024:3:12",
														"type": ""
													}
												],
												"src": "4964:118:12"
											},
											{
												"body": {
													"nativeSrc": "5130:48:12",
													"nodeType": "YulBlock",
													"src": "5130:48:12",
													"statements": [
														{
															"nativeSrc": "5140:32:12",
															"nodeType": "YulAssignment",
															"src": "5140:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5165:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5165:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5158:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5158:6:12"
																		},
																		"nativeSrc": "5158:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5151:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:12"
																},
																"nativeSrc": "5151:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5151:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5140:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5140:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5088:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5112:5:12",
														"nodeType": "YulTypedName",
														"src": "5112:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5122:7:12",
														"nodeType": "YulTypedName",
														"src": "5122:7:12",
														"type": ""
													}
												],
												"src": "5088:90:12"
											},
											{
												"body": {
													"nativeSrc": "5243:50:12",
													"nodeType": "YulBlock",
													"src": "5243:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5260:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5260:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5280:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5265:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "5265:14:12"
																		},
																		"nativeSrc": "5265:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5265:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:12"
																},
																"nativeSrc": "5253:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5253:34:12"
															},
															"nativeSrc": "5253:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5253:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5184:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5231:5:12",
														"nodeType": "YulTypedName",
														"src": "5231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5238:3:12",
														"nodeType": "YulTypedName",
														"src": "5238:3:12",
														"type": ""
													}
												],
												"src": "5184:109:12"
											},
											{
												"body": {
													"nativeSrc": "5615:780:12",
													"nodeType": "YulBlock",
													"src": "5615:780:12",
													"statements": [
														{
															"nativeSrc": "5625:27:12",
															"nodeType": "YulAssignment",
															"src": "5625:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5637:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5637:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5648:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5648:3:12",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5633:3:12"
																},
																"nativeSrc": "5633:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5633:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5625:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5625:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5706:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5719:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5730:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:12"
																		},
																		"nativeSrc": "5715:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5662:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5662:43:12"
																},
																"nativeSrc": "5662:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5662:71:12"
															},
															"nativeSrc": "5662:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5662:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5787:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5787:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5800:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5811:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5796:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:12"
																		},
																		"nativeSrc": "5796:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5743:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5743:43:12"
																},
																"nativeSrc": "5743:72:12",
																"nodeType": "YulFunctionCall",
																"src": "5743:72:12"
															},
															"nativeSrc": "5743:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "5743:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5869:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5869:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5882:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5882:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5893:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5893:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5878:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5878:3:12"
																		},
																		"nativeSrc": "5878:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5825:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5825:43:12"
																},
																"nativeSrc": "5825:72:12",
																"nodeType": "YulFunctionCall",
																"src": "5825:72:12"
															},
															"nativeSrc": "5825:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "5825:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5951:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5951:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5964:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5975:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5975:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5960:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5960:3:12"
																		},
																		"nativeSrc": "5960:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5960:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5907:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5907:43:12"
																},
																"nativeSrc": "5907:72:12",
																"nodeType": "YulFunctionCall",
																"src": "5907:72:12"
															},
															"nativeSrc": "5907:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "5907:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6027:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6027:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6040:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6051:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6051:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6036:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:12"
																		},
																		"nativeSrc": "6036:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5989:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "5989:37:12"
																},
																"nativeSrc": "5989:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5989:67:12"
															},
															"nativeSrc": "5989:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5989:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6110:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6110:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6123:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6134:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6134:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:12"
																		},
																		"nativeSrc": "6119:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6119:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6066:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6066:43:12"
																},
																"nativeSrc": "6066:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6066:73:12"
															},
															"nativeSrc": "6066:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6066:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6193:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6193:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6206:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6206:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6217:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6217:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6202:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:12"
																		},
																		"nativeSrc": "6202:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6202:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6149:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6149:43:12"
																},
																"nativeSrc": "6149:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6149:73:12"
															},
															"nativeSrc": "6149:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6149:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "6276:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6289:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6300:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6300:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6285:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6285:3:12"
																		},
																		"nativeSrc": "6285:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6285:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6232:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6232:43:12"
																},
																"nativeSrc": "6232:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6232:73:12"
															},
															"nativeSrc": "6232:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6232:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "6359:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6359:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6372:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6383:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6383:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6368:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:12"
																		},
																		"nativeSrc": "6368:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6368:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6315:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6315:43:12"
																},
																"nativeSrc": "6315:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6315:73:12"
															},
															"nativeSrc": "6315:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6315:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5299:1096:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5523:9:12",
														"nodeType": "YulTypedName",
														"src": "5523:9:12",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "5535:6:12",
														"nodeType": "YulTypedName",
														"src": "5535:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "5543:6:12",
														"nodeType": "YulTypedName",
														"src": "5543:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5551:6:12",
														"nodeType": "YulTypedName",
														"src": "5551:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5559:6:12",
														"nodeType": "YulTypedName",
														"src": "5559:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5567:6:12",
														"nodeType": "YulTypedName",
														"src": "5567:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5575:6:12",
														"nodeType": "YulTypedName",
														"src": "5575:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5583:6:12",
														"nodeType": "YulTypedName",
														"src": "5583:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5591:6:12",
														"nodeType": "YulTypedName",
														"src": "5591:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5599:6:12",
														"nodeType": "YulTypedName",
														"src": "5599:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5610:4:12",
														"nodeType": "YulTypedName",
														"src": "5610:4:12",
														"type": ""
													}
												],
												"src": "5299:1096:12"
											},
											{
												"body": {
													"nativeSrc": "6460:40:12",
													"nodeType": "YulBlock",
													"src": "6460:40:12",
													"statements": [
														{
															"nativeSrc": "6471:22:12",
															"nodeType": "YulAssignment",
															"src": "6471:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6487:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6487:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6481:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6481:5:12"
																},
																"nativeSrc": "6481:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6481:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6471:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6471:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6401:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6443:5:12",
														"nodeType": "YulTypedName",
														"src": "6443:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6453:6:12",
														"nodeType": "YulTypedName",
														"src": "6453:6:12",
														"type": ""
													}
												],
												"src": "6401:99:12"
											},
											{
												"body": {
													"nativeSrc": "6602:73:12",
													"nodeType": "YulBlock",
													"src": "6602:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6619:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6619:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6624:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6624:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6612:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:12"
																},
																"nativeSrc": "6612:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6612:19:12"
															},
															"nativeSrc": "6612:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "6612:19:12"
														},
														{
															"nativeSrc": "6640:29:12",
															"nodeType": "YulAssignment",
															"src": "6640:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6659:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6659:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6664:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6664:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6655:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6655:3:12"
																},
																"nativeSrc": "6655:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6655:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6640:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "6640:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6506:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6574:3:12",
														"nodeType": "YulTypedName",
														"src": "6574:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6579:6:12",
														"nodeType": "YulTypedName",
														"src": "6579:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6590:11:12",
														"nodeType": "YulTypedName",
														"src": "6590:11:12",
														"type": ""
													}
												],
												"src": "6506:169:12"
											},
											{
												"body": {
													"nativeSrc": "6743:77:12",
													"nodeType": "YulBlock",
													"src": "6743:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6760:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6760:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6765:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6765:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6770:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6770:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6754:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6754:5:12"
																},
																"nativeSrc": "6754:23:12",
																"nodeType": "YulFunctionCall",
																"src": "6754:23:12"
															},
															"nativeSrc": "6754:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "6754:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6797:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6797:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6802:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6802:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:12"
																		},
																		"nativeSrc": "6793:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6793:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6811:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6811:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6786:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:12"
																},
																"nativeSrc": "6786:27:12",
																"nodeType": "YulFunctionCall",
																"src": "6786:27:12"
															},
															"nativeSrc": "6786:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "6786:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6681:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6725:3:12",
														"nodeType": "YulTypedName",
														"src": "6725:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6730:3:12",
														"nodeType": "YulTypedName",
														"src": "6730:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6735:6:12",
														"nodeType": "YulTypedName",
														"src": "6735:6:12",
														"type": ""
													}
												],
												"src": "6681:139:12"
											},
											{
												"body": {
													"nativeSrc": "6918:285:12",
													"nodeType": "YulBlock",
													"src": "6918:285:12",
													"statements": [
														{
															"nativeSrc": "6928:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6928:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6975:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6975:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6942:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "6942:32:12"
																},
																"nativeSrc": "6942:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6942:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6932:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6932:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6990:78:12",
															"nodeType": "YulAssignment",
															"src": "6990:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7056:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7056:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7061:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7061:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6997:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "6997:58:12"
																},
																"nativeSrc": "6997:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6997:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6990:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7116:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7116:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7123:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7123:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7112:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:12"
																		},
																		"nativeSrc": "7112:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7112:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7130:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7130:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7135:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7135:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7077:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "7077:34:12"
																},
																"nativeSrc": "7077:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7077:65:12"
															},
															"nativeSrc": "7077:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "7077:65:12"
														},
														{
															"nativeSrc": "7151:46:12",
															"nodeType": "YulAssignment",
															"src": "7151:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7162:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7162:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7189:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7189:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7167:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "7167:21:12"
																		},
																		"nativeSrc": "7167:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7167:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:12"
																},
																"nativeSrc": "7158:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7158:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7151:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6826:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6899:5:12",
														"nodeType": "YulTypedName",
														"src": "6899:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6906:3:12",
														"nodeType": "YulTypedName",
														"src": "6906:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6914:3:12",
														"nodeType": "YulTypedName",
														"src": "6914:3:12",
														"type": ""
													}
												],
												"src": "6826:377:12"
											},
											{
												"body": {
													"nativeSrc": "7327:195:12",
													"nodeType": "YulBlock",
													"src": "7327:195:12",
													"statements": [
														{
															"nativeSrc": "7337:26:12",
															"nodeType": "YulAssignment",
															"src": "7337:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7349:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7349:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7360:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7360:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7345:3:12"
																},
																"nativeSrc": "7345:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7345:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7337:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7337:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7384:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7384:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7395:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7395:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7380:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7380:3:12"
																		},
																		"nativeSrc": "7380:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7403:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7403:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7409:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7409:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7399:3:12"
																		},
																		"nativeSrc": "7399:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7399:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7373:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:12"
																},
																"nativeSrc": "7373:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7373:47:12"
															},
															"nativeSrc": "7373:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7373:47:12"
														},
														{
															"nativeSrc": "7429:86:12",
															"nodeType": "YulAssignment",
															"src": "7429:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7501:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7510:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7510:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7437:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "7437:63:12"
																},
																"nativeSrc": "7437:78:12",
																"nodeType": "YulFunctionCall",
																"src": "7437:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7429:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7429:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7209:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7299:9:12",
														"nodeType": "YulTypedName",
														"src": "7299:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7311:6:12",
														"nodeType": "YulTypedName",
														"src": "7311:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7322:4:12",
														"nodeType": "YulTypedName",
														"src": "7322:4:12",
														"type": ""
													}
												],
												"src": "7209:313:12"
											},
											{
												"body": {
													"nativeSrc": "7645:648:12",
													"nodeType": "YulBlock",
													"src": "7645:648:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7692:83:12",
																"nodeType": "YulBlock",
																"src": "7692:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7694:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7694:77:12"
																			},
																			"nativeSrc": "7694:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7694:79:12"
																		},
																		"nativeSrc": "7694:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7694:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7666:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7666:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7675:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7662:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:12"
																		},
																		"nativeSrc": "7662:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7662:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7687:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7687:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7658:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7658:3:12"
																},
																"nativeSrc": "7658:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7658:33:12"
															},
															"nativeSrc": "7655:120:12",
															"nodeType": "YulIf",
															"src": "7655:120:12"
														},
														{
															"nativeSrc": "7785:117:12",
															"nodeType": "YulBlock",
															"src": "7785:117:12",
															"statements": [
																{
																	"nativeSrc": "7800:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7800:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7814:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7814:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7804:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7804:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7829:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7829:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7864:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7864:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7875:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7875:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7860:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7860:3:12"
																				},
																				"nativeSrc": "7860:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7860:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7884:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7884:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7839:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7839:20:12"
																		},
																		"nativeSrc": "7839:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7839:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7829:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7829:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7912:118:12",
															"nodeType": "YulBlock",
															"src": "7912:118:12",
															"statements": [
																{
																	"nativeSrc": "7927:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7927:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7941:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7931:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7931:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7957:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7957:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7992:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7992:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8003:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8003:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7988:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7988:3:12"
																				},
																				"nativeSrc": "7988:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7988:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8012:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8012:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7967:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7967:20:12"
																		},
																		"nativeSrc": "7967:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7967:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7957:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7957:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8040:118:12",
															"nodeType": "YulBlock",
															"src": "8040:118:12",
															"statements": [
																{
																	"nativeSrc": "8055:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8055:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8069:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8069:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8059:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8059:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8085:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8085:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8120:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8120:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8131:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8116:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8116:3:12"
																				},
																				"nativeSrc": "8116:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8116:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8140:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8140:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8095:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8095:20:12"
																		},
																		"nativeSrc": "8095:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8095:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8085:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8085:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8168:118:12",
															"nodeType": "YulBlock",
															"src": "8168:118:12",
															"statements": [
																{
																	"nativeSrc": "8183:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8183:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8197:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8197:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8187:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8187:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8213:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8213:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8248:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8248:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8259:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8259:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8244:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8244:3:12"
																				},
																				"nativeSrc": "8244:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8244:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8268:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8268:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8223:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8223:20:12"
																		},
																		"nativeSrc": "8223:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8213:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8213:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "7528:765:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7591:9:12",
														"nodeType": "YulTypedName",
														"src": "7591:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7602:7:12",
														"nodeType": "YulTypedName",
														"src": "7602:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7614:6:12",
														"nodeType": "YulTypedName",
														"src": "7614:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7622:6:12",
														"nodeType": "YulTypedName",
														"src": "7622:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7630:6:12",
														"nodeType": "YulTypedName",
														"src": "7630:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7638:6:12",
														"nodeType": "YulTypedName",
														"src": "7638:6:12",
														"type": ""
													}
												],
												"src": "7528:765:12"
											},
											{
												"body": {
													"nativeSrc": "8397:124:12",
													"nodeType": "YulBlock",
													"src": "8397:124:12",
													"statements": [
														{
															"nativeSrc": "8407:26:12",
															"nodeType": "YulAssignment",
															"src": "8407:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8419:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8419:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8430:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8415:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8415:3:12"
																},
																"nativeSrc": "8415:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8415:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8407:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8407:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8487:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8511:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:12"
																		},
																		"nativeSrc": "8496:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8443:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:12"
																},
																"nativeSrc": "8443:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8443:71:12"
															},
															"nativeSrc": "8443:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8443:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8299:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8369:9:12",
														"nodeType": "YulTypedName",
														"src": "8369:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8381:6:12",
														"nodeType": "YulTypedName",
														"src": "8381:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8392:4:12",
														"nodeType": "YulTypedName",
														"src": "8392:4:12",
														"type": ""
													}
												],
												"src": "8299:222:12"
											},
											{
												"body": {
													"nativeSrc": "8625:124:12",
													"nodeType": "YulBlock",
													"src": "8625:124:12",
													"statements": [
														{
															"nativeSrc": "8635:26:12",
															"nodeType": "YulAssignment",
															"src": "8635:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8647:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8647:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8658:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8643:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:12"
																},
																"nativeSrc": "8643:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8643:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8635:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8635:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8715:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8715:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8728:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8728:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8739:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8739:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:12"
																		},
																		"nativeSrc": "8724:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8724:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8671:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8671:43:12"
																},
																"nativeSrc": "8671:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8671:71:12"
															},
															"nativeSrc": "8671:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8671:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8527:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8597:9:12",
														"nodeType": "YulTypedName",
														"src": "8597:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8609:6:12",
														"nodeType": "YulTypedName",
														"src": "8609:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8620:4:12",
														"nodeType": "YulTypedName",
														"src": "8620:4:12",
														"type": ""
													}
												],
												"src": "8527:222:12"
											},
											{
												"body": {
													"nativeSrc": "8808:32:12",
													"nodeType": "YulBlock",
													"src": "8808:32:12",
													"statements": [
														{
															"nativeSrc": "8818:16:12",
															"nodeType": "YulAssignment",
															"src": "8818:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "8829:5:12",
																"nodeType": "YulIdentifier",
																"src": "8829:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8818:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8818:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "8755:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8790:5:12",
														"nodeType": "YulTypedName",
														"src": "8790:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8800:7:12",
														"nodeType": "YulTypedName",
														"src": "8800:7:12",
														"type": ""
													}
												],
												"src": "8755:85:12"
											},
											{
												"body": {
													"nativeSrc": "8890:57:12",
													"nodeType": "YulBlock",
													"src": "8890:57:12",
													"statements": [
														{
															"nativeSrc": "8900:41:12",
															"nodeType": "YulAssignment",
															"src": "8900:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8915:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8915:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8922:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8922:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8911:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8911:3:12"
																},
																"nativeSrc": "8911:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8911:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8900:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8900:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "8846:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8872:5:12",
														"nodeType": "YulTypedName",
														"src": "8872:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8882:7:12",
														"nodeType": "YulTypedName",
														"src": "8882:7:12",
														"type": ""
													}
												],
												"src": "8846:101:12"
											},
											{
												"body": {
													"nativeSrc": "8985:28:12",
													"nodeType": "YulBlock",
													"src": "8985:28:12",
													"statements": [
														{
															"nativeSrc": "8995:12:12",
															"nodeType": "YulAssignment",
															"src": "8995:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "9002:5:12",
																"nodeType": "YulIdentifier",
																"src": "9002:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8995:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8995:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8953:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8971:5:12",
														"nodeType": "YulTypedName",
														"src": "8971:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8981:3:12",
														"nodeType": "YulTypedName",
														"src": "8981:3:12",
														"type": ""
													}
												],
												"src": "8953:60:12"
											},
											{
												"body": {
													"nativeSrc": "9086:89:12",
													"nodeType": "YulBlock",
													"src": "9086:89:12",
													"statements": [
														{
															"nativeSrc": "9096:73:12",
															"nodeType": "YulAssignment",
															"src": "9096:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9161:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9161:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "9135:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "9135:25:12"
																				},
																				"nativeSrc": "9135:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9135:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9126:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "9126:8:12"
																		},
																		"nativeSrc": "9126:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "9109:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "9109:16:12"
																},
																"nativeSrc": "9109:60:12",
																"nodeType": "YulFunctionCall",
																"src": "9109:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9096:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "9096:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "9019:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9066:5:12",
														"nodeType": "YulTypedName",
														"src": "9066:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9076:9:12",
														"nodeType": "YulTypedName",
														"src": "9076:9:12",
														"type": ""
													}
												],
												"src": "9019:156:12"
											},
											{
												"body": {
													"nativeSrc": "9253:73:12",
													"nodeType": "YulBlock",
													"src": "9253:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9270:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9270:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9313:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9313:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "9275:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "9275:37:12"
																		},
																		"nativeSrc": "9275:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9275:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9263:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:12"
																},
																"nativeSrc": "9263:57:12",
																"nodeType": "YulFunctionCall",
																"src": "9263:57:12"
															},
															"nativeSrc": "9263:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "9263:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "9181:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9241:5:12",
														"nodeType": "YulTypedName",
														"src": "9241:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9248:3:12",
														"nodeType": "YulTypedName",
														"src": "9248:3:12",
														"type": ""
													}
												],
												"src": "9181:145:12"
											},
											{
												"body": {
													"nativeSrc": "9437:131:12",
													"nodeType": "YulBlock",
													"src": "9437:131:12",
													"statements": [
														{
															"nativeSrc": "9447:26:12",
															"nodeType": "YulAssignment",
															"src": "9447:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9459:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9459:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9470:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9470:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9455:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9455:3:12"
																},
																"nativeSrc": "9455:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9455:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9447:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9447:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9534:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9534:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9547:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9547:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9558:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9558:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9543:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9543:3:12"
																		},
																		"nativeSrc": "9543:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9543:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "9483:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "9483:50:12"
																},
																"nativeSrc": "9483:78:12",
																"nodeType": "YulFunctionCall",
																"src": "9483:78:12"
															},
															"nativeSrc": "9483:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "9483:78:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "9332:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9409:9:12",
														"nodeType": "YulTypedName",
														"src": "9409:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9421:6:12",
														"nodeType": "YulTypedName",
														"src": "9421:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9432:4:12",
														"nodeType": "YulTypedName",
														"src": "9432:4:12",
														"type": ""
													}
												],
												"src": "9332:236:12"
											},
											{
												"body": {
													"nativeSrc": "9602:152:12",
													"nodeType": "YulBlock",
													"src": "9602:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9619:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9619:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9622:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9622:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9612:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9612:6:12"
																},
																"nativeSrc": "9612:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9612:88:12"
															},
															"nativeSrc": "9612:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9612:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9716:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9716:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9719:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9709:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:12"
																},
																"nativeSrc": "9709:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9709:15:12"
															},
															"nativeSrc": "9709:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9709:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9743:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9743:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:12"
																},
																"nativeSrc": "9733:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9733:15:12"
															},
															"nativeSrc": "9733:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9733:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9574:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9574:180:12"
											},
											{
												"body": {
													"nativeSrc": "9804:147:12",
													"nodeType": "YulBlock",
													"src": "9804:147:12",
													"statements": [
														{
															"nativeSrc": "9814:25:12",
															"nodeType": "YulAssignment",
															"src": "9814:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9837:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9837:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9819:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9819:17:12"
																},
																"nativeSrc": "9819:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9819:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9814:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9814:1:12"
																}
															]
														},
														{
															"nativeSrc": "9848:25:12",
															"nodeType": "YulAssignment",
															"src": "9848:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9871:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9871:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9853:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9853:17:12"
																},
																"nativeSrc": "9853:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9853:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9848:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9848:1:12"
																}
															]
														},
														{
															"nativeSrc": "9882:16:12",
															"nodeType": "YulAssignment",
															"src": "9882:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9893:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9893:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9896:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9896:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9889:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9889:3:12"
																},
																"nativeSrc": "9889:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9889:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9882:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9882:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9922:22:12",
																"nodeType": "YulBlock",
																"src": "9922:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9924:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9924:16:12"
																			},
																			"nativeSrc": "9924:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9924:18:12"
																		},
																		"nativeSrc": "9924:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9924:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9914:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9917:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9917:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9911:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9911:2:12"
																},
																"nativeSrc": "9911:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9911:10:12"
															},
															"nativeSrc": "9908:36:12",
															"nodeType": "YulIf",
															"src": "9908:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9760:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9791:1:12",
														"nodeType": "YulTypedName",
														"src": "9791:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9794:1:12",
														"nodeType": "YulTypedName",
														"src": "9794:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9800:3:12",
														"nodeType": "YulTypedName",
														"src": "9800:3:12",
														"type": ""
													}
												],
												"src": "9760:191:12"
											},
											{
												"body": {
													"nativeSrc": "10063:61:12",
													"nodeType": "YulBlock",
													"src": "10063:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10085:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10085:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10093:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10093:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10081:3:12"
																		},
																		"nativeSrc": "10081:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10081:14:12"
																	},
																	{
																		"hexValue": "41756374696f6e2068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "10097:19:12",
																		"nodeType": "YulLiteral",
																		"src": "10097:19:12",
																		"type": "",
																		"value": "Auction has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10074:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10074:6:12"
																},
																"nativeSrc": "10074:43:12",
																"nodeType": "YulFunctionCall",
																"src": "10074:43:12"
															},
															"nativeSrc": "10074:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "10074:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
												"nativeSrc": "9957:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10055:6:12",
														"nodeType": "YulTypedName",
														"src": "10055:6:12",
														"type": ""
													}
												],
												"src": "9957:167:12"
											},
											{
												"body": {
													"nativeSrc": "10276:220:12",
													"nodeType": "YulBlock",
													"src": "10276:220:12",
													"statements": [
														{
															"nativeSrc": "10286:74:12",
															"nodeType": "YulAssignment",
															"src": "10286:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10352:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10352:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10357:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10357:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10293:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10293:58:12"
																},
																"nativeSrc": "10293:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10293:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10286:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10286:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10458:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10458:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																	"nativeSrc": "10369:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10369:88:12"
																},
																"nativeSrc": "10369:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10369:93:12"
															},
															"nativeSrc": "10369:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10369:93:12"
														},
														{
															"nativeSrc": "10471:19:12",
															"nodeType": "YulAssignment",
															"src": "10471:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10482:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10482:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10487:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10487:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10478:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10478:3:12"
																},
																"nativeSrc": "10478:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10478:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10471:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10130:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10264:3:12",
														"nodeType": "YulTypedName",
														"src": "10264:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10272:3:12",
														"nodeType": "YulTypedName",
														"src": "10272:3:12",
														"type": ""
													}
												],
												"src": "10130:366:12"
											},
											{
												"body": {
													"nativeSrc": "10673:248:12",
													"nodeType": "YulBlock",
													"src": "10673:248:12",
													"statements": [
														{
															"nativeSrc": "10683:26:12",
															"nodeType": "YulAssignment",
															"src": "10683:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10695:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10706:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10691:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10691:3:12"
																},
																"nativeSrc": "10691:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10691:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10683:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10683:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10730:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10730:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10741:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10741:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10726:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10726:3:12"
																		},
																		"nativeSrc": "10726:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10726:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10749:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10749:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10755:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10745:3:12"
																		},
																		"nativeSrc": "10745:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10745:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10719:6:12"
																},
																"nativeSrc": "10719:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10719:47:12"
															},
															"nativeSrc": "10719:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10719:47:12"
														},
														{
															"nativeSrc": "10775:139:12",
															"nodeType": "YulAssignment",
															"src": "10775:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10909:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10909:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10783:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10783:124:12"
																},
																"nativeSrc": "10783:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10783:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10775:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10502:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10653:9:12",
														"nodeType": "YulTypedName",
														"src": "10653:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10668:4:12",
														"nodeType": "YulTypedName",
														"src": "10668:4:12",
														"type": ""
													}
												],
												"src": "10502:419:12"
											},
											{
												"body": {
													"nativeSrc": "11033:128:12",
													"nodeType": "YulBlock",
													"src": "11033:128:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11055:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11055:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11063:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11063:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11051:3:12"
																		},
																		"nativeSrc": "11051:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11051:14:12"
																	},
																	{
																		"hexValue": "426964206d75737420626520686967686572207468616e207468652063757272",
																		"kind": "string",
																		"nativeSrc": "11067:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11067:34:12",
																		"type": "",
																		"value": "Bid must be higher than the curr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11044:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:12"
																},
																"nativeSrc": "11044:58:12",
																"nodeType": "YulFunctionCall",
																"src": "11044:58:12"
															},
															"nativeSrc": "11044:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "11044:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11123:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11123:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11131:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11131:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11119:3:12"
																		},
																		"nativeSrc": "11119:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11119:15:12"
																	},
																	{
																		"hexValue": "656e74206869676865737420626964",
																		"kind": "string",
																		"nativeSrc": "11136:17:12",
																		"nodeType": "YulLiteral",
																		"src": "11136:17:12",
																		"type": "",
																		"value": "ent highest bid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11112:6:12"
																},
																"nativeSrc": "11112:42:12",
																"nodeType": "YulFunctionCall",
																"src": "11112:42:12"
															},
															"nativeSrc": "11112:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "11112:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5",
												"nativeSrc": "10927:234:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11025:6:12",
														"nodeType": "YulTypedName",
														"src": "11025:6:12",
														"type": ""
													}
												],
												"src": "10927:234:12"
											},
											{
												"body": {
													"nativeSrc": "11313:220:12",
													"nodeType": "YulBlock",
													"src": "11313:220:12",
													"statements": [
														{
															"nativeSrc": "11323:74:12",
															"nodeType": "YulAssignment",
															"src": "11323:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11389:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11389:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11394:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11330:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11330:58:12"
																},
																"nativeSrc": "11330:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11330:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11323:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11323:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11495:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11495:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5",
																	"nativeSrc": "11406:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11406:88:12"
																},
																"nativeSrc": "11406:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11406:93:12"
															},
															"nativeSrc": "11406:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11406:93:12"
														},
														{
															"nativeSrc": "11508:19:12",
															"nodeType": "YulAssignment",
															"src": "11508:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11519:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11519:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11524:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11515:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:12"
																},
																"nativeSrc": "11515:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11515:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11167:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11301:3:12",
														"nodeType": "YulTypedName",
														"src": "11301:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11309:3:12",
														"nodeType": "YulTypedName",
														"src": "11309:3:12",
														"type": ""
													}
												],
												"src": "11167:366:12"
											},
											{
												"body": {
													"nativeSrc": "11710:248:12",
													"nodeType": "YulBlock",
													"src": "11710:248:12",
													"statements": [
														{
															"nativeSrc": "11720:26:12",
															"nodeType": "YulAssignment",
															"src": "11720:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11732:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11732:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11743:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11743:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11728:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:12"
																},
																"nativeSrc": "11728:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11728:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11720:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11720:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11767:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11767:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11778:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11778:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11763:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:12"
																		},
																		"nativeSrc": "11763:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11763:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11786:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11786:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11792:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11792:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11782:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11782:3:12"
																		},
																		"nativeSrc": "11782:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11782:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11756:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11756:6:12"
																},
																"nativeSrc": "11756:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11756:47:12"
															},
															"nativeSrc": "11756:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11756:47:12"
														},
														{
															"nativeSrc": "11812:139:12",
															"nodeType": "YulAssignment",
															"src": "11812:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11946:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11946:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11820:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11820:124:12"
																},
																"nativeSrc": "11820:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11820:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11812:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11812:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11539:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11690:9:12",
														"nodeType": "YulTypedName",
														"src": "11690:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11705:4:12",
														"nodeType": "YulTypedName",
														"src": "11705:4:12",
														"type": ""
													}
												],
												"src": "11539:419:12"
											},
											{
												"body": {
													"nativeSrc": "12070:74:12",
													"nodeType": "YulBlock",
													"src": "12070:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12092:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12092:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12100:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12100:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12088:3:12"
																		},
																		"nativeSrc": "12088:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12088:14:12"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e206372656174652061756374696f6e73",
																		"kind": "string",
																		"nativeSrc": "12104:32:12",
																		"nodeType": "YulLiteral",
																		"src": "12104:32:12",
																		"type": "",
																		"value": "Only admin can create auctions"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12081:6:12"
																},
																"nativeSrc": "12081:56:12",
																"nodeType": "YulFunctionCall",
																"src": "12081:56:12"
															},
															"nativeSrc": "12081:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "12081:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905",
												"nativeSrc": "11964:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12062:6:12",
														"nodeType": "YulTypedName",
														"src": "12062:6:12",
														"type": ""
													}
												],
												"src": "11964:180:12"
											},
											{
												"body": {
													"nativeSrc": "12296:220:12",
													"nodeType": "YulBlock",
													"src": "12296:220:12",
													"statements": [
														{
															"nativeSrc": "12306:74:12",
															"nodeType": "YulAssignment",
															"src": "12306:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12372:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12372:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12377:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12377:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12313:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12313:58:12"
																},
																"nativeSrc": "12313:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12313:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12306:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12306:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12478:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905",
																	"nativeSrc": "12389:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12389:88:12"
																},
																"nativeSrc": "12389:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12389:93:12"
															},
															"nativeSrc": "12389:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12389:93:12"
														},
														{
															"nativeSrc": "12491:19:12",
															"nodeType": "YulAssignment",
															"src": "12491:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12502:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12502:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12507:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12507:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:12"
																},
																"nativeSrc": "12498:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12498:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12491:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12150:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12284:3:12",
														"nodeType": "YulTypedName",
														"src": "12284:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12292:3:12",
														"nodeType": "YulTypedName",
														"src": "12292:3:12",
														"type": ""
													}
												],
												"src": "12150:366:12"
											},
											{
												"body": {
													"nativeSrc": "12693:248:12",
													"nodeType": "YulBlock",
													"src": "12693:248:12",
													"statements": [
														{
															"nativeSrc": "12703:26:12",
															"nodeType": "YulAssignment",
															"src": "12703:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12715:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12715:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12726:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12711:3:12"
																},
																"nativeSrc": "12711:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12711:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12703:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12703:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12750:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12750:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12761:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12761:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12746:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12746:3:12"
																		},
																		"nativeSrc": "12746:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12746:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12769:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12769:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12775:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12775:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12765:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12765:3:12"
																		},
																		"nativeSrc": "12765:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12765:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12739:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12739:6:12"
																},
																"nativeSrc": "12739:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12739:47:12"
															},
															"nativeSrc": "12739:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12739:47:12"
														},
														{
															"nativeSrc": "12795:139:12",
															"nodeType": "YulAssignment",
															"src": "12795:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12929:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12929:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12803:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12803:124:12"
																},
																"nativeSrc": "12803:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12803:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12795:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12795:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12522:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12673:9:12",
														"nodeType": "YulTypedName",
														"src": "12673:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12688:4:12",
														"nodeType": "YulTypedName",
														"src": "12688:4:12",
														"type": ""
													}
												],
												"src": "12522:419:12"
											},
											{
												"body": {
													"nativeSrc": "13053:75:12",
													"nodeType": "YulBlock",
													"src": "13053:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13075:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13075:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13083:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13083:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13071:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:12"
																		},
																		"nativeSrc": "13071:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:14:12"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "13087:33:12",
																		"nodeType": "YulLiteral",
																		"src": "13087:33:12",
																		"type": "",
																		"value": "Duration must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13064:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13064:6:12"
																},
																"nativeSrc": "13064:57:12",
																"nodeType": "YulFunctionCall",
																"src": "13064:57:12"
															},
															"nativeSrc": "13064:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "13064:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
												"nativeSrc": "12947:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13045:6:12",
														"nodeType": "YulTypedName",
														"src": "13045:6:12",
														"type": ""
													}
												],
												"src": "12947:181:12"
											},
											{
												"body": {
													"nativeSrc": "13280:220:12",
													"nodeType": "YulBlock",
													"src": "13280:220:12",
													"statements": [
														{
															"nativeSrc": "13290:74:12",
															"nodeType": "YulAssignment",
															"src": "13290:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13356:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13356:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13361:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13361:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13297:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13297:58:12"
																},
																"nativeSrc": "13297:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13297:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13290:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13290:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13462:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13462:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																	"nativeSrc": "13373:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13373:88:12"
																},
																"nativeSrc": "13373:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13373:93:12"
															},
															"nativeSrc": "13373:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13373:93:12"
														},
														{
															"nativeSrc": "13475:19:12",
															"nodeType": "YulAssignment",
															"src": "13475:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13486:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13491:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13491:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13482:3:12"
																},
																"nativeSrc": "13482:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13482:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13475:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13475:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13134:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13268:3:12",
														"nodeType": "YulTypedName",
														"src": "13268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13276:3:12",
														"nodeType": "YulTypedName",
														"src": "13276:3:12",
														"type": ""
													}
												],
												"src": "13134:366:12"
											},
											{
												"body": {
													"nativeSrc": "13677:248:12",
													"nodeType": "YulBlock",
													"src": "13677:248:12",
													"statements": [
														{
															"nativeSrc": "13687:26:12",
															"nodeType": "YulAssignment",
															"src": "13687:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13699:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13699:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13710:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13710:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13695:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13695:3:12"
																},
																"nativeSrc": "13695:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13695:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13687:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13687:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13734:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13734:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13745:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13745:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13730:3:12"
																		},
																		"nativeSrc": "13730:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13730:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13753:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13753:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13759:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13759:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13749:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13749:3:12"
																		},
																		"nativeSrc": "13749:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13749:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13723:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13723:6:12"
																},
																"nativeSrc": "13723:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13723:47:12"
															},
															"nativeSrc": "13723:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13723:47:12"
														},
														{
															"nativeSrc": "13779:139:12",
															"nodeType": "YulAssignment",
															"src": "13779:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13913:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13913:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13787:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13787:124:12"
																},
																"nativeSrc": "13787:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13787:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13779:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13779:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13506:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13657:9:12",
														"nodeType": "YulTypedName",
														"src": "13657:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13672:4:12",
														"nodeType": "YulTypedName",
														"src": "13672:4:12",
														"type": ""
													}
												],
												"src": "13506:419:12"
											},
											{
												"body": {
													"nativeSrc": "14037:115:12",
													"nodeType": "YulBlock",
													"src": "14037:115:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14059:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14059:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14067:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14067:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14055:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14055:3:12"
																		},
																		"nativeSrc": "14055:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14055:14:12"
																	},
																	{
																		"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "14071:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14071:34:12",
																		"type": "",
																		"value": "Start price must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14048:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:12"
																},
																"nativeSrc": "14048:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14048:58:12"
															},
															"nativeSrc": "14048:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14048:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14127:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14127:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14135:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14135:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14123:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14123:3:12"
																		},
																		"nativeSrc": "14123:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14123:15:12"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "14140:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14140:4:12",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14116:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14116:6:12"
																},
																"nativeSrc": "14116:29:12",
																"nodeType": "YulFunctionCall",
																"src": "14116:29:12"
															},
															"nativeSrc": "14116:29:12",
															"nodeType": "YulExpressionStatement",
															"src": "14116:29:12"
														}
													]
												},
												"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
												"nativeSrc": "13931:221:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14029:6:12",
														"nodeType": "YulTypedName",
														"src": "14029:6:12",
														"type": ""
													}
												],
												"src": "13931:221:12"
											},
											{
												"body": {
													"nativeSrc": "14304:220:12",
													"nodeType": "YulBlock",
													"src": "14304:220:12",
													"statements": [
														{
															"nativeSrc": "14314:74:12",
															"nodeType": "YulAssignment",
															"src": "14314:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14380:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14380:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14385:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14385:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14321:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14321:58:12"
																},
																"nativeSrc": "14321:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14321:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14314:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14314:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14486:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																	"nativeSrc": "14397:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14397:88:12"
																},
																"nativeSrc": "14397:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14397:93:12"
															},
															"nativeSrc": "14397:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14397:93:12"
														},
														{
															"nativeSrc": "14499:19:12",
															"nodeType": "YulAssignment",
															"src": "14499:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14510:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14510:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14515:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14515:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14506:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14506:3:12"
																},
																"nativeSrc": "14506:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14506:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14499:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14499:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14158:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14292:3:12",
														"nodeType": "YulTypedName",
														"src": "14292:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14300:3:12",
														"nodeType": "YulTypedName",
														"src": "14300:3:12",
														"type": ""
													}
												],
												"src": "14158:366:12"
											},
											{
												"body": {
													"nativeSrc": "14701:248:12",
													"nodeType": "YulBlock",
													"src": "14701:248:12",
													"statements": [
														{
															"nativeSrc": "14711:26:12",
															"nodeType": "YulAssignment",
															"src": "14711:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14723:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14723:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14734:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14734:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:12"
																},
																"nativeSrc": "14719:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14719:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14711:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14711:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14758:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14758:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14769:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14769:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14754:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14754:3:12"
																		},
																		"nativeSrc": "14754:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14754:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14777:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14777:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14783:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14783:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14773:3:12"
																		},
																		"nativeSrc": "14773:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14773:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14747:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14747:6:12"
																},
																"nativeSrc": "14747:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14747:47:12"
															},
															"nativeSrc": "14747:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14747:47:12"
														},
														{
															"nativeSrc": "14803:139:12",
															"nodeType": "YulAssignment",
															"src": "14803:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14937:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14937:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14811:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14811:124:12"
																},
																"nativeSrc": "14811:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14811:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14803:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14803:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14530:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14681:9:12",
														"nodeType": "YulTypedName",
														"src": "14681:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14696:4:12",
														"nodeType": "YulTypedName",
														"src": "14696:4:12",
														"type": ""
													}
												],
												"src": "14530:419:12"
											},
											{
												"body": {
													"nativeSrc": "15081:206:12",
													"nodeType": "YulBlock",
													"src": "15081:206:12",
													"statements": [
														{
															"nativeSrc": "15091:26:12",
															"nodeType": "YulAssignment",
															"src": "15091:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15103:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15103:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15114:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15114:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15099:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15099:3:12"
																},
																"nativeSrc": "15099:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15099:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15091:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15091:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15171:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15171:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15184:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15184:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15195:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15195:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15180:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15180:3:12"
																		},
																		"nativeSrc": "15180:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15180:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15127:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15127:43:12"
																},
																"nativeSrc": "15127:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15127:71:12"
															},
															"nativeSrc": "15127:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "15127:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15252:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15252:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15265:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15265:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15276:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15276:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:12"
																		},
																		"nativeSrc": "15261:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15261:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15208:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15208:43:12"
																},
																"nativeSrc": "15208:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15208:72:12"
															},
															"nativeSrc": "15208:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15208:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14955:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15045:9:12",
														"nodeType": "YulTypedName",
														"src": "15045:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15057:6:12",
														"nodeType": "YulTypedName",
														"src": "15057:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15065:6:12",
														"nodeType": "YulTypedName",
														"src": "15065:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15076:4:12",
														"nodeType": "YulTypedName",
														"src": "15076:4:12",
														"type": ""
													}
												],
												"src": "14955:332:12"
											},
											{
												"body": {
													"nativeSrc": "15336:190:12",
													"nodeType": "YulBlock",
													"src": "15336:190:12",
													"statements": [
														{
															"nativeSrc": "15346:33:12",
															"nodeType": "YulAssignment",
															"src": "15346:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15373:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15373:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15355:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15355:17:12"
																},
																"nativeSrc": "15355:24:12",
																"nodeType": "YulFunctionCall",
																"src": "15355:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15346:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15346:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15469:22:12",
																"nodeType": "YulBlock",
																"src": "15469:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15471:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15471:16:12"
																			},
																			"nativeSrc": "15471:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15471:18:12"
																		},
																		"nativeSrc": "15471:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15471:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15394:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15394:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15401:66:12",
																		"nodeType": "YulLiteral",
																		"src": "15401:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15391:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15391:2:12"
																},
																"nativeSrc": "15391:77:12",
																"nodeType": "YulFunctionCall",
																"src": "15391:77:12"
															},
															"nativeSrc": "15388:103:12",
															"nodeType": "YulIf",
															"src": "15388:103:12"
														},
														{
															"nativeSrc": "15500:20:12",
															"nodeType": "YulAssignment",
															"src": "15500:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15511:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15511:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15518:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15518:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15507:3:12"
																},
																"nativeSrc": "15507:13:12",
																"nodeType": "YulFunctionCall",
																"src": "15507:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15500:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15293:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15322:5:12",
														"nodeType": "YulTypedName",
														"src": "15322:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15332:3:12",
														"nodeType": "YulTypedName",
														"src": "15332:3:12",
														"type": ""
													}
												],
												"src": "15293:233:12"
											},
											{
												"body": {
													"nativeSrc": "15638:65:12",
													"nodeType": "YulBlock",
													"src": "15638:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15660:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15660:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15668:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15668:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15656:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:12"
																		},
																		"nativeSrc": "15656:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15656:14:12"
																	},
																	{
																		"hexValue": "41756374696f6e20686173206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "15672:23:12",
																		"nodeType": "YulLiteral",
																		"src": "15672:23:12",
																		"type": "",
																		"value": "Auction has not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15649:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15649:6:12"
																},
																"nativeSrc": "15649:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15649:47:12"
															},
															"nativeSrc": "15649:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15649:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b",
												"nativeSrc": "15532:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15630:6:12",
														"nodeType": "YulTypedName",
														"src": "15630:6:12",
														"type": ""
													}
												],
												"src": "15532:171:12"
											},
											{
												"body": {
													"nativeSrc": "15855:220:12",
													"nodeType": "YulBlock",
													"src": "15855:220:12",
													"statements": [
														{
															"nativeSrc": "15865:74:12",
															"nodeType": "YulAssignment",
															"src": "15865:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15931:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15931:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15936:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15936:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15872:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15872:58:12"
																},
																"nativeSrc": "15872:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15872:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15865:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16037:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16037:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b",
																	"nativeSrc": "15948:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15948:88:12"
																},
																"nativeSrc": "15948:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15948:93:12"
															},
															"nativeSrc": "15948:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15948:93:12"
														},
														{
															"nativeSrc": "16050:19:12",
															"nodeType": "YulAssignment",
															"src": "16050:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16061:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16061:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16066:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16066:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16057:3:12"
																},
																"nativeSrc": "16057:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16057:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16050:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16050:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15709:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15843:3:12",
														"nodeType": "YulTypedName",
														"src": "15843:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15851:3:12",
														"nodeType": "YulTypedName",
														"src": "15851:3:12",
														"type": ""
													}
												],
												"src": "15709:366:12"
											},
											{
												"body": {
													"nativeSrc": "16252:248:12",
													"nodeType": "YulBlock",
													"src": "16252:248:12",
													"statements": [
														{
															"nativeSrc": "16262:26:12",
															"nodeType": "YulAssignment",
															"src": "16262:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16274:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16274:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16285:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16285:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16270:3:12"
																},
																"nativeSrc": "16270:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16270:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16262:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16262:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16309:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16320:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16320:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16305:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16305:3:12"
																		},
																		"nativeSrc": "16305:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16305:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16328:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16328:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16334:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16334:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16324:3:12"
																		},
																		"nativeSrc": "16324:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16324:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16298:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16298:6:12"
																},
																"nativeSrc": "16298:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16298:47:12"
															},
															"nativeSrc": "16298:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16298:47:12"
														},
														{
															"nativeSrc": "16354:139:12",
															"nodeType": "YulAssignment",
															"src": "16354:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16488:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16488:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16362:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16362:124:12"
																},
																"nativeSrc": "16362:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16362:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16354:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16354:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16081:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16232:9:12",
														"nodeType": "YulTypedName",
														"src": "16232:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16247:4:12",
														"nodeType": "YulTypedName",
														"src": "16247:4:12",
														"type": ""
													}
												],
												"src": "16081:419:12"
											},
											{
												"body": {
													"nativeSrc": "16660:288:12",
													"nodeType": "YulBlock",
													"src": "16660:288:12",
													"statements": [
														{
															"nativeSrc": "16670:26:12",
															"nodeType": "YulAssignment",
															"src": "16670:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16682:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16682:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16693:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16693:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16678:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:12"
																},
																"nativeSrc": "16678:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16678:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16670:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16670:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16750:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16750:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16763:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16763:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16774:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16774:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:12"
																		},
																		"nativeSrc": "16759:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16706:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16706:43:12"
																},
																"nativeSrc": "16706:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16706:71:12"
															},
															"nativeSrc": "16706:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16706:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16831:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16831:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16844:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16844:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16855:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16855:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16840:3:12"
																		},
																		"nativeSrc": "16840:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16840:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16787:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16787:43:12"
																},
																"nativeSrc": "16787:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16787:72:12"
															},
															"nativeSrc": "16787:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16787:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16913:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16913:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16937:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16937:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16922:3:12"
																		},
																		"nativeSrc": "16922:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16922:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16869:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16869:43:12"
																},
																"nativeSrc": "16869:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16869:72:12"
															},
															"nativeSrc": "16869:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16869:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16506:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16616:9:12",
														"nodeType": "YulTypedName",
														"src": "16616:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16628:6:12",
														"nodeType": "YulTypedName",
														"src": "16628:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16636:6:12",
														"nodeType": "YulTypedName",
														"src": "16636:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16644:6:12",
														"nodeType": "YulTypedName",
														"src": "16644:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16655:4:12",
														"nodeType": "YulTypedName",
														"src": "16655:4:12",
														"type": ""
													}
												],
												"src": "16506:442:12"
											},
											{
												"body": {
													"nativeSrc": "17060:66:12",
													"nodeType": "YulBlock",
													"src": "17060:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17082:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17082:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17090:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17090:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17078:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17078:3:12"
																		},
																		"nativeSrc": "17078:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17078:14:12"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e2075706772616465",
																		"kind": "string",
																		"nativeSrc": "17094:24:12",
																		"nodeType": "YulLiteral",
																		"src": "17094:24:12",
																		"type": "",
																		"value": "Only admin can upgrade"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17071:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17071:6:12"
																},
																"nativeSrc": "17071:48:12",
																"nodeType": "YulFunctionCall",
																"src": "17071:48:12"
															},
															"nativeSrc": "17071:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "17071:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
												"nativeSrc": "16954:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17052:6:12",
														"nodeType": "YulTypedName",
														"src": "17052:6:12",
														"type": ""
													}
												],
												"src": "16954:172:12"
											},
											{
												"body": {
													"nativeSrc": "17278:220:12",
													"nodeType": "YulBlock",
													"src": "17278:220:12",
													"statements": [
														{
															"nativeSrc": "17288:74:12",
															"nodeType": "YulAssignment",
															"src": "17288:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17354:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17354:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17359:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17359:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17295:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17295:58:12"
																},
																"nativeSrc": "17295:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17295:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17288:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17460:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17460:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																	"nativeSrc": "17371:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17371:88:12"
																},
																"nativeSrc": "17371:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17371:93:12"
															},
															"nativeSrc": "17371:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17371:93:12"
														},
														{
															"nativeSrc": "17473:19:12",
															"nodeType": "YulAssignment",
															"src": "17473:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17484:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17484:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17489:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17489:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17480:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17480:3:12"
																},
																"nativeSrc": "17480:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17480:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17473:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17473:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17132:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17266:3:12",
														"nodeType": "YulTypedName",
														"src": "17266:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17274:3:12",
														"nodeType": "YulTypedName",
														"src": "17274:3:12",
														"type": ""
													}
												],
												"src": "17132:366:12"
											},
											{
												"body": {
													"nativeSrc": "17675:248:12",
													"nodeType": "YulBlock",
													"src": "17675:248:12",
													"statements": [
														{
															"nativeSrc": "17685:26:12",
															"nodeType": "YulAssignment",
															"src": "17685:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17697:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17697:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17708:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17708:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17693:3:12"
																},
																"nativeSrc": "17693:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17693:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17685:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17685:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17732:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17732:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17743:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17743:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17728:3:12"
																		},
																		"nativeSrc": "17728:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17728:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17751:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17751:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17757:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17757:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17747:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17747:3:12"
																		},
																		"nativeSrc": "17747:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17747:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17721:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17721:6:12"
																},
																"nativeSrc": "17721:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17721:47:12"
															},
															"nativeSrc": "17721:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17721:47:12"
														},
														{
															"nativeSrc": "17777:139:12",
															"nodeType": "YulAssignment",
															"src": "17777:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17911:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17911:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17785:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17785:124:12"
																},
																"nativeSrc": "17785:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17785:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17777:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17777:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17504:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17655:9:12",
														"nodeType": "YulTypedName",
														"src": "17655:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17670:4:12",
														"nodeType": "YulTypedName",
														"src": "17670:4:12",
														"type": ""
													}
												],
												"src": "17504:419:12"
											},
											{
												"body": {
													"nativeSrc": "17972:79:12",
													"nodeType": "YulBlock",
													"src": "17972:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "18029:16:12",
																"nodeType": "YulBlock",
																"src": "18029:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18038:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18038:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18041:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18041:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18031:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18031:6:12"
																			},
																			"nativeSrc": "18031:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18031:12:12"
																		},
																		"nativeSrc": "18031:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18031:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17995:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "17995:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18020:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "18020:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "18002:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "18002:17:12"
																				},
																				"nativeSrc": "18002:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18002:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17992:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17992:2:12"
																		},
																		"nativeSrc": "17992:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17992:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17985:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17985:6:12"
																},
																"nativeSrc": "17985:43:12",
																"nodeType": "YulFunctionCall",
																"src": "17985:43:12"
															},
															"nativeSrc": "17982:63:12",
															"nodeType": "YulIf",
															"src": "17982:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "17929:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17965:5:12",
														"nodeType": "YulTypedName",
														"src": "17965:5:12",
														"type": ""
													}
												],
												"src": "17929:122:12"
											},
											{
												"body": {
													"nativeSrc": "18120:80:12",
													"nodeType": "YulBlock",
													"src": "18120:80:12",
													"statements": [
														{
															"nativeSrc": "18130:22:12",
															"nodeType": "YulAssignment",
															"src": "18130:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18145:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18145:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18139:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18139:5:12"
																},
																"nativeSrc": "18139:13:12",
																"nodeType": "YulFunctionCall",
																"src": "18139:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18130:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18130:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18188:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18188:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "18161:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "18161:26:12"
																},
																"nativeSrc": "18161:33:12",
																"nodeType": "YulFunctionCall",
																"src": "18161:33:12"
															},
															"nativeSrc": "18161:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "18161:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "18057:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18098:6:12",
														"nodeType": "YulTypedName",
														"src": "18098:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18106:3:12",
														"nodeType": "YulTypedName",
														"src": "18106:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18114:5:12",
														"nodeType": "YulTypedName",
														"src": "18114:5:12",
														"type": ""
													}
												],
												"src": "18057:143:12"
											},
											{
												"body": {
													"nativeSrc": "18283:274:12",
													"nodeType": "YulBlock",
													"src": "18283:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "18329:83:12",
																"nodeType": "YulBlock",
																"src": "18329:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18331:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "18331:77:12"
																			},
																			"nativeSrc": "18331:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18331:79:12"
																		},
																		"nativeSrc": "18331:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18331:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18304:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18304:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18313:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18313:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18300:3:12"
																		},
																		"nativeSrc": "18300:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18300:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18325:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18325:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18296:3:12"
																},
																"nativeSrc": "18296:32:12",
																"nodeType": "YulFunctionCall",
																"src": "18296:32:12"
															},
															"nativeSrc": "18293:119:12",
															"nodeType": "YulIf",
															"src": "18293:119:12"
														},
														{
															"nativeSrc": "18422:128:12",
															"nodeType": "YulBlock",
															"src": "18422:128:12",
															"statements": [
																{
																	"nativeSrc": "18437:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18437:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18451:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18451:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18441:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18441:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18466:74:12",
																	"nodeType": "YulAssignment",
																	"src": "18466:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18512:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18512:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18523:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18523:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18508:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18508:3:12"
																				},
																				"nativeSrc": "18508:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18508:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18532:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18532:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "18476:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "18476:31:12"
																		},
																		"nativeSrc": "18476:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18476:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18466:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18466:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "18206:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18253:9:12",
														"nodeType": "YulTypedName",
														"src": "18253:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18264:7:12",
														"nodeType": "YulTypedName",
														"src": "18264:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18276:6:12",
														"nodeType": "YulTypedName",
														"src": "18276:6:12",
														"type": ""
													}
												],
												"src": "18206:351:12"
											},
											{
												"body": {
													"nativeSrc": "18621:40:12",
													"nodeType": "YulBlock",
													"src": "18621:40:12",
													"statements": [
														{
															"nativeSrc": "18632:22:12",
															"nodeType": "YulAssignment",
															"src": "18632:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18648:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18648:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18642:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18642:5:12"
																},
																"nativeSrc": "18642:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18642:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18632:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18632:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18563:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18604:5:12",
														"nodeType": "YulTypedName",
														"src": "18604:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18614:6:12",
														"nodeType": "YulTypedName",
														"src": "18614:6:12",
														"type": ""
													}
												],
												"src": "18563:98:12"
											},
											{
												"body": {
													"nativeSrc": "18780:34:12",
													"nodeType": "YulBlock",
													"src": "18780:34:12",
													"statements": [
														{
															"nativeSrc": "18790:18:12",
															"nodeType": "YulAssignment",
															"src": "18790:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "18805:3:12",
																"nodeType": "YulIdentifier",
																"src": "18805:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18790:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "18790:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18667:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18752:3:12",
														"nodeType": "YulTypedName",
														"src": "18752:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18757:6:12",
														"nodeType": "YulTypedName",
														"src": "18757:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18768:11:12",
														"nodeType": "YulTypedName",
														"src": "18768:11:12",
														"type": ""
													}
												],
												"src": "18667:147:12"
											},
											{
												"body": {
													"nativeSrc": "18928:278:12",
													"nodeType": "YulBlock",
													"src": "18928:278:12",
													"statements": [
														{
															"nativeSrc": "18938:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18938:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18984:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18984:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18952:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "18952:31:12"
																},
																"nativeSrc": "18952:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18952:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18942:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18942:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18999:95:12",
															"nodeType": "YulAssignment",
															"src": "18999:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19082:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19087:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19087:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19006:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "19006:75:12"
																},
																"nativeSrc": "19006:88:12",
																"nodeType": "YulFunctionCall",
																"src": "19006:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18999:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18999:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19142:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "19142:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19149:4:12",
																				"nodeType": "YulLiteral",
																				"src": "19149:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19138:3:12"
																		},
																		"nativeSrc": "19138:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19138:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19156:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19156:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19161:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19161:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19103:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "19103:34:12"
																},
																"nativeSrc": "19103:65:12",
																"nodeType": "YulFunctionCall",
																"src": "19103:65:12"
															},
															"nativeSrc": "19103:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "19103:65:12"
														},
														{
															"nativeSrc": "19177:23:12",
															"nodeType": "YulAssignment",
															"src": "19177:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19188:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19188:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19193:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19193:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19184:3:12"
																},
																"nativeSrc": "19184:16:12",
																"nodeType": "YulFunctionCall",
																"src": "19184:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19177:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19177:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18820:386:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18909:5:12",
														"nodeType": "YulTypedName",
														"src": "18909:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18916:3:12",
														"nodeType": "YulTypedName",
														"src": "18916:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18924:3:12",
														"nodeType": "YulTypedName",
														"src": "18924:3:12",
														"type": ""
													}
												],
												"src": "18820:386:12"
											},
											{
												"body": {
													"nativeSrc": "19346:137:12",
													"nodeType": "YulBlock",
													"src": "19346:137:12",
													"statements": [
														{
															"nativeSrc": "19357:100:12",
															"nodeType": "YulAssignment",
															"src": "19357:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19444:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19444:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19453:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19453:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19364:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "19364:79:12"
																},
																"nativeSrc": "19364:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19364:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19357:3:12"
																}
															]
														},
														{
															"nativeSrc": "19467:10:12",
															"nodeType": "YulAssignment",
															"src": "19467:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "19474:3:12",
																"nodeType": "YulIdentifier",
																"src": "19474:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19467:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19467:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19212:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19325:3:12",
														"nodeType": "YulTypedName",
														"src": "19325:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19331:6:12",
														"nodeType": "YulTypedName",
														"src": "19331:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19342:3:12",
														"nodeType": "YulTypedName",
														"src": "19342:3:12",
														"type": ""
													}
												],
												"src": "19212:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than the curr\")\n\n        mstore(add(memPtr, 32), \"ent highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can create auctions\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start price must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can upgrade\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"273": [
									{
										"length": 32,
										"start": 3099
									},
									{
										"length": 32,
										"start": 3184
									},
									{
										"length": 32,
										"start": 3761
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c8063ad3cb1cc11610058578063ad3cb1cc14610150578063b1cb48ef1461017a578063b9a2de3a146101a2578063f851a440146101ca578063fc528482146101f457610090565b80634f1ef2861461009457806352d1902d146100b0578063571a26a0146100da5780638129fc1c1461011e5780639979ef4514610134575b5f5ffd5b6100ae60048036038101906100a99190611428565b61021e565b005b3480156100bb575f5ffd5b506100c461023d565b6040516100d1919061149a565b60405180910390f35b3480156100e5575f5ffd5b5061010060048036038101906100fb91906114e6565b61026e565b60405161011599989796959493929190611549565b60405180910390f35b348015610129575f5ffd5b50610132610321565b005b61014e600480360381019061014991906114e6565b6104d8565b005b34801561015b575f5ffd5b506101646106c4565b6040516101719190611634565b60405180910390f35b348015610185575f5ffd5b506101a0600480360381019061019b9190611654565b6106fd565b005b3480156101ad575f5ffd5b506101c860048036038101906101c391906114e6565b610a53565b005b3480156101d5575f5ffd5b506101de610bee565b6040516101eb91906116b8565b60405180910390f35b3480156101ff575f5ffd5b50610208610c13565b60405161021591906116d1565b60405180910390f35b610226610c19565b61022f82610cff565b6102398282610d91565b5050565b5f610246610eaf565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b5f61032a610f36565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156103725750825b90505f60018367ffffffffffffffff161480156103a557505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103b3575080155b156103ea576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610437576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156104d1575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104c8919061173f565b60405180910390a15b5050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff1615801561051b575042816001015482600301546105199190611785565b115b61055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190611802565b60405180910390fd5b806005015434118015610571575080600201543410155b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a790611890565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610674578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826005015490811502906040515f60405180830381858888f19350505050158015610672573d5f5f3e3d5ffd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906118f8565b60405180910390fd5b61ea6084116107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790611960565b60405180910390fd5b5f8311610812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610809906119ee565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161084d929190611a0c565b5f604051808303815f87803b158015610864575f5ffd5b505af1158015610876573d5f5f3e3d5ffd5b505050506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e0820151816006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060015f815480929190610a4890611a33565b919050555050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff16158015610a9657504281600101548260030154610a949190611785565b105b610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc90611ac4565b60405180910390fd5b806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e308360040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600701546040518463ffffffff1660e01b8152600401610b5d93929190611ae2565b5f604051808303815f87803b158015610b74575f5ffd5b505af1158015610b86573d5f5f3e3d5ffd5b505050503073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610bcd573d5f5f3e3d5ffd5b506001816004015f6101000a81548160ff0219169083151502179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610cc657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cad610f5d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610cfd576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590611b61565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610df957506040513d601f19601f82011682018060405250810190610df69190611ba9565b60015b610e3a57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610e3191906116b8565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610ea057806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610e97919061149a565b60405180910390fd5b610eaa8383610fb0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610f34576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f610f897f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611022565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fb98261102b565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156110155761100f82826110f4565b5061101e565b61101d611174565b5b5050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361108657806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161107d91906116b8565b60405180910390fd5b806110b27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611022565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff168460405161111d9190611c18565b5f60405180830381855af49150503d805f8114611155576040519150601f19603f3d011682016040523d82523d5f602084013e61115a565b606091505b509150915061116a8583836111b0565b9250505092915050565b5f3411156111ae576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826111c5576111c08261123d565b611235565b5f82511480156111eb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561122d57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161122491906116b8565b60405180910390fd5b819050611236565b5b9392505050565b5f8151111561124f5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112bb82611292565b9050919050565b6112cb816112b1565b81146112d5575f5ffd5b50565b5f813590506112e6816112c2565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61133a826112f4565b810181811067ffffffffffffffff8211171561135957611358611304565b5b80604052505050565b5f61136b611281565b90506113778282611331565b919050565b5f67ffffffffffffffff82111561139657611395611304565b5b61139f826112f4565b9050602081019050919050565b828183375f83830152505050565b5f6113cc6113c78461137c565b611362565b9050828152602081018484840111156113e8576113e76112f0565b5b6113f38482856113ac565b509392505050565b5f82601f83011261140f5761140e6112ec565b5b813561141f8482602086016113ba565b91505092915050565b5f5f6040838503121561143e5761143d61128a565b5b5f61144b858286016112d8565b925050602083013567ffffffffffffffff81111561146c5761146b61128e565b5b611478858286016113fb565b9150509250929050565b5f819050919050565b61149481611482565b82525050565b5f6020820190506114ad5f83018461148b565b92915050565b5f819050919050565b6114c5816114b3565b81146114cf575f5ffd5b50565b5f813590506114e0816114bc565b92915050565b5f602082840312156114fb576114fa61128a565b5b5f611508848285016114d2565b91505092915050565b61151a816112b1565b82525050565b611529816114b3565b82525050565b5f8115159050919050565b6115438161152f565b82525050565b5f6101208201905061155d5f83018c611511565b61156a602083018b611520565b611577604083018a611520565b6115846060830189611520565b611591608083018861153a565b61159e60a0830187611511565b6115ab60c0830186611520565b6115b860e0830185611511565b6115c6610100830184611520565b9a9950505050505050505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611606826115d4565b61161081856115de565b93506116208185602086016115ee565b611629816112f4565b840191505092915050565b5f6020820190508181035f83015261164c81846115fc565b905092915050565b5f5f5f5f6080858703121561166c5761166b61128a565b5b5f611679878288016114d2565b945050602061168a878288016114d2565b935050604061169b878288016112d8565b92505060606116ac878288016114d2565b91505092959194509250565b5f6020820190506116cb5f830184611511565b92915050565b5f6020820190506116e45f830184611520565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61172961172461171f846116ea565b611706565b6116f3565b9050919050565b6117398161170f565b82525050565b5f6020820190506117525f830184611730565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61178f826114b3565b915061179a836114b3565b92508282019050808211156117b2576117b1611758565b5b92915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f6117ec6011836115de565b91506117f7826117b8565b602082019050919050565b5f6020820190508181035f830152611819816117e0565b9050919050565b7f426964206d75737420626520686967686572207468616e2074686520637572725f8201527f656e742068696768657374206269640000000000000000000000000000000000602082015250565b5f61187a602f836115de565b915061188582611820565b604082019050919050565b5f6020820190508181035f8301526118a78161186e565b9050919050565b7f4f6e6c792061646d696e2063616e206372656174652061756374696f6e7300005f82015250565b5f6118e2601e836115de565b91506118ed826118ae565b602082019050919050565b5f6020820190508181035f83015261190f816118d6565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2030005f82015250565b5f61194a601f836115de565b915061195582611916565b602082019050919050565b5f6020820190508181035f8301526119778161193e565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119d86022836115de565b91506119e38261197e565b604082019050919050565b5f6020820190508181035f830152611a05816119cc565b9050919050565b5f604082019050611a1f5f830185611511565b611a2c6020830184611520565b9392505050565b5f611a3d826114b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6f57611a6e611758565b5b600182019050919050565b7f41756374696f6e20686173206e6f7420656e64656400000000000000000000005f82015250565b5f611aae6015836115de565b9150611ab982611a7a565b602082019050919050565b5f6020820190508181035f830152611adb81611aa2565b9050919050565b5f606082019050611af55f830186611511565b611b026020830185611511565b611b0f6040830184611520565b949350505050565b7f4f6e6c792061646d696e2063616e2075706772616465000000000000000000005f82015250565b5f611b4b6016836115de565b9150611b5682611b17565b602082019050919050565b5f6020820190508181035f830152611b7881611b3f565b9050919050565b611b8881611482565b8114611b92575f5ffd5b50565b5f81519050611ba381611b7f565b92915050565b5f60208284031215611bbe57611bbd61128a565b5b5f611bcb84828501611b95565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bf282611bd4565b611bfc8185611bde565b9350611c0c8185602086016115ee565b80840191505092915050565b5f611c238284611be8565b91508190509291505056fea2646970667358221220f025e92b2725f2578b1f1e646ab9c0f4b322ca91560df6bed98274701a52414164736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xB9A2DE3A EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1F4 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x321 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x22F DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x239 DUP3 DUP3 PUSH2 0xD91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246 PUSH2 0xEAF JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH0 PUSH2 0x32A PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x372 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3A5 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x437 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST GT JUMPDEST PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x551 SWAP1 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x571 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x674 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP3 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA48 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST LT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP4 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBCD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCC6 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCAD PUSH2 0xF5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDF9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEA0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP4 DUP4 PUSH2 0xFB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF89 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1022 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFB9 DUP3 PUSH2 0x102B JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x100F DUP3 DUP3 PUSH2 0x10F4 JUMP JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x101D PUSH2 0x1174 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1086 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x10B2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1022 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x111D SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x115A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x116A DUP6 DUP4 DUP4 PUSH2 0x11B0 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x11C5 JUMPI PUSH2 0x11C0 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x11EB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x122D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1236 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x124F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CB DUP2 PUSH2 0x12B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E6 DUP2 PUSH2 0x12C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x133A DUP3 PUSH2 0x12F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1359 JUMPI PUSH2 0x1358 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x136B PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP PUSH2 0x1377 DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST PUSH2 0x139F DUP3 PUSH2 0x12F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CC PUSH2 0x13C7 DUP5 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x1362 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0x12F0 JUMP JUMPDEST JUMPDEST PUSH2 0x13F3 DUP5 DUP3 DUP6 PUSH2 0x13AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140F JUMPI PUSH2 0x140E PUSH2 0x12EC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x141F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143E JUMPI PUSH2 0x143D PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144B DUP6 DUP3 DUP7 ADD PUSH2 0x12D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x128E JUMP JUMPDEST JUMPDEST PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1494 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AD PUSH0 DUP4 ADD DUP5 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C5 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E0 DUP2 PUSH2 0x14BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1508 DUP5 DUP3 DUP6 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x12B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP13 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x156A PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1577 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1584 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x1591 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x159E PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x15AB PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1606 DUP3 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x1610 DUP2 DUP6 PUSH2 0x15DE JUMP JUMPDEST SWAP4 POP PUSH2 0x1620 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x12F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x164C DUP2 DUP5 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH2 0x166B PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x169B DUP8 DUP3 DUP9 ADD PUSH2 0x12D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x16AC DUP8 DUP3 DUP9 ADD PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CB PUSH0 DUP4 ADD DUP5 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1729 PUSH2 0x1724 PUSH2 0x171F DUP5 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x16F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1739 DUP2 PUSH2 0x170F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH0 DUP4 ADD DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x178F DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x179A DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x1758 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17EC PUSH1 0x11 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x17F7 DUP3 PUSH2 0x17B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1819 DUP2 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E207468652063757272 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E742068696768657374206269640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187A PUSH1 0x2F DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A7 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206372656174652061756374696F6E730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E2 PUSH1 0x1E DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194A PUSH1 0x1F DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1955 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1977 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19D8 PUSH1 0x22 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x19E3 DUP3 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A05 DUP2 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A1F PUSH0 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1A2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3D DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A6F JUMPI PUSH2 0x1A6E PUSH2 0x1758 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAE PUSH1 0x15 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB9 DUP3 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADB DUP2 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207570677261646500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B PUSH1 0x16 DUP4 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B56 DUP3 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B78 DUP2 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B88 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA3 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCB DUP5 DUP3 DUP6 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 DUP3 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x1BFC DUP2 DUP6 PUSH2 0x1BDE JUMP JUMPDEST SWAP4 POP PUSH2 0x1C0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C23 DUP3 DUP5 PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x25 0xE9 0x2B 0x27 0x25 CALLCODE JUMPI DUP12 0x1F 0x1E PUSH5 0x6AB9C0F4B3 0x22 0xCA SWAP2 JUMP 0xD 0xF6 0xBE 0xD9 DUP3 PUSH21 0x701A52414164736F6C634300081C00330000000000 ",
							"sourceMap": "289:3361:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:43:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1032:76;;;;;;;;;;;;;:::i;:::-;;2145:721;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1134:979:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2893:555;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1005:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:1;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:4::1;3803:32:1;;3796:39;;3708:134:::0;:::o;874:43:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1032:76::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1091:10:11::1;1083:5;;:18;;;;;;;;;;;;;;;;;;5070:14:0::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1032:76:11:o;2145:721::-;2210:23;2236:8;:20;2245:10;2236:20;;;;;;;;;;;2210:46;;2317:7;:13;;;;;;;;;;;;2316:14;:72;;;;;2373:15;2354:7;:16;;;2334:7;:17;;;:36;;;;:::i;:::-;:54;2316:72;2308:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2494:7;:18;;;2482:9;:30;:65;;;;;2529:7;:18;;;2516:9;:31;;2482:65;2474:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;2688:1;2655:35;;:7;:21;;;;;;;;;;;;:35;;;2651:125;;2714:7;:21;;;;;;;;;;;;2706:39;;:59;2746:7;:18;;;2706:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:125;2809:10;2785:7;:21;;;:34;;;;;;;;;;;;;;;;;;2850:9;2829:7;:18;;:30;;;;2200:666;2145:721;:::o;1819:58:1:-;;;;;;;;;;;;;;;;;;;:::o;1134:979:11:-;1320:5;;;;;;;;;;;1306:19;;:10;:19;;;1298:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1414:9;1402;:21;1394:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1491:1;1477:11;:15;1469:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1580:11;1572:28;;;1609:4;1616:8;1572:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:322;;;;;;;;1779:10;1749:322;;;;;;1813:9;1749:322;;;;1848:11;1749:322;;;;1976:15;1749:322;;;;1880:5;1749:322;;;;;;1922:1;1749:322;;;;;;1950:1;1749:322;;;;2018:11;1749:322;;;;;;2052:8;1749:322;;;1723:8;:23;1732:13;;1723:23;;;;;;;;;;;:348;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:13;;:15;;;;;;;;;:::i;:::-;;;;;;1134:979;;;;:::o;2893:555::-;2952:23;2978:8;:20;2987:10;2978:20;;;;;;;;;;;2952:46;;3059:7;:13;;;;;;;;;;;;3058:14;:72;;;;;3115:15;3096:7;:16;;;3076:7;:17;;;:36;;;;:::i;:::-;:54;3058:72;3050:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3213:7;:19;;;;;;;;;;;;3205:45;;;3259:4;3266:7;:21;;;;;;;;;;;;3289:7;:15;;;3205:100;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3373:4;3357:31;;:54;3389:21;3357:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3437:4;3421:7;:13;;;:20;;;;;;;;;;;;;;;;;;2942:506;2893:555;:::o;1005:20::-;;;;;;;;;;;;;:::o;948:28::-;;;;:::o;4603:312:1:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;3455:193:11:-;3609:5;;;;;;;;;;;3595:19;;:10;:19;;;3587:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3455:193;:::o;6057:538:1:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:4;6258:32:1;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;8737:170:0:-;8795:30;8870:21;8860:31;;8737:170;:::o;1441:138:4:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;1899:163:9:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:4:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:7:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:4:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;4437:582:7:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:307::-;1864:4;1954:18;1946:6;1943:30;1940:56;;;1976:18;;:::i;:::-;1940:56;2014:29;2036:6;2014:29;:::i;:::-;2006:37;;2098:4;2092;2088:15;2080:23;;1803:307;;;:::o;2116:148::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2116:148;;;:::o;2270:423::-;2347:5;2372:65;2388:48;2429:6;2388:48;:::i;:::-;2372:65;:::i;:::-;2363:74;;2460:6;2453:5;2446:21;2498:4;2491:5;2487:16;2536:3;2527:6;2522:3;2518:16;2515:25;2512:112;;;2543:79;;:::i;:::-;2512:112;2633:54;2680:6;2675:3;2670;2633:54;:::i;:::-;2353:340;2270:423;;;;;:::o;2712:338::-;2767:5;2816:3;2809:4;2801:6;2797:17;2793:27;2783:122;;2824:79;;:::i;:::-;2783:122;2941:6;2928:20;2966:78;3040:3;3032:6;3025:4;3017:6;3013:17;2966:78;:::i;:::-;2957:87;;2773:277;2712:338;;;;:::o;3056:652::-;3133:6;3141;3190:2;3178:9;3169:7;3165:23;3161:32;3158:119;;;3196:79;;:::i;:::-;3158:119;3316:1;3341:53;3386:7;3377:6;3366:9;3362:22;3341:53;:::i;:::-;3331:63;;3287:117;3471:2;3460:9;3456:18;3443:32;3502:18;3494:6;3491:30;3488:117;;;3524:79;;:::i;:::-;3488:117;3629:62;3683:7;3674:6;3663:9;3659:22;3629:62;:::i;:::-;3619:72;;3414:287;3056:652;;;;;:::o;3714:77::-;3751:7;3780:5;3769:16;;3714:77;;;:::o;3797:118::-;3884:24;3902:5;3884:24;:::i;:::-;3879:3;3872:37;3797:118;;:::o;3921:222::-;4014:4;4052:2;4041:9;4037:18;4029:26;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;3921:222;;;;:::o;4149:77::-;4186:7;4215:5;4204:16;;4149:77;;;:::o;4232:122::-;4305:24;4323:5;4305:24;:::i;:::-;4298:5;4295:35;4285:63;;4344:1;4341;4334:12;4285:63;4232:122;:::o;4360:139::-;4406:5;4444:6;4431:20;4422:29;;4460:33;4487:5;4460:33;:::i;:::-;4360:139;;;;:::o;4505:329::-;4564:6;4613:2;4601:9;4592:7;4588:23;4584:32;4581:119;;;4619:79;;:::i;:::-;4581:119;4739:1;4764:53;4809:7;4800:6;4789:9;4785:22;4764:53;:::i;:::-;4754:63;;4710:117;4505:329;;;;:::o;4840:118::-;4927:24;4945:5;4927:24;:::i;:::-;4922:3;4915:37;4840:118;;:::o;4964:::-;5051:24;5069:5;5051:24;:::i;:::-;5046:3;5039:37;4964:118;;:::o;5088:90::-;5122:7;5165:5;5158:13;5151:21;5140:32;;5088:90;;;:::o;5184:109::-;5265:21;5280:5;5265:21;:::i;:::-;5260:3;5253:34;5184:109;;:::o;5299:1096::-;5610:4;5648:3;5637:9;5633:19;5625:27;;5662:71;5730:1;5719:9;5715:17;5706:6;5662:71;:::i;:::-;5743:72;5811:2;5800:9;5796:18;5787:6;5743:72;:::i;:::-;5825;5893:2;5882:9;5878:18;5869:6;5825:72;:::i;:::-;5907;5975:2;5964:9;5960:18;5951:6;5907:72;:::i;:::-;5989:67;6051:3;6040:9;6036:19;6027:6;5989:67;:::i;:::-;6066:73;6134:3;6123:9;6119:19;6110:6;6066:73;:::i;:::-;6149;6217:3;6206:9;6202:19;6193:6;6149:73;:::i;:::-;6232;6300:3;6289:9;6285:19;6276:6;6232:73;:::i;:::-;6315;6383:3;6372:9;6368:19;6359:6;6315:73;:::i;:::-;5299:1096;;;;;;;;;;;;:::o;6401:99::-;6453:6;6487:5;6481:12;6471:22;;6401:99;;;:::o;6506:169::-;6590:11;6624:6;6619:3;6612:19;6664:4;6659:3;6655:14;6640:29;;6506:169;;;;:::o;6681:139::-;6770:6;6765:3;6760;6754:23;6811:1;6802:6;6797:3;6793:16;6786:27;6681:139;;;:::o;6826:377::-;6914:3;6942:39;6975:5;6942:39;:::i;:::-;6997:71;7061:6;7056:3;6997:71;:::i;:::-;6990:78;;7077:65;7135:6;7130:3;7123:4;7116:5;7112:16;7077:65;:::i;:::-;7167:29;7189:6;7167:29;:::i;:::-;7162:3;7158:39;7151:46;;6918:285;6826:377;;;;:::o;7209:313::-;7322:4;7360:2;7349:9;7345:18;7337:26;;7409:9;7403:4;7399:20;7395:1;7384:9;7380:17;7373:47;7437:78;7510:4;7501:6;7437:78;:::i;:::-;7429:86;;7209:313;;;;:::o;7528:765::-;7614:6;7622;7630;7638;7687:3;7675:9;7666:7;7662:23;7658:33;7655:120;;;7694:79;;:::i;:::-;7655:120;7814:1;7839:53;7884:7;7875:6;7864:9;7860:22;7839:53;:::i;:::-;7829:63;;7785:117;7941:2;7967:53;8012:7;8003:6;7992:9;7988:22;7967:53;:::i;:::-;7957:63;;7912:118;8069:2;8095:53;8140:7;8131:6;8120:9;8116:22;8095:53;:::i;:::-;8085:63;;8040:118;8197:2;8223:53;8268:7;8259:6;8248:9;8244:22;8223:53;:::i;:::-;8213:63;;8168:118;7528:765;;;;;;;:::o;8299:222::-;8392:4;8430:2;8419:9;8415:18;8407:26;;8443:71;8511:1;8500:9;8496:17;8487:6;8443:71;:::i;:::-;8299:222;;;;:::o;8527:::-;8620:4;8658:2;8647:9;8643:18;8635:26;;8671:71;8739:1;8728:9;8724:17;8715:6;8671:71;:::i;:::-;8527:222;;;;:::o;8755:85::-;8800:7;8829:5;8818:16;;8755:85;;;:::o;8846:101::-;8882:7;8922:18;8915:5;8911:30;8900:41;;8846:101;;;:::o;8953:60::-;8981:3;9002:5;8995:12;;8953:60;;;:::o;9019:156::-;9076:9;9109:60;9126:42;9135:32;9161:5;9135:32;:::i;:::-;9126:42;:::i;:::-;9109:60;:::i;:::-;9096:73;;9019:156;;;:::o;9181:145::-;9275:44;9313:5;9275:44;:::i;:::-;9270:3;9263:57;9181:145;;:::o;9332:236::-;9432:4;9470:2;9459:9;9455:18;9447:26;;9483:78;9558:1;9547:9;9543:17;9534:6;9483:78;:::i;:::-;9332:236;;;;:::o;9574:180::-;9622:77;9619:1;9612:88;9719:4;9716:1;9709:15;9743:4;9740:1;9733:15;9760:191;9800:3;9819:20;9837:1;9819:20;:::i;:::-;9814:25;;9853:20;9871:1;9853:20;:::i;:::-;9848:25;;9896:1;9893;9889:9;9882:16;;9917:3;9914:1;9911:10;9908:36;;;9924:18;;:::i;:::-;9908:36;9760:191;;;;:::o;9957:167::-;10097:19;10093:1;10085:6;10081:14;10074:43;9957:167;:::o;10130:366::-;10272:3;10293:67;10357:2;10352:3;10293:67;:::i;:::-;10286:74;;10369:93;10458:3;10369:93;:::i;:::-;10487:2;10482:3;10478:12;10471:19;;10130:366;;;:::o;10502:419::-;10668:4;10706:2;10695:9;10691:18;10683:26;;10755:9;10749:4;10745:20;10741:1;10730:9;10726:17;10719:47;10783:131;10909:4;10783:131;:::i;:::-;10775:139;;10502:419;;;:::o;10927:234::-;11067:34;11063:1;11055:6;11051:14;11044:58;11136:17;11131:2;11123:6;11119:15;11112:42;10927:234;:::o;11167:366::-;11309:3;11330:67;11394:2;11389:3;11330:67;:::i;:::-;11323:74;;11406:93;11495:3;11406:93;:::i;:::-;11524:2;11519:3;11515:12;11508:19;;11167:366;;;:::o;11539:419::-;11705:4;11743:2;11732:9;11728:18;11720:26;;11792:9;11786:4;11782:20;11778:1;11767:9;11763:17;11756:47;11820:131;11946:4;11820:131;:::i;:::-;11812:139;;11539:419;;;:::o;11964:180::-;12104:32;12100:1;12092:6;12088:14;12081:56;11964:180;:::o;12150:366::-;12292:3;12313:67;12377:2;12372:3;12313:67;:::i;:::-;12306:74;;12389:93;12478:3;12389:93;:::i;:::-;12507:2;12502:3;12498:12;12491:19;;12150:366;;;:::o;12522:419::-;12688:4;12726:2;12715:9;12711:18;12703:26;;12775:9;12769:4;12765:20;12761:1;12750:9;12746:17;12739:47;12803:131;12929:4;12803:131;:::i;:::-;12795:139;;12522:419;;;:::o;12947:181::-;13087:33;13083:1;13075:6;13071:14;13064:57;12947:181;:::o;13134:366::-;13276:3;13297:67;13361:2;13356:3;13297:67;:::i;:::-;13290:74;;13373:93;13462:3;13373:93;:::i;:::-;13491:2;13486:3;13482:12;13475:19;;13134:366;;;:::o;13506:419::-;13672:4;13710:2;13699:9;13695:18;13687:26;;13759:9;13753:4;13749:20;13745:1;13734:9;13730:17;13723:47;13787:131;13913:4;13787:131;:::i;:::-;13779:139;;13506:419;;;:::o;13931:221::-;14071:34;14067:1;14059:6;14055:14;14048:58;14140:4;14135:2;14127:6;14123:15;14116:29;13931:221;:::o;14158:366::-;14300:3;14321:67;14385:2;14380:3;14321:67;:::i;:::-;14314:74;;14397:93;14486:3;14397:93;:::i;:::-;14515:2;14510:3;14506:12;14499:19;;14158:366;;;:::o;14530:419::-;14696:4;14734:2;14723:9;14719:18;14711:26;;14783:9;14777:4;14773:20;14769:1;14758:9;14754:17;14747:47;14811:131;14937:4;14811:131;:::i;:::-;14803:139;;14530:419;;;:::o;14955:332::-;15076:4;15114:2;15103:9;15099:18;15091:26;;15127:71;15195:1;15184:9;15180:17;15171:6;15127:71;:::i;:::-;15208:72;15276:2;15265:9;15261:18;15252:6;15208:72;:::i;:::-;14955:332;;;;;:::o;15293:233::-;15332:3;15355:24;15373:5;15355:24;:::i;:::-;15346:33;;15401:66;15394:5;15391:77;15388:103;;15471:18;;:::i;:::-;15388:103;15518:1;15511:5;15507:13;15500:20;;15293:233;;;:::o;15532:171::-;15672:23;15668:1;15660:6;15656:14;15649:47;15532:171;:::o;15709:366::-;15851:3;15872:67;15936:2;15931:3;15872:67;:::i;:::-;15865:74;;15948:93;16037:3;15948:93;:::i;:::-;16066:2;16061:3;16057:12;16050:19;;15709:366;;;:::o;16081:419::-;16247:4;16285:2;16274:9;16270:18;16262:26;;16334:9;16328:4;16324:20;16320:1;16309:9;16305:17;16298:47;16362:131;16488:4;16362:131;:::i;:::-;16354:139;;16081:419;;;:::o;16506:442::-;16655:4;16693:2;16682:9;16678:18;16670:26;;16706:71;16774:1;16763:9;16759:17;16750:6;16706:71;:::i;:::-;16787:72;16855:2;16844:9;16840:18;16831:6;16787:72;:::i;:::-;16869;16937:2;16926:9;16922:18;16913:6;16869:72;:::i;:::-;16506:442;;;;;;:::o;16954:172::-;17094:24;17090:1;17082:6;17078:14;17071:48;16954:172;:::o;17132:366::-;17274:3;17295:67;17359:2;17354:3;17295:67;:::i;:::-;17288:74;;17371:93;17460:3;17371:93;:::i;:::-;17489:2;17484:3;17480:12;17473:19;;17132:366;;;:::o;17504:419::-;17670:4;17708:2;17697:9;17693:18;17685:26;;17757:9;17751:4;17747:20;17743:1;17732:9;17728:17;17721:47;17785:131;17911:4;17785:131;:::i;:::-;17777:139;;17504:419;;;:::o;17929:122::-;18002:24;18020:5;18002:24;:::i;:::-;17995:5;17992:35;17982:63;;18041:1;18038;18031:12;17982:63;17929:122;:::o;18057:143::-;18114:5;18145:6;18139:13;18130:22;;18161:33;18188:5;18161:33;:::i;:::-;18057:143;;;;:::o;18206:351::-;18276:6;18325:2;18313:9;18304:7;18300:23;18296:32;18293:119;;;18331:79;;:::i;:::-;18293:119;18451:1;18476:64;18532:7;18523:6;18512:9;18508:22;18476:64;:::i;:::-;18466:74;;18422:128;18206:351;;;;:::o;18563:98::-;18614:6;18648:5;18642:12;18632:22;;18563:98;;;:::o;18667:147::-;18768:11;18805:3;18790:18;;18667:147;;;;:::o;18820:386::-;18924:3;18952:38;18984:5;18952:38;:::i;:::-;19006:88;19087:6;19082:3;19006:88;:::i;:::-;18999:95;;19103:65;19161:6;19156:3;19149:4;19142:5;19138:16;19103:65;:::i;:::-;19193:6;19188:3;19184:16;19177:23;;18928:278;18820:386;;;;:::o;19212:271::-;19342:3;19364:93;19453:3;19444:6;19364:93;:::i;:::-;19357:100;;19474:3;19467:10;;19212:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1453600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"admin()": "2574",
								"auctions(uint256)": "infinite",
								"createAuction(uint256,uint256,address,uint256)": "infinite",
								"endAuction(uint256)": "infinite",
								"initialize()": "105911",
								"nextAuctionId()": "2513",
								"placeBid(uint256)": "infinite",
								"proxiableUUID()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "273"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3650,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f025e92b2725f2578b1f1e646ab9c0f4b322ca91560df6bed98274701a52414164736f6c634300081c0033",
									".code": [
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "B1CB48EF"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "B9A2DE3A"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "F851A440"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "FC528482"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "4F1EF286"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "52D1902D"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "571A26A0"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "8129FC1C"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "9979EF45"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3650,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 874,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 874,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 874,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1032,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2145,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2145,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1134,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2893,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2893,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1005,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 948,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 948,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 874,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1032,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1101,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2255,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2256,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2324,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2330,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2370,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2370,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2334,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2334,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2388,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2316,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2308,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2308,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2512,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2547,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2547,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2482,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2474,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2474,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2690,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2690,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2690,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2690,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2690,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2651,
											"end": 2776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2745,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2745,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2776,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2651,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2806,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2785,
											"end": 2806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2806,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2785,
											"end": 2819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2859,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2859,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1320,
											"end": 1325,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1316,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1298,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1298,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "EA60"
										},
										{
											"begin": 1402,
											"end": 1411,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1423,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1394,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1394,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1469,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1591,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1600,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1572,
											"end": 1600,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1600,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 1609,
											"end": 1613,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1616,
											"end": 1624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1572,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1848,
											"end": 1859,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2029,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2095,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2082,
											"end": 2095,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2082,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 2113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 2975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2997,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 2998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 2998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3066,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3072,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3130,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3096,
											"end": 3103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3076,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3076,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3130,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3058,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3050,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3050,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3220,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3250,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 3259,
											"end": 3263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3289,
											"end": 3304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3304,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3205,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3373,
											"end": 3377,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3388,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 3389,
											"end": 3410,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3441,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3434,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2942,
											"end": 3448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 3448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3648,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3455,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3605,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3587,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3587,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 1,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1183,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1320,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1464,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1577,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1602,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1605,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1729,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1758,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1973,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1976,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2014,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 2388,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2372,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2540,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 2543,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2633,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2793,
											"end": 2820,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2824,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 2966,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 3050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3169,
											"end": 3176,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3165,
											"end": 3188,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3193,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3196,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3375,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3341,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3473,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3521,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3524,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3629,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3884,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 4065,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4323,
											"end": 4328,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4305,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4330,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4431,
											"end": 4451,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4487,
											"end": 4492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4460,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 4619,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4809,
											"end": 4816,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4798,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4764,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4754,
											"end": 4817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4754,
											"end": 4817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4710,
											"end": 4827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4945,
											"end": 4950,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4927,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4915,
											"end": 4952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 5069,
											"end": 5074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5051,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5076,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5171,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5280,
											"end": 5285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5265,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5260,
											"end": 5263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5651,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5637,
											"end": 5646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5633,
											"end": 5652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5662,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5733,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5662,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5743,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5815,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 5743,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5825,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5897,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5825,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5907,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5907,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5907,
											"end": 5979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5907,
											"end": 5979,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5907,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5989,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 6051,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5989,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5989,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5989,
											"end": 6056,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5989,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6123,
											"end": 6132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6066,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6139,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 6066,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 6217,
											"end": 6220,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6206,
											"end": 6215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6221,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 6149,
											"end": 6222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6222,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 6149,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 6300,
											"end": 6303,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6289,
											"end": 6298,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6232,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6305,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 6232,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 6383,
											"end": 6386,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6365,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 6315,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6388,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 6315,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 6395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6500,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 6401,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6590,
											"end": 6601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6612,
											"end": 6631,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6820,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 6681,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6765,
											"end": 6768,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 6777,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6786,
											"end": 6813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6914,
											"end": 6917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6975,
											"end": 6980,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6942,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 6942,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6942,
											"end": 6981,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6942,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6997,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6997,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6997,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6997,
											"end": 7068,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 6997,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 7068,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 7068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7130,
											"end": 7133,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7123,
											"end": 7127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7116,
											"end": 7121,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7077,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7142,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7077,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7167,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7167,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 7167,
											"end": 7196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7167,
											"end": 7196,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7167,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7165,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7158,
											"end": 7197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7151,
											"end": 7197,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7151,
											"end": 7197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7337,
											"end": 7363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7337,
											"end": 7363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7419,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7373,
											"end": 7420,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7510,
											"end": 7514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7437,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7515,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7437,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7662,
											"end": 7685,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7691,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7775,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7655,
											"end": 7775,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7694,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 7694,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7773,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7694,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7775,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7655,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7884,
											"end": 7891,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7873,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7839,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7892,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7839,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7892,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7967,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 8012,
											"end": 8019,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7988,
											"end": 8010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7967,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8020,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7967,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 8020,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 8020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 8030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8095,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8140,
											"end": 8147,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8131,
											"end": 8137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8116,
											"end": 8138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 8095,
											"end": 8148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8148,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8095,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8040,
											"end": 8158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8199,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 8268,
											"end": 8275,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8223,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8168,
											"end": 8286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8432,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 8511,
											"end": 8512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 8443,
											"end": 8514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8620,
											"end": 8624,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8671,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8739,
											"end": 8740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8728,
											"end": 8737,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8724,
											"end": 8741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8671,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8671,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8671,
											"end": 8742,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8671,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8947,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8846,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8882,
											"end": 8889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8915,
											"end": 8920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8911,
											"end": 8941,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9013,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 8953,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 8984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9007,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8995,
											"end": 9007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8995,
											"end": 9007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9013,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9175,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 9019,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9126,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 9135,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 9161,
											"end": 9166,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 9135,
											"end": 9167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9167,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 9135,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9126,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 9126,
											"end": 9168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9126,
											"end": 9168,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 9126,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 9109,
											"end": 9169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9169,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9109,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9175,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9326,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 9181,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9275,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 9313,
											"end": 9318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9275,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 9275,
											"end": 9319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9275,
											"end": 9319,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 9275,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9270,
											"end": 9273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9432,
											"end": 9436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9459,
											"end": 9468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9455,
											"end": 9473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 9558,
											"end": 9559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9556,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9543,
											"end": 9560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9534,
											"end": 9540,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 9483,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9561,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 9483,
											"end": 9561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9574,
											"end": 9754,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 9574,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9622,
											"end": 9699,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9700,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9719,
											"end": 9723,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9709,
											"end": 9724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9748,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9800,
											"end": 9803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 9819,
											"end": 9839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9871,
											"end": 9872,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 9853,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9853,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9848,
											"end": 9873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9848,
											"end": 9873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9920,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9911,
											"end": 9921,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 9924,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10124,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 9957,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10097,
											"end": 10116,
											"name": "PUSH",
											"source": 12,
											"value": "41756374696F6E2068617320656E646564000000000000000000000000000000"
										},
										{
											"begin": 10093,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10074,
											"end": 10117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10272,
											"end": 10275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10357,
											"end": 10359,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10293,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10286,
											"end": 10360,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10286,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 10369,
											"end": 10462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10482,
											"end": 10485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10478,
											"end": 10490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10668,
											"end": 10672,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10726,
											"end": 10743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10719,
											"end": 10766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 10909,
											"end": 10913,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 10783,
											"end": 10914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10502,
											"end": 10921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 11161,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10927,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11067,
											"end": 11101,
											"name": "PUSH",
											"source": 12,
											"value": "426964206D75737420626520686967686572207468616E207468652063757272"
										},
										{
											"begin": 11063,
											"end": 11064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11051,
											"end": 11065,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11044,
											"end": 11102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11136,
											"end": 11153,
											"name": "PUSH",
											"source": 12,
											"value": "656E742068696768657374206269640000000000000000000000000000000000"
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11123,
											"end": 11129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11119,
											"end": 11134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11154,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 11161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 11161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 11394,
											"end": 11396,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 11389,
											"end": 11392,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 11330,
											"end": 11397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 11406,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11515,
											"end": 11527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11705,
											"end": 11709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11745,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11720,
											"end": 11746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11720,
											"end": 11746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11786,
											"end": 11790,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11782,
											"end": 11802,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11767,
											"end": 11776,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 11803,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 11946,
											"end": 11950,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 11820,
											"end": 11951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 11820,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11812,
											"end": 11951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11812,
											"end": 11951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11539,
											"end": 11958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11539,
											"end": 11958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12144,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 11964,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12104,
											"end": 12136,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C792061646D696E2063616E206372656174652061756374696F6E730000"
										},
										{
											"begin": 12100,
											"end": 12101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12092,
											"end": 12098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12088,
											"end": 12102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12081,
											"end": 12137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 12313,
											"end": 12380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12306,
											"end": 12380,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12306,
											"end": 12380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 12389,
											"end": 12482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12509,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12498,
											"end": 12510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12491,
											"end": 12510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12491,
											"end": 12510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12688,
											"end": 12692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12728,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12715,
											"end": 12724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12775,
											"end": 12784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12769,
											"end": 12773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12765,
											"end": 12785,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12761,
											"end": 12762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12759,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12746,
											"end": 12763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12786,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 12803,
											"end": 12934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12795,
											"end": 12934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12795,
											"end": 12934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12947,
											"end": 13128,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 12947,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13087,
											"end": 13120,
											"name": "PUSH",
											"source": 12,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E203000"
										},
										{
											"begin": 13083,
											"end": 13084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13121,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12947,
											"end": 13128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12947,
											"end": 13128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13500,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13134,
											"end": 13500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13297,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13361,
											"end": 13363,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13356,
											"end": 13359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13297,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 13297,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13297,
											"end": 13364,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13297,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13290,
											"end": 13364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13290,
											"end": 13364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 13373,
											"end": 13466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13466,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13373,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13493,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13482,
											"end": 13494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13925,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 13506,
											"end": 13925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 13676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13712,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13699,
											"end": 13708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13695,
											"end": 13713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13759,
											"end": 13768,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13753,
											"end": 13757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13749,
											"end": 13769,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13730,
											"end": 13747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13723,
											"end": 13770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13787,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 13913,
											"end": 13917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13787,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13787,
											"end": 13918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13787,
											"end": 13918,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 13787,
											"end": 13918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 13918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 13918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13925,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 14152,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 13931,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14105,
											"name": "PUSH",
											"source": 12,
											"value": "5374617274207072696365206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 14067,
											"end": 14068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14059,
											"end": 14065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14055,
											"end": 14069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14048,
											"end": 14106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14144,
											"name": "PUSH",
											"source": 12,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14135,
											"end": 14137,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14127,
											"end": 14133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 14152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 14152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14524,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 14158,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14300,
											"end": 14303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14321,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 14385,
											"end": 14387,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 14380,
											"end": 14383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14321,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 14321,
											"end": 14388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14321,
											"end": 14388,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 14321,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14314,
											"end": 14388,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14314,
											"end": 14388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 14486,
											"end": 14489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 14397,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14490,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 14397,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14515,
											"end": 14517,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14506,
											"end": 14518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14530,
											"end": 14949,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 14530,
											"end": 14949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14696,
											"end": 14700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14723,
											"end": 14732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14719,
											"end": 14737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14711,
											"end": 14737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14711,
											"end": 14737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14777,
											"end": 14781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14758,
											"end": 14767,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14754,
											"end": 14771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14747,
											"end": 14794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14811,
											"end": 14942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 14937,
											"end": 14941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14811,
											"end": 14942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 14811,
											"end": 14942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14811,
											"end": 14942,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 14811,
											"end": 14942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14803,
											"end": 14942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14803,
											"end": 14942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14530,
											"end": 14949,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14530,
											"end": 14949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14530,
											"end": 14949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14530,
											"end": 14949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15076,
											"end": 15080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15114,
											"end": 15116,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15103,
											"end": 15112,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15091,
											"end": 15117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15091,
											"end": 15117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 15195,
											"end": 15196,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15184,
											"end": 15193,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15171,
											"end": 15177,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 15127,
											"end": 15198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15198,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 15127,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15208,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 15276,
											"end": 15278,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15274,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15261,
											"end": 15279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15258,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15208,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 15208,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15208,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 15208,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14955,
											"end": 15287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15526,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 15293,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15355,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 15373,
											"end": 15378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 15355,
											"end": 15379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15379,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 15355,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 15379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 15379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15401,
											"end": 15467,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15394,
											"end": 15399,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15391,
											"end": 15468,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 15388,
											"end": 15491,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 15471,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15491,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 15388,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15518,
											"end": 15519,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15511,
											"end": 15516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15703,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 15532,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15695,
											"name": "PUSH",
											"source": 12,
											"value": "41756374696F6E20686173206E6F7420656E6465640000000000000000000000"
										},
										{
											"begin": 15668,
											"end": 15669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15660,
											"end": 15666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15656,
											"end": 15670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15649,
											"end": 15696,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 16075,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 15709,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15851,
											"end": 15854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15872,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 15936,
											"end": 15938,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 15931,
											"end": 15934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15872,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 15872,
											"end": 15939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15872,
											"end": 15939,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 15872,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15865,
											"end": 15939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15865,
											"end": 15939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 16037,
											"end": 16040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 15948,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 16041,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 15948,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16066,
											"end": 16068,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16061,
											"end": 16064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16057,
											"end": 16069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16050,
											"end": 16069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16050,
											"end": 16069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 16075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 16075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 16075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 16075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16500,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 16081,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16247,
											"end": 16251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16285,
											"end": 16287,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16270,
											"end": 16288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16262,
											"end": 16288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16262,
											"end": 16288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16334,
											"end": 16343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16328,
											"end": 16332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16324,
											"end": 16344,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16320,
											"end": 16321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16309,
											"end": 16318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16305,
											"end": 16322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16298,
											"end": 16345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 16488,
											"end": 16492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 16362,
											"end": 16493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16493,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 16362,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16693,
											"end": 16695,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16678,
											"end": 16696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16670,
											"end": 16696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16670,
											"end": 16696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 16774,
											"end": 16775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16763,
											"end": 16772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16756,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 16706,
											"end": 16777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 16855,
											"end": 16857,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16844,
											"end": 16853,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16831,
											"end": 16837,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 16787,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 16937,
											"end": 16939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16926,
											"end": 16935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16922,
											"end": 16940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 16869,
											"end": 16941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17126,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 16954,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17094,
											"end": 17118,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C792061646D696E2063616E207570677261646500000000000000000000"
										},
										{
											"begin": 17090,
											"end": 17091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17082,
											"end": 17088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17078,
											"end": 17092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17071,
											"end": 17119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17498,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 17132,
											"end": 17498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17274,
											"end": 17277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17295,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 17359,
											"end": 17361,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 17354,
											"end": 17357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 17295,
											"end": 17362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17362,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 17295,
											"end": 17362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17288,
											"end": 17362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17288,
											"end": 17362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17371,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17371,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 17371,
											"end": 17464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17371,
											"end": 17464,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 17371,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17484,
											"end": 17487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17480,
											"end": 17492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17473,
											"end": 17492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17473,
											"end": 17492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17923,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 17504,
											"end": 17923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17670,
											"end": 17674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17708,
											"end": 17710,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17697,
											"end": 17706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 17711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17685,
											"end": 17711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17685,
											"end": 17711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17747,
											"end": 17767,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 17744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17732,
											"end": 17741,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17728,
											"end": 17745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17721,
											"end": 17768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17785,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 17911,
											"end": 17915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17785,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 17785,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17785,
											"end": 17916,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 17785,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 18020,
											"end": 18025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 18002,
											"end": 18026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17995,
											"end": 18000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17992,
											"end": 18027,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18041,
											"end": 18042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18038,
											"end": 18039,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18031,
											"end": 18043,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18130,
											"end": 18152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18130,
											"end": 18152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18161,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 18188,
											"end": 18193,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18161,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 18161,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18161,
											"end": 18194,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 18161,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18276,
											"end": 18282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18325,
											"end": 18327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18313,
											"end": 18322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18304,
											"end": 18311,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18323,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18296,
											"end": 18328,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 18293,
											"end": 18412,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18293,
											"end": 18412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 18293,
											"end": 18412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 18331,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 18331,
											"end": 18410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18410,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 18331,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18293,
											"end": 18412,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 18293,
											"end": 18412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18451,
											"end": 18452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18476,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 18532,
											"end": 18539,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18523,
											"end": 18529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18512,
											"end": 18521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18508,
											"end": 18530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18476,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 18476,
											"end": 18540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18476,
											"end": 18540,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 18476,
											"end": 18540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18661,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 18563,
											"end": 18661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18614,
											"end": 18620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18648,
											"end": 18653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18642,
											"end": 18654,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18768,
											"end": 18779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18805,
											"end": 18808,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18790,
											"end": 18808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18790,
											"end": 18808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18667,
											"end": 18814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18924,
											"end": 18927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18952,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 18984,
											"end": 18989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18952,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 18952,
											"end": 18990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18952,
											"end": 18990,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 18952,
											"end": 18990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19006,
											"end": 19094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 19087,
											"end": 19093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19085,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19006,
											"end": 19094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 19006,
											"end": 19094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19006,
											"end": 19094,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 19006,
											"end": 19094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18999,
											"end": 19094,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18999,
											"end": 19094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19103,
											"end": 19168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 19161,
											"end": 19167,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19156,
											"end": 19159,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19149,
											"end": 19153,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19142,
											"end": 19147,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19138,
											"end": 19154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19103,
											"end": 19168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 19103,
											"end": 19168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19103,
											"end": 19168,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 19103,
											"end": 19168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19193,
											"end": 19199,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19188,
											"end": 19191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19184,
											"end": 19200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19177,
											"end": 19200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19177,
											"end": 19200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18928,
											"end": 19206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18820,
											"end": 19206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19364,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 19453,
											"end": 19456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19444,
											"end": 19450,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19364,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 19364,
											"end": 19457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19364,
											"end": 19457,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 19364,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19357,
											"end": 19457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19357,
											"end": 19457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19474,
											"end": 19477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19467,
											"end": 19477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19467,
											"end": 19477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19212,
											"end": 19483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"admin()": "f851a440",
							"auctions(uint256)": "571a26a0",
							"createAuction(uint256,uint256,address,uint256)": "b1cb48ef",
							"endAuction(uint256)": "b9a2de3a",
							"initialize()": "8129fc1c",
							"nextAuctionId()": "fc528482",
							"placeBid(uint256)": "9979ef45",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionID\",\"type\":\"uint256\"}],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAuctionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionID\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftAuction.sol\":\"NftAuction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/NftAuction.sol\":{\"keccak256\":\"0xe6e3a12f3bf15bd3f55be184334e721e3aedae192463d8adac7d58cef1e286ea\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://6047d9914947cbdc343d633d535164ed19558112afec39f2118c82b036e38a11\",\"dweb:/ipfs/QmPSAe6LBhTL6UW5e1ZkLPjT1iT2zMp7ZyR28o38PBNvFx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1338,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "auctions",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Auction)1333_storage)"
							},
							{
								"astId": 1340,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "nextAuctionId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1342,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Auction)1333_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NftAuction.Auction)",
								"numberOfBytes": "32",
								"value": "t_struct(Auction)1333_storage"
							},
							"t_struct(Auction)1333_storage": {
								"encoding": "inplace",
								"label": "struct NftAuction.Auction",
								"members": [
									{
										"astId": 1316,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1318,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "duration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1320,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "startPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1322,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "startTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1324,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "ended",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1326,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "highestBidder",
										"offset": 1,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1328,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "highestBid",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1330,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "nftContract",
										"offset": 0,
										"slot": "6",
										"type": "t_address"
									},
									{
										"astId": 1332,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "tokenId",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/NftAuction.sol:106:32:\n    |\n106 |     function _authorizeUpgrade(address newImplementation) internal override view {\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3507,
					"file": "contracts/NftAuction.sol",
					"start": 3482
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							760
						],
						"IERC1822Proxiable": [
							466
						],
						"Initializable": [
							253
						],
						"UUPSUpgradeable": [
							435
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 467,
							"src": "141:88:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 256,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 466,
										"src": "149:17:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 761,
							"src": "230:84:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 258,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 760,
										"src": "238:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 254,
							"src": "315:50:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 260,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 253,
										"src": "323:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "1023:13:1"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:1"
								},
								{
									"baseName": {
										"id": 265,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "1038:17:1"
									},
									"id": 266,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:1"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 262,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:1",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								466,
								253
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:1",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 273,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1128:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 271,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 270,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 269,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:1",
												"typeDescriptions": {}
											}
										},
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:1",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 277,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1819:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 275,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:1",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 280,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:1"
									},
									"src": "1954:36:1"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:1",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 285,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2104:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:1"
									},
									"src": "2069:49:1"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2645:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 288,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2655:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:1"
											},
											{
												"id": 291,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:1",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 293,
									"name": "onlyProxy",
									"nameLocation": "2633:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:1"
									},
									"src": "2624:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "2916:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 296,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2926:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:1"
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:1",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 301,
									"name": "notDelegated",
									"nameLocation": "2901:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:1"
									},
									"src": "2892:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3030:7:1",
										"statements": []
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "3013:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:1"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:1"
									},
									"scope": 435,
									"src": "2970:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3113:7:1",
										"statements": []
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "3096:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:1"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:1"
									},
									"scope": 435,
									"src": "3043:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3786:56:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3803:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$760_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:1",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 481,
													"src": "3803:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "3796:39:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:1",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 316,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "3755:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:1"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3777:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:1"
									},
									"scope": 435,
									"src": "3708:134:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "4266:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4294:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 335,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "4276:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4344:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4363:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4322:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:1",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 332,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 293,
												"src": "4256:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:1"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4187:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4214:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:1"
									},
									"scope": 435,
									"src": "4161:214:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "4648:267:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 351,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 353,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4692:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 355,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "4753:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$760_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:1",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 512,
																"src": "4753:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 358,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4789:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "4658:251:1",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "4848:61:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 361,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "4869:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 363,
															"nodeType": "RevertStatement",
															"src": "4862:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:1",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:1"
									},
									"scope": 435,
									"src": "4603:312:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5084:161:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 373,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 371,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 375,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "5115:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "5094:145:1",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "5123:116:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 377,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "5199:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 379,
															"nodeType": "RevertStatement",
															"src": "5192:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:1",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:1"
									},
									"scope": 435,
									"src": "5032:213:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:1",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "5655:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:1"
									},
									"scope": 435,
									"src": "5628:71:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "6142:453:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 422,
															"nodeType": "Block",
															"src": "6232:212:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 405,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "6250:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 406,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "6258:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$760_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:1",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 481,
																			"src": "6258:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 414,
																	"nodeType": "IfStatement",
																	"src": "6246:120:1",
																	"trueBody": {
																		"id": 413,
																		"nodeType": "Block",
																		"src": "6292:74:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 410,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 403,
																							"src": "6346:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 409,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 285,
																						"src": "6317:28:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 412,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:1"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 418,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "6409:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 419,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "6428:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 415,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "6379:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$760_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:1",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 575,
																			"src": "6379:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 421,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:1"
																}
															]
														},
														"errorName": "",
														"id": 423,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 404,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 423,
																	"src": "6218:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:1"
														},
														"src": "6209:235:1"
													},
													{
														"block": {
															"id": 430,
															"nodeType": "Block",
															"src": "6451:138:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 427,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "6560:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 424,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "6518:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$760_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:1",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 486,
																			"src": "6518:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 429,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:1"
																}
															]
														},
														"errorName": "",
														"id": 431,
														"nodeType": "TryCatchClause",
														"src": "6445:144:1"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 398,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "6174:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 397,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6156:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$466_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$466",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:1",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 465,
														"src": "6156:50:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 432,
												"nodeType": "TryStatement",
												"src": "6152:437:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:1",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6088:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6115:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:1"
									},
									"scope": 435,
									"src": "6057:538:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 436,
							"src": "986:5611:1",
							"usedErrors": [
								16,
								19,
								280,
								285,
								486,
								499,
								897,
								1160
							],
							"usedEvents": [
								24,
								443
							]
						}
					],
					"src": "115:6483:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 438,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC1967",
							"nameLocation": "245:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 443,
									"name": "Upgraded",
									"nameLocation": "339:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "348:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:2"
									},
									"src": "333:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 450,
									"name": "AdminChanged",
									"nameLocation": "464:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "477:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "500:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:2"
									},
									"src": "458:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 455,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "609:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:2"
									},
									"src": "588:45:2"
								}
							],
							"scope": 457,
							"src": "235:400:2",
							"usedErrors": [],
							"usedEvents": [
								443,
								450,
								455
							]
						}
					],
					"src": "107:529:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:3",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:3",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "869:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:3"
									},
									"scope": 466,
									"src": "821:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "344:536:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1147
						],
						"ERC1967Utils": [
							760
						],
						"IBeacon": [
							770
						],
						"IERC1967": [
							456
						],
						"StorageSlot": [
							1293
						]
					},
					"id": 761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 761,
							"sourceUnit": 771,
							"src": "140:46:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 770,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 761,
							"sourceUnit": 457,
							"src": "187:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 456,
										"src": "195:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 761,
							"sourceUnit": 1148,
							"src": "243:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 473,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1147,
										"src": "251:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 761,
							"sourceUnit": 1294,
							"src": "292:56:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 475,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "300:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 477,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:4",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 760,
							"linearizedBaseContracts": [
								760
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 481,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 760,
									"src": "763:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 479,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:4",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 486,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "993:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:4"
									},
									"src": "958:59:4"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:4",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 491,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1114:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:4"
									},
									"src": "1088:41:4"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:4",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 496,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1228:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:4"
									},
									"src": "1201:43:4"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:4",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 499,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:4"
									},
									"src": "1337:26:4"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1502:77:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 507,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "1546:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 505,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "1519:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "1519:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1174,
													"src": "1519:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 510,
												"nodeType": "Return",
												"src": "1512:60:4"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1493:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:4"
									},
									"scope": 760,
									"src": "1441:138:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "1734:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "1748:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "1744:119:4",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "1784:79:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "1834:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 523,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1805:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 526,
															"nodeType": "RevertStatement",
															"src": "1798:54:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "1899:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 529,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "1872:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1204,
																"src": "1872:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "1872:53:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1928:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:4"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:4",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1699:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:4"
									},
									"scope": 760,
									"src": "1671:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2345:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2374:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 547,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "2355:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 554,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2425:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 551,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2407:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$456_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:4",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "2407:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "EmitStatement",
												"src": "2402:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2458:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "2559:43:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 569,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "2573:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:4"
														}
													]
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "2454:148:4",
												"trueBody": {
													"id": 568,
													"nodeType": "Block",
													"src": "2475:78:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 564,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "2518:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 565,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "2537:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 561,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "2489:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1147_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1064,
																	"src": "2489:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 567,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:4",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2290:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2317:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:4"
									},
									"scope": 760,
									"src": "2264:344:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 579,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 760,
									"src": "2829:105:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 577,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 578,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "3339:68:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 587,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "3383:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 585,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "3356:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "3356:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1174,
													"src": "3356:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 584,
												"id": 590,
												"nodeType": "Return",
												"src": "3349:51:4"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:4",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "3330:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:4"
									},
									"scope": 760,
									"src": "3287:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "3535:172:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3549:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "3545:91:4",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "3573:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 605,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 604,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3594:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 610,
															"nodeType": "RevertStatement",
															"src": "3587:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 616,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "3672:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 613,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "3645:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1204,
																"src": "3645:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "3645:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 619,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3692:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:4"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:4",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3509:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:4"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:4"
									},
									"scope": 760,
									"src": "3490:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3875:94:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 632,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "3912:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3924:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 629,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3890:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$456_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:4",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 450,
														"src": "3890:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "EmitStatement",
												"src": "3885:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3953:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 637,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "3943:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3848:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:4"
									},
									"scope": 760,
									"src": "3827:142:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 646,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 760,
									"src": "4246:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 644,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "4468:69:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 654,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "4512:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 652,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "4485:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "4485:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1174,
													"src": "4485:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 651,
												"id": 657,
												"nodeType": "Return",
												"src": "4478:52:4"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:4"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4459:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:4"
									},
									"scope": 760,
									"src": "4415:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "4667:390:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 665,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "4681:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "4677:95:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "4709:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 671,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "4751:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 670,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "4730:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 673,
															"nodeType": "RevertStatement",
															"src": "4723:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 679,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "4809:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 676,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "4782:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1293_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1204,
																"src": "4782:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1175_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "4782:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 682,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "4830:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:4"
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "4850:28:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 685,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 688,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "4889:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 687,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "4881:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$770_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$770",
																"typeString": "contract IBeacon"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:4",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "4881:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 693,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "4930:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "4926:125:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "4969:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 699,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "5019:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "4990:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "4983:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:4",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "4640:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:4"
									},
									"scope": 760,
									"src": "4620:437:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "5661:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5682:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 713,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "5671:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 720,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5731:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 717,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5707:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$456_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:4",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "5707:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "5702:39:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5756:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "5875:43:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 739,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "5889:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:4"
														}
													]
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "5752:166:4",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "5773:96:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 731,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 708,
																						"src": "5824:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 730,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 770,
																					"src": "5816:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$770_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$770",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 769,
																			"src": "5816:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 735,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "5853:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 727,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "5787:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1147_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1064,
																	"src": "5787:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 737,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:4",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5614:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5633:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:4"
									},
									"scope": 760,
									"src": "5582:342:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "6149:86:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 749,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "6159:70:4",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "6178:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 753,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "6199:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 755,
															"nodeType": "RevertStatement",
															"src": "6192:26:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:4",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:4"
									},
									"scope": 760,
									"src": "6113:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 761,
							"src": "496:5741:4",
							"usedErrors": [
								486,
								491,
								496,
								499
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 762,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 763,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "IBeacon",
							"nameLocation": "224:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "460:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:5"
									},
									"scope": 770,
									"src": "411:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 771,
							"src": "214:257:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1305
						],
						"IERC721": [
							887
						]
					},
					"id": 888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 888,
							"sourceUnit": 1306,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 773,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1305,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 776,
										"name": "IERC165",
										"nameLocations": [
											"288:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1305,
										"src": "288:7:6"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 775,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:6",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 887,
							"linearizedBaseContracts": [
								887,
								1305
							],
							"name": "IERC721",
							"nameLocation": "277:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 786,
									"name": "Transfer",
									"nameLocation": "401:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "410:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "432:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "452:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:6"
									},
									"src": "395:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 795,
									"name": "Approval",
									"nameLocation": "588:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "597:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "620:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "646:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:6"
									},
									"src": "582:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 804,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "820:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "843:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "869:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:6"
									},
									"src": "799:85:6"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1028:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:6"
									},
									"scope": 887,
									"src": "971:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1204:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:6"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1244:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:6"
									},
									"scope": 887,
									"src": "1187:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1861:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1875:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1904:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:6"
									},
									"scope": 887,
									"src": "1835:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2691:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2703:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:6"
									},
									"scope": 887,
									"src": "2651:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3495:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3509:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3521:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:6"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:6"
									},
									"scope": 887,
									"src": "3473:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4027:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:6"
									},
									"scope": 887,
									"src": "4010:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "4418:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "4436:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:6"
									},
									"scope": 887,
									"src": "4391:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "4631:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:6"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "4671:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:6"
									},
									"scope": 887,
									"src": "4610:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4864:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4879:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4920:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:6"
									},
									"scope": 887,
									"src": "4838:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 888,
							"src": "267:4661:6",
							"usedErrors": [],
							"usedEvents": [
								786,
								795,
								804
							]
						}
					],
					"src": "108:4821:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1147
						],
						"Errors": [
							1169
						]
					},
					"id": 1148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1148,
							"sourceUnit": 1170,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 890,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1169,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1147,
							"linearizedBaseContracts": [
								1147
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 897,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1361:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1147",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1147",
																		"typeString": "library Address"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 910,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 917,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1147",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1147",
																						"typeString": "library Address"
																					}
																				],
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 915,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 920,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 912,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1169_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1157,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1521:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 929,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "1548:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 931,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "1570:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:7"
											},
											{
												"condition": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:7",
													"subExpression": {
														"id": 936,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "1596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "1591:58:7",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "1605:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 939,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "1627:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 938,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "1619:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1147,
									"src": "1290:365:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "2589:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 955,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "2606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 954,
												"id": 960,
												"nodeType": "Return",
												"src": "2599:45:7"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2522:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2538:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:7"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:7"
									},
									"scope": 1147,
									"src": "2500:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "3088:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 976,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1147",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1147",
																		"typeString": "library Address"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 979,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3126:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"nodeType": "IfStatement",
												"src": "3098:123:7",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "3133:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 986,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1147",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1147",
																						"typeString": "library Address"
																					}
																				],
																				"id": 985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 984,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 989,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "3204:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 981,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "3154:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1169_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1157,
																	"src": "3154:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 991,
															"nodeType": "RevertStatement",
															"src": "3147:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													995,
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "3231:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 994,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "3245:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 996,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "3298:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 998,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "3272:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1000,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "3291:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3347:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "3355:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1008,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3364:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1005,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3320:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 973,
												"id": 1010,
												"nodeType": "Return",
												"src": "3313:62:7"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3006:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3022:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3041:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:7"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3074:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:7"
									},
									"scope": 1147,
									"src": "2975:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "3621:154:7",
										"statements": [
											{
												"assignments": [
													1023,
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "3632:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1022,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "3646:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1024,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"id": 1028,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "3691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1026,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "3673:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "3740:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3748:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1034,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3757:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1031,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3713:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1036,
												"nodeType": "Return",
												"src": "3706:62:7"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3549:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3565:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3607:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:7"
									},
									"scope": 1147,
									"src": "3521:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "4013:156:7",
										"statements": [
											{
												"assignments": [
													1049,
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "4024:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "4038:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"arguments": [
														{
															"id": 1054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4085:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1052,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "4065:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1058,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "4134:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4142:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1060,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "4151:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1057,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "4107:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1062,
												"nodeType": "Return",
												"src": "4100:62:7"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3946:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3962:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3999:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:7"
									},
									"scope": 1147,
									"src": "3916:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "4595:424:7",
										"statements": [
											{
												"condition": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:7",
													"subExpression": {
														"id": 1076,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "4610:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "4669:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1083,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1071,
																			"src": "4857:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1087,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1067,
																				"src": "4883:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1098,
															"nodeType": "IfStatement",
															"src": "4853:119:7",
															"trueBody": {
																"id": 1097,
																"nodeType": "Block",
																"src": "4908:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1094,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1067,
																					"src": "4950:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1093,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4933:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1096,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1099,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "4992:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1075,
															"id": 1100,
															"nodeType": "Return",
															"src": "4985:17:7"
														}
													]
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "4605:408:7",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "4619:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1079,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "4641:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1078,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "4633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4482:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4506:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4528:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:7"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "4581:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:7"
									},
									"scope": 1147,
									"src": "4437:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "5323:122:7",
										"statements": [
											{
												"condition": {
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:7",
													"subExpression": {
														"id": 1114,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "5338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1123,
													"nodeType": "Block",
													"src": "5397:42:7",
													"statements": [
														{
															"expression": {
																"id": 1121,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "5418:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1113,
															"id": 1122,
															"nodeType": "Return",
															"src": "5411:17:7"
														}
													]
												},
												"id": 1124,
												"nodeType": "IfStatement",
												"src": "5333:106:7",
												"trueBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "5347:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1117,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "5369:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1116,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "5361:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1119,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5247:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5261:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:7"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "5309:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:7"
									},
									"scope": 1147,
									"src": "5221:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "5614:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1132,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "5690:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "5989:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1138,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "6010:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1169_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1160,
																	"src": "6010:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1142,
															"nodeType": "RevertStatement",
															"src": "6003:26:7"
														}
													]
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "5686:354:7",
												"trueBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "5713:270:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:7",
																"nodeType": "YulBlock",
																"src": "5840:133:7",
																"statements": [
																	{
																		"nativeSrc": "5858:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:7"
																			},
																			"nativeSrc": "5881:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:7"
																					},
																					"nativeSrc": "5922:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:7"
																			},
																			"nativeSrc": "5915:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:7"
																		},
																		"nativeSrc": "5915:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:7"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1129,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1129,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1136,
															"nodeType": "InlineAssembly",
															"src": "5815:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "5576:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:7"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:7"
									},
									"scope": 1147,
									"src": "5559:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1148,
							"src": "233:5815:7",
							"usedErrors": [
								897
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1169
						]
					},
					"id": 1170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1169,
							"linearizedBaseContracts": [
								1169
							],
							"name": "Errors",
							"nameLocation": "419:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1157,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "557:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "574:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:8"
									},
									"src": "531:59:8"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1160,
									"name": "FailedCall",
									"nameLocation": "696:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:8"
									},
									"src": "690:19:8"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1163,
									"name": "FailedDeployment",
									"nameLocation": "772:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:8"
									},
									"src": "766:25:8"
								},
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:8",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1168,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "884:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:8"
									},
									"src": "860:33:8"
								}
							],
							"scope": 1170,
							"src": "411:484:8",
							"usedErrors": [
								1157,
								1160,
								1163,
								1168
							],
							"usedEvents": []
						}
					],
					"src": "100:796:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1293
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1172,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1175,
									"members": [
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1178,
									"members": [
										{
											"constant": false,
											"id": 1177,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "1517:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1176,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1488:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1181,
									"members": [
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "1569:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1179,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1540:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1184,
									"members": [
										{
											"constant": false,
											"id": 1183,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1184,
											"src": "1624:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1182,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1595:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1187,
									"members": [
										{
											"constant": false,
											"id": 1186,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "1678:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1185,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1650:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1190,
									"members": [
										{
											"constant": false,
											"id": 1189,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1190,
											"src": "1731:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1188,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1703:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1193,
									"members": [
										{
											"constant": false,
											"id": 1192,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1193,
											"src": "1783:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1191,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:9",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "1756:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "1983:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:9",
													"nodeType": "YulBlock",
													"src": "2018:38:9",
													"statements": [
														{
															"nativeSrc": "2032:14:9",
															"nodeType": "YulAssignment",
															"src": "2032:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:9",
																"nodeType": "YulIdentifier",
																"src": "2042:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1200,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1202,
												"nodeType": "InlineAssembly",
												"src": "1993:63:9"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1923:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:9"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1960:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1198,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1175,
														"src": "1960:11:9"
													},
													"referencedDeclaration": 1175,
													"src": "1960:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1175_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:9"
									},
									"scope": 1293,
									"src": "1899:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2243:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:9",
													"nodeType": "YulBlock",
													"src": "2278:38:9",
													"statements": [
														{
															"nativeSrc": "2292:14:9",
															"nodeType": "YulAssignment",
															"src": "2292:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:9",
																"nodeType": "YulIdentifier",
																"src": "2302:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1207,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1213,
												"nodeType": "InlineAssembly",
												"src": "2253:63:9"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:9",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2183:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:9"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2220:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1178_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1209,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1178,
														"src": "2220:11:9"
													},
													"referencedDeclaration": 1178,
													"src": "2220:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1178_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:9"
									},
									"scope": 1293,
									"src": "2159:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "2503:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:9",
													"nodeType": "YulBlock",
													"src": "2538:38:9",
													"statements": [
														{
															"nativeSrc": "2552:14:9",
															"nodeType": "YulAssignment",
															"src": "2552:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:9",
																"nodeType": "YulIdentifier",
																"src": "2562:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1222,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1224,
												"nodeType": "InlineAssembly",
												"src": "2513:63:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:9",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "2443:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:9"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "2480:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1181_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1220,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1181,
														"src": "2480:11:9"
													},
													"referencedDeclaration": 1181,
													"src": "2480:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1181_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:9"
									},
									"scope": 1293,
									"src": "2419:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "2763:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:9",
													"nodeType": "YulBlock",
													"src": "2798:38:9",
													"statements": [
														{
															"nativeSrc": "2812:14:9",
															"nodeType": "YulAssignment",
															"src": "2812:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:9",
																"nodeType": "YulIdentifier",
																"src": "2822:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1233,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1229,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1235,
												"nodeType": "InlineAssembly",
												"src": "2773:63:9"
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:9",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2703:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:9"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2740:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1184_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1184,
														"src": "2740:11:9"
													},
													"referencedDeclaration": 1184,
													"src": "2740:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1184_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:9"
									},
									"scope": 1293,
									"src": "2679:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "3020:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:9",
													"nodeType": "YulBlock",
													"src": "3055:38:9",
													"statements": [
														{
															"nativeSrc": "3069:14:9",
															"nodeType": "YulAssignment",
															"src": "3069:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:9",
																"nodeType": "YulIdentifier",
																"src": "3079:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1244,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1240,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1246,
												"nodeType": "InlineAssembly",
												"src": "3030:63:9"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:9",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2961:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:9"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2998:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1187_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1242,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1187,
														"src": "2998:10:9"
													},
													"referencedDeclaration": 1187,
													"src": "2998:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1187_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:9"
									},
									"scope": 1293,
									"src": "2938:161:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "3277:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:9",
													"nodeType": "YulBlock",
													"src": "3312:38:9",
													"statements": [
														{
															"nativeSrc": "3326:14:9",
															"nodeType": "YulAssignment",
															"src": "3326:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:9",
																"nodeType": "YulIdentifier",
																"src": "3336:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1255,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1251,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1257,
												"nodeType": "InlineAssembly",
												"src": "3287:63:9"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:9",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3218:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:9"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3255:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1190_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1190,
														"src": "3255:10:9"
													},
													"referencedDeclaration": 1190,
													"src": "3255:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1190_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:9"
									},
									"scope": 1293,
									"src": "3195:161:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "3558:85:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:9",
													"nodeType": "YulBlock",
													"src": "3593:44:9",
													"statements": [
														{
															"nativeSrc": "3607:20:9",
															"nodeType": "YulAssignment",
															"src": "3607:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:9",
																"nodeType": "YulIdentifier",
																"src": "3617:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1266,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1262,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1268,
												"nodeType": "InlineAssembly",
												"src": "3568:69:9"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3491:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1261,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:9"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3536:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1190_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1264,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1190,
														"src": "3536:10:9"
													},
													"referencedDeclaration": 1190,
													"src": "3536:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1190_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:9"
									},
									"scope": 1293,
									"src": "3468:175:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "3818:79:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:9",
													"nodeType": "YulBlock",
													"src": "3853:38:9",
													"statements": [
														{
															"nativeSrc": "3867:14:9",
															"nodeType": "YulAssignment",
															"src": "3867:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:9",
																"nodeType": "YulIdentifier",
																"src": "3877:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1277,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1273,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1279,
												"nodeType": "InlineAssembly",
												"src": "3828:63:9"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:9",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3760:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:9"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3797:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1193_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1193,
														"src": "3797:9:9"
													},
													"referencedDeclaration": 1193,
													"src": "3797:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1193_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:9"
									},
									"scope": 1293,
									"src": "3738:159:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "4094:85:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:9",
													"nodeType": "YulBlock",
													"src": "4129:44:9",
													"statements": [
														{
															"nativeSrc": "4143:20:9",
															"nodeType": "YulAssignment",
															"src": "4143:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:9",
																"nodeType": "YulIdentifier",
																"src": "4153:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1290,
												"nodeType": "InlineAssembly",
												"src": "4104:69:9"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "4029:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:9"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "4073:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1193_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1286,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1193,
														"src": "4073:9:9"
													},
													"referencedDeclaration": 1193,
													"src": "4073:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1193_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:9"
									},
									"scope": 1293,
									"src": "4007:172:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1294,
							"src": "1407:2774:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1305
						]
					},
					"id": 1306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1296,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1305,
							"linearizedBaseContracts": [
								1305
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1305,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1306,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/NftAuction.sol": {
				"ast": {
					"absolutePath": "contracts/NftAuction.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							760
						],
						"IERC165": [
							1305
						],
						"IERC1822Proxiable": [
							466
						],
						"IERC721": [
							887
						],
						"Initializable": [
							253
						],
						"NftAuction": [
							1582
						],
						"UUPSUpgradeable": [
							435
						]
					},
					"id": 1583,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1307,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "51:21:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 254,
							"src": "74:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 436,
							"src": "150:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 888,
							"src": "228:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1311,
										"name": "Initializable",
										"nameLocations": [
											"312:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "312:13:11"
									},
									"id": 1312,
									"nodeType": "InheritanceSpecifier",
									"src": "312:13:11"
								},
								{
									"baseName": {
										"id": 1313,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"327:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "327:15:11"
									},
									"id": 1314,
									"nodeType": "InheritanceSpecifier",
									"src": "327:15:11"
								}
							],
							"canonicalName": "NftAuction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1582,
							"linearizedBaseContracts": [
								1582,
								435,
								466,
								253
							],
							"name": "NftAuction",
							"nameLocation": "298:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NftAuction.Auction",
									"id": 1333,
									"members": [
										{
											"constant": false,
											"id": 1316,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "418:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "410:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1315,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1318,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "472:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "464:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1317,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1320,
											"mutability": "mutable",
											"name": "startPrice",
											"nameLocation": "522:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "514:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1319,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "514:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1322,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "574:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "566:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "566:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "623:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "618:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1323,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "618:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1326,
											"mutability": "mutable",
											"name": "highestBidder",
											"nameLocation": "673:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "665:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "665:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1328,
											"mutability": "mutable",
											"name": "highestBid",
											"nameLocation": "728:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "720:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "720:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "784:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "776:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1329,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "776:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1332,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "832:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1333,
											"src": "824:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "824:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Auction",
									"nameLocation": "374:7:11",
									"nodeType": "StructDefinition",
									"scope": 1582,
									"src": "367:479:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "571a26a0",
									"id": 1338,
									"mutability": "mutable",
									"name": "auctions",
									"nameLocation": "909:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "874:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1333_storage_$",
										"typeString": "mapping(uint256 => struct NftAuction.Auction)"
									},
									"typeName": {
										"id": 1337,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1334,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "882:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "874:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1333_storage_$",
											"typeString": "mapping(uint256 => struct NftAuction.Auction)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1336,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1335,
												"name": "Auction",
												"nameLocations": [
													"893:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1333,
												"src": "893:7:11"
											},
											"referencedDeclaration": 1333,
											"src": "893:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
												"typeString": "struct NftAuction.Auction"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc528482",
									"id": 1340,
									"mutability": "mutable",
									"name": "nextAuctionId",
									"nameLocation": "963:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "948:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 1342,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1020:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "1005:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1341,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "1073:35:11",
										"statements": [
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1347,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "1083:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1348,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1091:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1095:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1091:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1083:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "1083:18:11"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "initializer",
												"nameLocations": [
													"1054:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "1054:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1054:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "1041:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:2:11"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:11"
									},
									"scope": 1582,
									"src": "1032:76:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1243:870:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1365,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1306:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1310:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1306:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1367,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "1320:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1306:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e206372656174652061756374696f6e73",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1327:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905",
																"typeString": "literal_string \"Only admin can create auctions\""
															},
															"value": "Only admin can create auctions"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf6af630decb3b1e240325b8c04c162c8925a727e485d39ae6759f21a0cd4905",
																"typeString": "literal_string \"Only admin can create auctions\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1298:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "1298:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "1402:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_60000_by_1",
																	"typeString": "int_const 60000"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1414:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1421:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "1414:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60000_by_1",
																	"typeString": "int_const 60000"
																}
															},
															"src": "1402:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1425:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															},
															"value": "Duration must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1394:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "1394:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1477:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1491:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1477:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e2030",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1494:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															},
															"value": "Start price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1469:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "1469:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1394,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1609:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftAuction_$1582",
																		"typeString": "contract NftAuction"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftAuction_$1582",
																		"typeString": "contract NftAuction"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1601:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1601:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1601:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "1616:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "1580:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1388,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1572:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$887_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1572:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$887",
																"typeString": "contract IERC721"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1593:7:11",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "1572:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1572:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "1572:53:11"
											},
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1399,
															"name": "auctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "1723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1333_storage_$",
																"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
															}
														},
														"id": 1401,
														"indexExpression": {
															"id": 1400,
															"name": "nextAuctionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1732:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1723:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1333_storage",
															"typeString": "struct NftAuction.Auction storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1403,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1779:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1783:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1779:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1405,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "1813:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1406,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1848:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1880:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1922:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1914:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1914:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1914:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1950:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 1413,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1976:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1982:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1976:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1415,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2018:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1416,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1361,
																"src": "2052:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1402,
															"name": "Auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "1749:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Auction_$1333_storage_ptr_$",
																"typeString": "type(struct NftAuction.Auction storage pointer)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1771:6:11",
															"1803:8:11",
															"1836:10:11",
															"1873:5:11",
															"1899:13:11",
															"1938:10:11",
															"1965:9:11",
															"2005:11:11",
															"2043:7:11"
														],
														"names": [
															"seller",
															"duration",
															"startPrice",
															"ended",
															"highestBidder",
															"highestBid",
															"startTime",
															"nftContract",
															"tokenId"
														],
														"nodeType": "FunctionCall",
														"src": "1749:322:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1333_memory_ptr",
															"typeString": "struct NftAuction.Auction memory"
														}
													},
													"src": "1723:348:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1333_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1723:348:11"
											},
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2082:15:11",
													"subExpression": {
														"id": 1420,
														"name": "nextAuctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "2082:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "2082:15:11"
											}
										]
									},
									"functionSelector": "b1cb48ef",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAuction",
									"nameLocation": "1143:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1165:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1157:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "_startPrice",
												"nameLocation": "1184:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1176:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "1205:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1197:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1226:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1218:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:79:11"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:0:11"
									},
									"scope": 1582,
									"src": "1134:979:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "2200:666:11",
										"statements": [
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "auction",
														"nameLocation": "2226:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "2210:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
															"typeString": "struct NftAuction.Auction"
														},
														"typeName": {
															"id": 1430,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1429,
																"name": "Auction",
																"nameLocations": [
																	"2210:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1333,
																"src": "2210:7:11"
															},
															"referencedDeclaration": 1333,
															"src": "2210:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"baseExpression": {
														"id": 1432,
														"name": "auctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2236:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1333_storage_$",
															"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
														}
													},
													"id": 1434,
													"indexExpression": {
														"id": 1433,
														"name": "_auctionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "2245:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2236:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1333_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2316:14:11",
																"subExpression": {
																	"expression": {
																		"id": 1437,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "2317:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2325:5:11",
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1324,
																	"src": "2317:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1440,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "2334:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2342:9:11",
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1322,
																		"src": "2334:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1442,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "2354:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2362:8:11",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1318,
																		"src": "2354:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2334:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1445,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2373:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2379:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2373:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2334:54:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2316:72:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2068617320656e646564",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															},
															"value": "Auction has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:102:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "2308:102:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1453,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2482:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2486:5:11",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2482:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1455,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "2494:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2502:10:11",
																	"memberName": "highestBid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1328,
																	"src": "2494:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2482:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1458,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2516:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2520:5:11",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2516:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1460,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "2529:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2537:10:11",
																	"memberName": "startPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1320,
																	"src": "2529:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2516:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2482:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426964206d75737420626520686967686572207468616e207468652063757272656e74206869676865737420626964",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2549:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5",
																"typeString": "literal_string \"Bid must be higher than the current highest bid\""
															},
															"value": "Bid must be higher than the current highest bid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5",
																"typeString": "literal_string \"Bid must be higher than the current highest bid\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2474:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:125:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "2474:125:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1467,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2655:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2663:13:11",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1326,
														"src": "2655:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2688:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2680:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1469,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2680:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2680:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2655:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "2651:125:11",
												"trueBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "2692:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1480,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "2746:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2754:10:11",
																		"memberName": "highestBid",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1328,
																		"src": "2746:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1476,
																					"name": "auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "2714:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																						"typeString": "struct NftAuction.Auction storage pointer"
																					}
																				},
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2722:13:11",
																				"memberName": "highestBidder",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1326,
																				"src": "2714:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2706:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1474,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2706:8:11",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2706:30:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2737:8:11",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2706:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2706:59:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1483,
															"nodeType": "ExpressionStatement",
															"src": "2706:59:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1486,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2785:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2793:13:11",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1326,
														"src": "2785:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1489,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2809:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2813:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2809:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2785:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "2785:34:11"
											},
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1493,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2829:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2837:10:11",
														"memberName": "highestBid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1328,
														"src": "2829:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1496,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2850:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2854:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2850:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2829:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "2829:30:11"
											}
										]
									},
									"functionSelector": "9979ef45",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBid",
									"nameLocation": "2154:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_auctionID",
												"nameLocation": "2171:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2163:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2162:20:11"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:11"
									},
									"scope": 1582,
									"src": "2145:721:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "2942:506:11",
										"statements": [
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "auction",
														"nameLocation": "2968:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "2952:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
															"typeString": "struct NftAuction.Auction"
														},
														"typeName": {
															"id": 1507,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1506,
																"name": "Auction",
																"nameLocations": [
																	"2952:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1333,
																"src": "2952:7:11"
															},
															"referencedDeclaration": 1333,
															"src": "2952:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1512,
												"initialValue": {
													"baseExpression": {
														"id": 1509,
														"name": "auctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2978:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1333_storage_$",
															"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
														}
													},
													"id": 1511,
													"indexExpression": {
														"id": 1510,
														"name": "_auctionID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "2987:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2978:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1333_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2952:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3058:14:11",
																"subExpression": {
																	"expression": {
																		"id": 1514,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "3059:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3067:5:11",
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1324,
																	"src": "3059:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1517,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3076:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3084:9:11",
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1322,
																		"src": "3076:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1519,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3096:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3104:8:11",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1318,
																		"src": "3096:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3076:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1522,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3115:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3121:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3115:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3076:54:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3058:72:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e20686173206e6f7420656e646564",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3132:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b",
																"typeString": "literal_string \"Auction has not ended\""
															},
															"value": "Auction has not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e2b3f0a30e3e0817597496cacbc11a7afe7236310606746962b16ecb323cc1b",
																"typeString": "literal_string \"Auction has not ended\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3050:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:106:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "3050:106:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1536,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3259:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftAuction_$1582",
																		"typeString": "contract NftAuction"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftAuction_$1582",
																		"typeString": "contract NftAuction"
																	}
																],
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3251:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1534,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3251:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3251:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1538,
																"name": "auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3266:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																	"typeString": "struct NftAuction.Auction storage pointer"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3274:13:11",
															"memberName": "highestBidder",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1326,
															"src": "3266:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1540,
																"name": "auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3289:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																	"typeString": "struct NftAuction.Auction storage pointer"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3297:7:11",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1332,
															"src": "3289:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1530,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "3213:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3221:11:11",
																	"memberName": "nftContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "3213:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1529,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "3205:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$887_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3205:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$887",
																"typeString": "contract IERC721"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3234:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "3205:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:100:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "3205:100:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3397:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftAuction_$1582",
																			"typeString": "contract NftAuction"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftAuction_$1582",
																			"typeString": "contract NftAuction"
																		}
																	],
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3389:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3389:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3389:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3403:7:11",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3389:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3373:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NftAuction_$1582",
																				"typeString": "contract NftAuction"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NftAuction_$1582",
																				"typeString": "contract NftAuction"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3365:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3365:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3357:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3357:8:11",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3357:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3380:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3357:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "3357:54:11"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1559,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "3421:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1333_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3429:5:11",
														"memberName": "ended",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1324,
														"src": "3421:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3437:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3421:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "3421:20:11"
											}
										]
									},
									"functionSelector": "b9a2de3a",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endAuction",
									"nameLocation": "2902:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_auctionID",
												"nameLocation": "2921:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "2913:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2912:20:11"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2942:0:11"
									},
									"scope": 1582,
									"src": "2893:555:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										389
									],
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "3532:116:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1573,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3595:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3599:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3595:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1575,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "3609:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3595:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2075706772616465",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3616:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																"typeString": "literal_string \"Only admin can upgrade\""
															},
															"value": "Only admin can upgrade"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																"typeString": "literal_string \"Only admin can upgrade\""
															}
														],
														"id": 1572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3587:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "3587:54:11"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "3464:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3518:8:11"
									},
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3490:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "3482:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:27:11"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:0:11"
									},
									"scope": 1582,
									"src": "3455:193:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1583,
							"src": "289:3361:11",
							"usedErrors": [
								16,
								19,
								280,
								285,
								486,
								499,
								897,
								1160
							],
							"usedEvents": [
								24,
								443
							]
						}
					],
					"src": "51:3599:11"
				},
				"id": 11
			}
		}
	}
}